{"pages":[{"title":"","text":"对不起，您访问的页面不存在！","link":"/404.html"}],"posts":[{"title":"实时推送Hive区块链信息到Telegram客户端（2）","text":"在上一篇文章中讲到了整个程序的思路，以及如何读取Hive区块链信息，并回溯N个区块。在这篇文章中讲讲如何在区块信息中过滤信息，并根据自己定义的规则生成待发送的信息。 图源：pixabay 首先，需要定义一些用于筛选信息的规则。这里的一个基本原则就是所定义的规则一定要和程序代码分离，这样最终的程序才容易维护。任何时候想要更改规则的话，只需要修改定义规则的配置文件，而无需修改程序代码。比如： rules: votes: any_to_aafeng: from: &quot;*&quot; to: aafeng exclude: aafeng,aafeng.test min_weight: 20 上面定义了一组规则：除去’aafeng’和’aafeng.test’之外的任何用户对’aafeng’这个用户的点赞，如果点赞额度&gt;=20%，则符合这个规则。 再举一个关于转账的规则： transfers: any_to_aafeng: from: &quot;*&quot; to: aafeng min_account: 1 aafeng_to_any: from: aafeng to: &quot;*&quot; min_account: 0 上面规则定义了：任何向’aafeng’转入的金额&gt;=1，符合规则。任何从’aafeng’转出的金额&gt;=0，符合规则。这条规则对于监测账号的资金变化非常有用。 除了上述的两类关于点赞和转账的规则，你还可以定义很多规则，比如：留言，发帖，提到你等等。道理都非常类似，这里就不一一例举了。 规则都定义了好了之后，我们需要考虑在程序中如何支持这样的规则，下面是对点赞规则的实现： HIVE_BASE_URL = &apos;\\https://hive.blog/&apos; # check if there is a matched vote rule def get_vote_message(vote_rules, transaction): messages = &apos;&apos; try: t_voter = transaction[&quot;voter&quot;] t_author = transaction[&quot;author&quot;] t_weight = transaction[&apos;weight&apos;]/100.00 t_permlink = transaction[&apos;permlink&apos;] for vr in vote_rules: # check exclude if t_voter in vote_rules[vr][&quot;exclude&quot;].split(&quot;,&quot;): continue # check if voting weight matches if t_weight&gt;0 and t_weight &lt; vote_rules[vr][&quot;min_weight&quot;]: continue # check voter and votee matches if (t_voter==vote_rules[vr][&quot;from&quot;] and t_author==vote_rules[vr][&quot;to&quot;]) or \\ (&apos;*&apos;==vote_rules[vr][&quot;from&quot;] and t_author==vote_rules[vr][&quot;to&quot;]) or \\ (t_voter==vote_rules[vr][&quot;from&quot;] and &apos;*&apos;==vote_rules[vr][&quot;to&quot;]): messages = messages + &quot;VOTE: %s --&gt; %s [%.2f]: %s/@%s/%s\\n\\n&quot; % (t_voter,t_author,t_weight,HIVE_BASE_URL,t_author,t_permlink) except Exception as e: traceback.print_exc() return None if messages!=&apos;&apos;: return messages else: return None 通过上面的程序，就可以从区块链信息中过滤出自己感兴趣的点赞信息了。下一篇讲讲如何配置Telegram。","link":"/hive-telegram-2/"},{"title":"实时推送Hive区块链信息到Telegram客户端（1）","text":"Hive的网页客户端有一个消息通知功能（Notificaitons），每次登录Hive之后，就会看到和你账户相关的信息，比如：谁给你点赞，留言，转发，提到你等等信息。 但是，通过这种方式来查看各种通知的体验并不好。首先需要打开hive/peakd的页面，然后需要从菜单中选择查看通知才能够看到。而且，我们不可能总去刷Hive的网页吧。因此，更为便捷和方便的方式就是通过读取Hive区块链的信息，进行分析，找出自己感兴趣的信息，然后发送给自己的Telegram客户端/其他客户端。 要实现这个功能，需要考虑以下这些因素： 1）区块链信息的读取。这部分可以通过调用Hivepy库中的相关功能来实现。2）定义你感兴趣的规则。比如：所有给你点赞的信息你都想得到通知，某位大鲸发的所有贴子你都想得到通知，任何和你账户相关的转账操作。等等等等。3）配置一个Telegram机器人，一旦第二步中有符合条件的消息，发送给Telegram客户端。当然，这里非常灵活，你可以配置自己喜欢的客户端，比如Slack，Discord等等，道理都是类似的。 这篇文章主要来说一说如何检测Hive区块链的信息。 基本思路就是：首先获取当前区块，然后检测当前块中是否有自己感兴趣的信息，如果有的话，存储到一个变量中以便后面发送/处理。之后向前回溯上一个区块，再做同样的检测，如此进行下去，一直检测到指定数目的区块后停止。 这里就涉及一个基本的问题：究竟该向前回溯多少个区块呢？这就取决于你这个程序被执行的频率了。举个例子，如果你这个程序每三秒运行一次，而Hive区块链每三秒生成一个块(印象中Steem区块链是每三秒一块，Hive应该没有变)，那么你的程序就不需要进行回溯了。如果你的程序每一分钟运行一次的话，那么你的程序需要回溯60/3 - 1次。 下面先看看如何读取当前区块： from hive import Hive from hive.blockchain import Blockchain hblocks = Hive() b = Blockchain() cb = b.get_current_block() print(cb) 运行上面程序，可以看到其输出结果为： {&apos;block_id&apos;: &apos;0285ea9524d0cc9609991b4e15f52dfbae4663a5&apos;, &apos;signing_key&apos;: &apos;STM6ZHuTjdyS2vPLsaTyd1bsguGo28jsNcKKASFFTbckBWNKpFqdo&apos;, &apos;timestamp&apos;: &apos;2020-04-07T11:07:54&apos;, &apos;extensions&apos;: [], &apos;transaction_merkle_root&apos;: &apos;ce9c9aea30054f975f69be2bbf852b1804c2eee1&apos;, &apos;transaction_ids&apos;: [&apos;e2134800e3a04dd519d43242d33b938d446508b1&apos;, &apos;e5a979e66d092b5c4c2936bbdc68fa9287a244d9&apos;, &apos;c2cf361839450ab9f3a0176135edeb6d81b9bd90&apos;], &apos;witness&apos;: &apos;blocktrades&apos;, &apos;witness_signature&apos;: &apos;1fd20adda3b1f85adcb864661fef0d696a626b3eb9f4301b0381e69bd3aded604f4d77bfa409554ba4c0a42e43fe368ff992360039f2714e28f5b2fdb20356ad0d&apos;, &apos;previous&apos;: &apos;0285ea94c52b1aeda5ed28063a7c64fb5b881f31&apos;, &apos;transactions&apos;: [{&apos;block_num&apos;: 42330773, &apos;ref_block_prefix&apos;: 4010214059, &apos;transaction_num&apos;: 0, &apos;signatures&apos;: [&apos;1f116bb1406e8479fd0644e7e8288510f4ea61d65bd1614e03fd67e204c0c2fa0f1a4ebb3d0632131005b0c44f5191b75bec768e96b08c6fc983e049c5d1c61864&apos;], &apos;extensions&apos;: [], &apos;transaction_id&apos;: &apos;e2134800e3a04dd519d43242d33b938d446508b1&apos;, &apos;expiration&apos;: &apos;2020-04-07T11:17:45&apos;, &apos;ref_block_num&apos;: 60034, &apos;operations&apos;: [[&apos;vote&apos;, {&apos;weight&apos;: 10000, &apos;voter&apos;: &apos;news-steem&apos;, &apos;permlink&apos;: &apos;20200407t104855949z-post&apos;, &apos;author&apos;: &apos;minimalpris&apos;}]]}, {&apos;block_num&apos;: 42330773, &apos;ref_block_prefix&apos;: 3413890307, &apos;transaction_num&apos;: 1, &apos;signatures&apos;: [&apos;205471fe218b0b09b9a0a2ad860286b0a110ebb6d7ef3df6b624b976506054fc645f1cfe2e371a236cd79bb97d7a7a8682ffa00994d3fefd18bf62289ebc3a3e63&apos;], &apos;extensions&apos;: [], &apos;transaction_id&apos;: &apos;e5a979e66d092b5c4c2936bbdc68fa9287a244d9&apos;, &apos;expiration&apos;: &apos;2020-04-07T11:08:21&apos;, &apos;ref_block_num&apos;: 60051, &apos;operations&apos;: [[&apos;vote&apos;, {&apos;weight&apos;: 4000, &apos;voter&apos;: &apos;retinox&apos;, &apos;permlink&apos;: &apos;it-was-all-about-green-a-restful-pleasant-color&apos;, &apos;author&apos;: &apos;priyanarc&apos;}]]}, {&apos;block_num&apos;: 42330773, &apos;ref_block_prefix&apos;: 3519458629, &apos;transaction_num&apos;: 2, &apos;signatures&apos;: [&apos;204064b9720aa2aa1a8380e7b81bdb0f332a628608db586fd4a9abf1ddd03fa4137d7db804973b639032a0683f1108a1a1ed0b71c1ec4c8dd0df59fd8a6b192cfe&apos;], &apos;extensions&apos;: [], &apos;transaction_id&apos;: &apos;c2cf361839450ab9f3a0176135edeb6d81b9bd90&apos;, &apos;expiration&apos;: &apos;2020-04-07T11:17:48&apos;, &apos;ref_block_num&apos;: 60035, &apos;operations&apos;: [[&apos;vote&apos;, {&apos;weight&apos;: 600, &apos;voter&apos;: &apos;ctime&apos;, &apos;permlink&apos;: &apos;it-was-all-about-green-a-restful-pleasant-color&apos;, &apos;author&apos;: &apos;priyanarc&apos;}]]}]} 如果向前回溯一次，共读取两个块的代码如下： NUMBER_OF_BLOCKS_TO_CHECK = 2 for i in range(NUMBER_OF_BLOCKS_TO_CHECK): print(&quot;block id: %s&quot; % cb[&quot;block_id&quot;]) print(&quot;==========================&quot;) for transaction in cb[&quot;transactions&quot;]: for operation in transaction[&quot;operations&quot;]: print(operation[0]) previousid = int(cb[&quot;previous&quot;][:8], base=16) cb = b.hive.get_block(previousid) 其运行结果如下： block id: 0285eb1b051eb25a0475e4867499303f48d7d77e ========================== transfer vote custom_json vote vote block id: 0285eb1aff2e699579bdd7136493f3a5ea4dedbf ========================== vote vote vote vote vote vote vote vote vote vote vote vote 至此，我们已经可以读取块中的信息，下一篇文章会说说怎么定义感兴趣的规则。","link":"/hive-telegram-1/"},{"title":"园艺精品公园宝墨园游记 - A day trip to Baomo Garden by @aafeng","text":"This article was written by @aafeng / 本文由 @aafeng 撰写提交 About the authour / 关于作者: 自我介绍 Follow the author @aafeng to find the other great articles from him/her.请关注/追随作者查看他/她的其它优质文章。 Original text/原文如下： 各位Steemit好友们，大家好！我是来自英国约克的 @aafeng。非常感谢 @someone 的努力工作，给我这样的steemit新人一个展示自我的机会，让我认识更多的朋友。 Dear steemitians, I’m @aafeng, hope you are well. Many thanks to @someone for publishing my post on behalf of me. 建于清嘉庆年间的宝墨园是一座特色非常鲜明的园艺精品公园，集清官文化、岭南文化、珠三角水乡特色于一体。宝墨园曾于1957年被毁，后于1995年被重建。里面除了锦鲤池，龟池，牡丹园，莲池等景色宜人的景点，文化气息也是极为浓厚，里面有为纪念包公而修建的包相府庙，还有众多岭南文化代表人物的墨宝和遗迹等。 Baomo Garden was first built in the late Qing Dynasty, ruined in 1957, and reconstructed in 1995. It is a masterpiece of South China culture, arts, gardens and architectures. Baomo Garden has a large number of antiques, calligraphy and paintings by well-known masters. 正门进门处的白石仿古牌坊，非常雄伟壮观。 The magnificent white stone antique arch 别小看这个锦鲤池，里面也是有故事的。据说原番禺市委书记梁伟苏退休之后，研究出一套水循环系统并应用于宝墨园。因此在宝墨园中锦鲤数量多，而池水却始终清澈见底。 The water circulation system has been well designed by Liang Weisu. As a result, the water is always clear bottomed out, no matter how many number of koi lives there. 龟池中密密麻麻的小乌龟们： Turtle pond 接下来就到了金碧辉煌，雍容华贵的艺林苑。 Then we went to the resplendent, elegant Yilin Garden. 其实整个宝墨园中的水景都非常别致，园中的水都是清澈见底，一座座石桥横跨在水面上，这是湖光影印中的阁楼： In fact, water is an important part of the sceneries in the Baomo park, the water is clear everywhere with stone bridges cross over it. Here is the attic surrounded by water: 湖中喷泉： fountain in the lake 猜猜这个“荷香馆”是什么地方？哈哈，其实它只是是一间高级的洗手间。知道这是洗手间后再看看图中的那副对联，脑补一下，是不是画面有点美？这座洗手间采用的可是有名的岭南建筑风格：水磨青砖，彩色琉璃二龙抢珠屋顶，还有七彩窗户。 Guess what is this building? Study room? Restaurants? LOL, it is a toilet! This toilet represents a typical Lingnan architectural style, such as the typical bricks being used for the wall, the roof decorated by dragon fighting colored glass, and stained glass. 赵泰来艺术宫气势雄伟，是一座集彩绘、木雕、陶塑、石雕之精华于一体的建筑，建筑的门口有六条气势磅礴的青石双龙盘柱。门前墙壁上有《三国演义》中的故事“桃园三结义”，“三英战吕布”，“官渡之战”，和“舌战群儒”。这是门口墙壁上的三英战卢布壁画： Zhao Tailai Art Palace is a magnificent building demonstrating fine arts e.g. painting, wood carving, pottery, stone carving etc. There are six stone pillar decorated with dragons in front of the building . The front wall is decorated by four murals about “Romance of the Three Kingdoms” . 在艺术宫内有很多瓷器和名家真迹的展示，这是乾隆年间瓷器： Porcelain in Qianlong years 好喜欢这里的建筑： Elegant buildings 我们又到了这里著名的玫瑰园，里面有着各色玫瑰，很多是我从没见过的异样品种： We went to the famous rose garden where is full of a large number of varieties. I have never seen many of them before. 这支玫瑰花的颜色好独特： The color of this rose is so unique 红红的玫瑰： Red rose 这种混色的玫瑰： Mixed colored rose 这里还有一件很吸引人的活动就是可以在鱼池里捉小鱼。每天都有几次的固定时间放一些小鱼让游客捕捉。每到这个时候，经常是孩子和家长一起上。我们也体验了一把，捉到了几条小鱼。 One of the popular activities is to catch fishes in the pond. The staff put some fishes into the pond for tourists to catch a couple of times a day. 晚上和家人一起去吃海鲜，餐厅外面是一个很大的海鲜市场，可以自己选择要吃的海鲜，餐厅给现做。 We went to a seafood restaurant for dinner. 进门处就是各种广式靓汤： Lots of Cantonese soups to choose in the hall. 海鲜的种类非常多，这是花龙虾： Huge amount of seafood to choose 鳄鱼龟 Alligator turtle 这里有各种大螃蟹： Different kind of crabs 据家人介绍，这个大煎堆似乎很有名，似乎还上了一个专门介绍中国美食的电视频道。这是现炸的大煎堆 Large sesame seed ball 餐厅这里环境很好：在餐厅里可以眺望珠江 Very nice and comfortable restaurant with a great river view. Please follow me @aafeng , Thanks! 请大家关注我 @aafeng ，谢谢！ Author @aafeng, Posted By @someone","link":"/---a-day-trip-to-baomo-garden-by-aafeng/"},{"title":"成都熊猫国邮政局寄来的明信片","text":"从成都🐼熊猫国邮政局寄来的明信片历经近一个月终于收到啦. Steepshot IPFS IOS Android Web","link":"/-2018-05-17-11-25-19/"},{"title":"幽静的英国夏日","text":"又是一个艳阳高照的周末，女儿在车中熟睡，我只能在车里陪她。难得有这么悠闲的时间听听各种鸟叫。 Steepshot IPFS IOS Android Web","link":"/-2018-05-19-14-28-08/"},{"title":"9月约克秋意浓","text":"已经有好几年没有在约克大学校园里转过了，这次看到了 @jubi 的这次谷歌点名，顺便在大学校园走了走，体验了一下约克的秋天。秋天应该是约克最美的季节了，金黄的落叶和青青的绿草融合在一起，还有那一座座的古建筑。勾画出梦幻般的画卷。","link":"/10/"},{"title":"汉堡之行 2","text":"汉堡是一座漂亮又舒适的城市，让人还想再来。这是在市中心拍的照片 猜猜这是做什么的？ Posted using Partiko Android","link":"/2-3curvbat/"},{"title":"2017年的第一场雪","text":"总说BBC的天气预报不准，这次难得的准了一次。2017年的初雪如期而至。上午11点左右开始飘雪，后来越下越大，一直下到中午时分，整个大地一片银妆素裹。这让我想起了唐代诗人宋之问《苑中遇雪应制》中的诗句：“不知庭霰今朝落，疑是林花昨夜开。” 这漫天的大雪更让我想起了故乡的常常飘雪的冬天。 拍摄于2017年11月30日 圣诞节快到了，英国人都喜欢White Christmas，也希望几周后的圣诞还能再迎来一场大雪，给人们带来一个节日的惊喜。","link":"/2017/"},{"title":"在家办公的进一步体验","text":"跟国内的朋友们聊天得知，很多地方都开始复工了，有些餐厅也陆陆续续开始营业了。可反观英国这边，这周五全英国的大中小学全面听课，孩子们带回了很多作业，课外书，准备开启在家自学的节奏。众多单位也正式要求员工们开始在家办公。这节奏整个比国内滞后了一个多月啊，希望再过几周也能也能同样赶上国内现在的节奏。。。不过目前我接到的信息是要做好在家宅几个月的准备。。。 虽然在家办公能够节省在路上的时间，但在家的干扰可能比较多，因此首先需要选择一种让自己注意力集中的方式，比如：Pomodoro番茄钟。 对于在家办公族来说，大多数人选择的都是使用笔记本电脑，这样身体和电脑的距离，角度都和使用台式机不一样，因此时间长了，特别容易引起腰部，颈部肌肉的疲劳。我目前仅仅在家工作了两天，就已经感觉到肌肉酸痛了，因此一定要注意多舒展筋骨。 还有一个问题就是，在家宅时间长了，都会觉得很难受，这就要注意各种心理疾病，因此单位提议每天两次休息的时候，大家在slack上聊聊天，分享一下好玩的事情等，单位老大首先带头发了自己烘培的蛋糕。。。 不知道下周孩子们都在家了会怎样，现在想想就头大。。。","link":"/293cvd/"},{"title":"英国的历史文化遗产保护","text":"我家附近教堂的围墙因为年代有些久了，有些部分有些风化。最近有些工人来进行维修，让我感到吃惊的是他们修护的方式。我感觉最快的方式应该就是拆掉重建。像这么矮的墙重建的话估计一天就可以了。可是工人们在这里干了一个多月了还没有结束。主要是他们的维修方式很特别，把风化的砖一块一块的都掏出来，换上新的砖放进去。这样一来进度就大大的慢下来了。 后来和朋友们聊天才知道原来是因为在约克这座文化小城，很多区都是文化保护区。而对文化保护区内建筑物的维修不仅程序复杂，而且对具体的施工标准都是有规定的。要在修缮后最大程度的保持建筑物的原貌。这也是在英国的一些文化名城比如约克，爱丁堡的新建筑很少的原因了。","link":"/2bsmjc/"},{"title":"环保意识要从小培养","text":"最近孩子所在的学校组织了一个有创意的活动，就是用各种可回收物品设计艺术品并进行评比。通过这个活动，既能教会孩子们什么是可以回收的，各种可回收物品的类别，还能锻炼他们的想象力。 周围的环境绝对可以影响一个人的习惯。在国外生活的时间长了，包括孩子都养成了习惯，垃圾一定要分类处理。最近开始尽量避免使用吸管等塑料制品。我们也在有意识的培养他们的环保意识。 地球是大家的，需要我们共同的呵护。","link":"/2px44k/"},{"title":"从看牙医的经历来说说保护牙齿的误区","text":"前两天去看牙医，做了常规检查后，牙医说我的牙龈红肿很厉害，并没有像往常一样给我洗牙，而是建议我再见一下专门的口腔清洁师（又额外的多交了40英镑）。今天见到了口腔清洁师之后，她首先给我洗了牙，同时给我制定了整套的牙齿康复方案。其中最重要的建议就是在每天刷牙的基础上，还要使用一种叫做Interdental brush的小牙刷或者牙线清洁牙齿中间的缝隙。同时建议我每过三个月就要复查一次。 其实客观的讲，以前从来没有仔细想过怎样才能把牙刷的更干净，直到几年前才第一次意识到每个人都需要使用这种小牙刷或者牙线的。可以想一想，普通的牙刷，无论手动还是电动的，都无法清洁牙缝之间的食物残渣，久而久之，可以想象口腔之中会有多少病菌。而且我现在如果去看牙医的话，都是在早上刷过牙后什么东西都不再吃，直到见过牙医后才吃饭，这是对牙医最起码的尊重吧。 那么，你也在使用牙线或者小牙刷吗？ 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/2tohkv/"},{"title":"在成都武侯祠体验三国文化","text":"成都武侯祠：摄于2018年4月5日 这次到了成都，作为从小读三国故事长大的我自然不能错过著名的武侯祠，去感受一下那个英雄辈出的时代，去探望一下故事中常常出现的人物。武侯祠是用来纪念刘备和诸葛亮的，也是中国历史上唯一一座君臣合祭的祠堂。在祠堂中最著名的有岳飞手书的诸葛亮的《出师表》。 三国文化之所以备受全国甚至世界瞩目，甚至有一个说法，在中华传统文化的形成过程中，三国文化为整个中华民族精神的形成再次造血。在三国文化中体现的忠，信，勇敢，等等都是整个中华民族精神的核心。同时也孕育除了四川人的性格：聪明，幽默，勇敢，有血性等群体性格。","link":"/2vghwq/"},{"title":"比特币今日暴涨原因瞎猜测","text":"声明：以下仅代表作者的个人见解，并不能作为您投资的依据！币市有风险，一定要慎重！ 今日比特币又被爆拉一把，最高时逼近$9000，那么又是什么原因导致的呢？ 考虑到交易时间，那么最有可能的就是又有大量国外资金入场。 鉴于最近的贸易战，应该还会有大量资金入场，比特币突破$10000应该指日可待。 当然，具体如何行动，需要你自己的判断，以上全部是作者的个人猜想，不能作为投资依据。","link":"/2ufgpd/"},{"title":"成都传统文化之采耳","text":"这次的成都之行体验到了很多的四川传统文化。其中的采耳就是其中比较独特的一个。在成都，无论是在景点附近小逛，还是在餐厅就餐，经常会有采耳师傅拿着一把特制的工具发出清脆的响声来招揽生意。在宽窄巷子里的采耳师傅格外的多，价格也相对更贵些，60元起。犹豫再三还是没有勇气把自己的耳朵交到别人手里。。。 虽然说白了采耳就是掏耳朵，但经朋友介绍，其实采耳之中还是有很多讲究的。采耳师傅们一般要参加近两年的的培训才能上岗。因此他们会熟知耳朵附近的穴位以及各式工具的使用。通常他们会先使用蜜蜡薄片放置于耳中，利用蜜蜡软化耳垢并使其容易剥落。然后会用精致掏耳勺，小鹅毛刷，软丝等工具让客人的耳朵又爽又痒。下次去一定要体验一把。","link":"/2xteek/"},{"title":"巴黎游记 - 卢浮宫","text":"今日参观了塞纳河边的卢浮宫，这座宫殿承载这法国八百余年的历史，其馆藏横跨几千年，覆盖几大洲。现在卢浮宫可以说是世界上参观人数最多的博物馆。 其门口的玻璃金字塔由贝聿铭设计，将艺术设计和科学结合，堪称其经典之作。他并没有采用埃及金字塔造型，而是采用了几何学中的金字塔。这样不仅美观，节省空间，而且其玻璃质地不仅能够反射出巴黎不断变化的天空，同时为地下宫殿提供了采光。 这里的“镇馆三宝”，其实蒙娜丽莎的微笑知名度似乎更胜一筹，各种纪念品上，宣传册上都是这个迷人的微笑。 儿时最为崇拜的智慧女神雅典娜","link":"/2y3x3a/"},{"title":"儿子写的做饺子的方法，看到第3,4条笑死了","text":"","link":"/3-4-2017723t192128967z/"},{"title":"疫情期间团结互助，共度难关","text":"英国疫情发展至今，大家纷纷在家工作，为了保持心理健康，比平时多加了很多虚拟社交场景。比如：虚拟生日party，虚拟酒吧聚会，虚拟tea break等等。就连有的同事离职，也没法去见上一面，只能在网上道别。在这种种“奇怪”的虚拟场景之外，我也听到，看到了很多感人的小事，闪烁着人性的光辉。 图源：pixabay 首先是对周边一些老人的关注。在冠状病毒面前，他们是抵抗力最弱的群体。按照政府要求，他们需要在家中尽量不要外出。因此，很多人纷纷帮助身边的一些老年人购买生活必需品，主动送至家们口，让众多老人感受到社区的关心。 其次是对那些自雇人群的照顾。我家孩子上的一些课外班，比如芭蕾舞，学费已经交过了，但是目前情况下已经无法继续开班。老师已经发邮件给家长们同意将学费退还。但很多家长提出现在疫情下老师相当失去了收入，倡议大家不再要求老师退还学费了。家长们无一例外的同意，非常愉快的就达成了共识。 还有就是对周边一些小店铺的照顾。由于这些店铺本身客源就少，疫情可能会将它们压垮，因此，如果需要购买生活必备品时，优先考虑一些周边的店铺，能帮的话尽量帮一把。 也有一些周边的人在网络上组织了一些公益性质的免费课程。参与者象征性的缴纳一些费用，该费用会被捐赠给NHS。 诸如此类的事情还有很多，虽然都很小，但却让人非常感动。让我们感受到在此艰难时刻，大家在想着彼此，给了彼此前进的动力。","link":"/3a72oh/"},{"title":"巴黎圣母院","text":"2018年8月31日 天气很好，天很蓝，特别美好的一天，而这些美好，从此却只能存在于回忆、照片之中了。","link":"/3cc2ee9cf0eb7/"},{"title":"从&quot;只要孩子快乐就好&quot;这句话说起","text":"我的邻居是一家英国人，他们有四个孩子。其中有一个和我儿子上同一所小学。让我感到奇怪的是在我儿子在家写各种作业(包括学校布置的和我们自己找的学习资料)的时候，他家儿子不是在门前踢球，就是在骑自行车，要不就是和其他小伙伴们一起玩。反正总之，我感觉他家孩子似乎没有太多学习的时间。感觉和国内家长相比较，有一部分英国的家长似乎对孩子的学习不是很上心。 Image source: pixabay 这让我想起了以前听到过的一句话：只要孩子开心就好。这句话似乎得到了很多家长的赞同。我想邻居也是出于这样的考虑吧。其实仔细一想，这句话有些太过片面，孩子现在快乐，未必代表他/她以后就会快乐。在别的孩子学习或者参加各种课外班的时候，孩子之间的差距已经在默默的拉大，那么在漫长的成长过程中这种差距会越来越大，等到孩子长大了，这种差距可能就已经变得无法弥补。到那个时候，如果和别的孩子相比没有任何优势，升学，就业等等重重障碍的话，那么你的孩子还会快乐吗？记得和一位读硕士的学生聊天时她说道：真的非常感谢当年父母逼我学乐器，让我有了一技之长，通过这个技能结识了很多朋友，也得到了一些好的机会。 也是出于这个考虑，我家孩子上的时公立学校，但周一到周日各种课外活动几乎不断，作为父母的我们几乎也要累死了。但我们期待能够通过我们的努力让他们能够站到一个比较高的起点，能够享受长久的快乐。","link":"/3czvwk/"},{"title":"哥本哈根的地标之一：黑钻石图书馆","text":"这次会议的场所设在丹麦皇家图书馆，也叫做黑钻石图书馆。而这个黑钻石图书馆也是丹麦的地标性建筑之一。 哥本哈根丹麦皇家图书馆，摄于2017.10.16 如果你觉得在这座图书馆中收藏着价值连城的黑钻石，那么你就错了，其实，这座图书馆之所以被叫做黑钻石，主要是因为图书馆建筑的外观都是黑色，同时又多棱角，看上去就像钻石一样。这个黑钻石建筑建于1999年，是在丹麦皇家图书馆原有建筑基础上进行的扩展。图书馆位于哥本哈根市中心临河而建，因此这里的视野非常好。 美人鱼简直就是丹麦的国宝，就连图书馆门口也有小美人鱼的雕像，嗯，不过这个版本的美人鱼似乎难看了点。。。 .图书馆完全对公众开放，可以进入馆内参观。里面空间极大，各种设施非常齐全。在里面学习累了，到咖啡厅找个临河的桌子坐坐，喝杯咖啡也是很惬意的。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/3oebuw/"},{"title":"童子军露营活动","text":"今天儿子第一次参加童子军露营活动，兴奋了好几天! 虽然天公不作美，一大早雨就淅淅沥沥下个不停，但孩子们的心情似乎并未受到影响。一到营地，小伙伴们就钻进帐篷兴奋地铺床，准备睡具，到彼此的“卧室”串门，拿出零食一起分享。 据统计,世界上已经有160个国家建立了童子军组织，世界范围内约有3亿人曾经参加过童子军。如今，童子军成为世界上规模最大、范围最广的青少年组织 。通过各种童子军的活动，可以培养孩子们的良好道德和优秀体格。 期待明天见到儿子，听他说说自己的感觉。","link":"/3pcklr/"},{"title":"英国这里圣诞节都吃些什么？ - 月旦评","text":"圣诞节前，单位餐厅提供的都是圣诞套餐，同时餐厅装饰的也很有节日氛围，每套餐具中还包括了一个圣诞帽和Cracker。 首先在英国的传统中，圣诞餐肯定要有烤火鸡。其实最早英国是吃烤鹅的，后来烤火鸡从美国传过来慢慢替代了传统的烤鹅。当然，有些时候也用烤鸭，烤鸡来替代。如果是一个大家庭，会在火鸡肚子中放上一只鸭子，鸭子肚子中再放上一只小鸡。这样一层套一层，可以慢慢的吃。 和烤鸡配套的菜往往选用烤土豆，胡萝卜，还有Sprout，就是超级小的圆白菜，有时候也配上西兰花。 餐后的甜点则是著名的Mince Pie。这是一种圣诞期间的著名小点心。里面的馅是葡萄干，杏干，苹果等水果做成的。甜的要死，我和同事们开玩笑说，一年我只能吃一个。而我办公室里的英国同事们超级喜欢这种小吃，办公室里自从12月份就没有断过。 还有一道著名的餐后甜点就是Christmas Pudding。它是由面团，各种水果，白兰地酒混合制成的。其实除了过甜外，我还是很喜欢它的味道。我这份上面还撒上了一些custard，吃起来就没有那么甜了。","link":"/3pihdb/"},{"title":"我的一次申请丹麦申根签证的经历","text":"由于十月份要去哥本哈根开会，因此去申请丹麦的申根签证。本来以为会是非常简单的，可是却在曼城的签证中心出现了些小波折，还好今天顺利的拿到了签证。下面把我的经历和大家分享一下。 由于是去开会，因此想到肯定要申请Business Visa，看了一下网站上列举的申请材料列表，基本上没有什么疑问。只是在会议的邀请信问题上不是很清楚，官方的要求是这么说的： Conferences: confirmation that you have been accepted for the conference and paid the registration fee. 单位已经帮我交了注册费，想想应该就没有问题了吧，不过还是打电话确认了一下。签证中心的人说没有问题，可以不带邀请信。 于是就把所有材料都带齐了，去了离我最近的曼彻斯特签证中心。其实现在很多国家的使馆都把签证业务交由这些签证中心来统一处理。到了之后里面的人很少，等候区也很整洁舒适： 等叫到我的时候，把所有资料都准备好了，见到了一位印度小哥。在看材料的时候，先是和我要银行账单。可这个在材料列表中明明没说啊，我的雇主给我开的信中明确说到了会cover我在会议期间的一切费用。但这个也没什么可争的，为了以防万一我还是带了银行账单。接下来，小哥管我要邀请信，我一下就方了，这明明打电话确认过的啊，我把会议的注册确认信给他看，可这位小哥就是一根筋，而且和我说今天没法给我办，让我把邀请信拿到后再重新来申请。我当时就有些火大，但还是控制住了自己的情绪，和他再次解释是他的同事和我确认的不需要邀请信。后来这位小哥看我这么坚持，就进去和他们的经理请示了一下。出来后和我说可以给我把材料交上去，但还让我签了一封确认信，主要就是说我知道可能缺会议的邀请信，如果耽误签证的申请甚至拒签后果自负之类的，OK，我还是签了并把材料交了上去。 回家的路上就赶紧给会议方发了封信，让他们帮我出封邀请信。很快对方回复说第二天就会把信寄出来，这样从丹麦到英国应该有个3，4天吧。结果没有想到周末就收到了签证，还是多次入境的。结果我的邀请信还没有收到这个签证就拿到了。。。 Anyway，签证终于拿到了，非常期待美人鱼的故乡之行。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/3rhf2r/"},{"title":"风雨同舟，我们将最终战胜病毒","text":"自从冠状病毒爆发后，截止到今天，已经在英国发现了8例，英国形势似乎也越来越严峻了。 身在海外的华人时时刻刻在关注国内的疫情。在此紧要关头，各种社团纷纷组织捐助活动，尽一份心，尽一份力，希望疫情早日过去。到目前为止，已经在两个不同的渠道进行了捐助，就连孩子们也拿出了自己的压岁钱，献上了一份爱心。目前捐助的第一批物资已经抵达武汉。 2020年的春天已经来临了，街边的水仙花已经悄悄的露出了头。希望疫情早日过去，武汉加油，中国加油！","link":"/3set9p/"},{"title":"自己花园种的纯天然韭菜盒子","text":"自从家中花园种上了韭菜，就时不时的能吃到韭菜盒子。 这是我家花园菜地里的韭菜，绿油油的很喜人： 其实还是很喜欢这种感觉的。每年春天我都会在自家花园中种下各种蔬菜，比如： 西红柿，角瓜，豆角，青椒，茄子，南瓜等。偶尔也会种些玉米，向日葵。除此之外，花园中还有苹果树和梨树。可能自己水平有限吧，菜地产量并不高，整体下来丝毫不能省钱，因为毕竟要花好多时间来打理菜地，同时也要买不少肥料土，种子等。但却很喜欢这种感觉。夏季中孩子们每次去花园玩如果不能收获什么回来的话也会有些小失望。 最让我解馋的还是自己种的韭菜，韭菜馅的饺子和馅饼是我和媳妇的最爱。因为自己定居的小城这里中国超市的韭菜不仅贵还经常断货。而韭菜似乎很喜欢英国这种阴冷的气候，长的非常好。","link":"/3v1n8o/"},{"title":"加密货币租赁平台","text":"声明：以下仅代表作者的个人见解，并不能作为您投资的依据！币市有风险，一定要慎重！ 对于持有加密货币的朋友们来说，最常见的无非是两个选择，长期持有，或者进行交易获利。对于希望长期持有的朋友是否想过，如果把现金放在银行是有利息的，那么你的加密货币是否也应该产生利息呢？答案其实是肯定的。下面就介绍几个可以赚取利息的交易所： Gate.ioGate.io的理财和借贷市场是一个用户对用户的借贷平台，平台不参与任何借贷和放贷。可以看下当前系统中USDT的挂单： 据官网说USDT最高时年化达到 72%! 余币宝余币宝是OKEx.com打造的一款可随存随取的币币增值产品。用户可通过将闲置币转入余币宝的方式，每天享受余币宝带来的收益，具有随存随取，按天计息，无最低存币限制的特点。可以看到，USDT的年化率达到15%： 类似的平台/交易所还有很多，有加密货币，又不打算交易的朋友可以考虑一下。","link":"/3snxoy/"},{"title":"带孩子做科学实验系列之：水的张力","text":"今天给大家介绍一个简单的实验来验证水的张力。 图源：pixabay.com 准备首先，需要准备一个小碗，在碗中盛上清水。 同时，还要准备一些曲别针。 开始实验首先，让孩子自己尝试一下能否把曲别针直接平放在水面上。直接把曲别针放在水面上的话会沉到碗底。 接下来撕一下块纸巾，大约三厘米见方，轻轻平方到水中，然后迅速把一个曲别针平放在纸巾上。 轻轻把曲别针下面的纸巾撤掉，你看到了什么？曲别针已经浮在水面上了！ 这个实验说明了水分子之间的张力可以支撑一定重量的物体，如果物体重量正好没有超过水面张力所能承受的范围，就会浮在水面上。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/3yjgz5/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have completed translation of “v8.md”. The source string is about the v8 module which exposes APIs that are specific to version of V8. The translation is quite straightforward to me. Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my tenth contribution to Node.js project and I have translated 1122 words in this submission. Before: I have been working on the api folder and have translated 10232 words before this submission. After: The number of words being translated becomes 1122. Total: 11354 - 10232 = 1122 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/41eanz-simplified-chinese-translation-of-node-js-10-1122-words/"},{"title":"近距离观看热气球升空","text":"点火升空瞬间非常壮观。 Posted using Partiko Android","link":"/41hco2o9/"},{"title":"圣诞期间，流光溢彩的霍华德城堡","text":"每年圣诞节前去霍华德城堡(Castle Howard)游玩，并和圣诞老人见面，成了我家的一个传统。今年也不例外，下午约好了朋友一起来到霍华德城堡。 到了天已经黑了，上图是从pixabay找了一张天亮时城堡的照片 霍华德城堡到现在已经有了近300多年的历史，属于约克三大家族之一的霍华德家族。是约克这里的热门景点之一。霍华德城堡还是很多电影的取景地，比如《故园风雨后》（Brideshead Revisited)，主人公们聚会喝茶以及游泳场景的拍摄地就选在了霍华德城堡。 为了迎接圣诞节，霍华德城堡处处装扮的流光溢彩，在城堡内部有众多豪华房间，里面有燃着熊熊炉火的壁炉，温暖的烛光，以及现场演奏的音乐。标志性的7米多高的圣诞树上，装饰了超过3000个小挂饰，让整个大厅美的让人窒息。 每年霍华德城堡内部装饰的主题都不一样，今年的主题是化妆舞会的面具，整个大厅内成了各个雕像的“化妆舞会”。","link":"/48sln1/"},{"title":"就喜欢你看不惯我又干不掉我的样子","text":"在翻看前面的北京蓝天城照片时，也看到这这组吾皇驾到的照片。真心喜欢这组动画形象，最有意思的就是那句经典台词：“就喜欢你看不惯我又干不掉我的样子”。记得当时孩子们在那玩了将近一个小时。其实当时也不太清楚这只大猫的来历，只是喜欢这组形象而也。后来查了查才知道原来这只大猫原来也是网红！它由著名插画作家白茶所画，那本经典的《就喜欢你看不惯我又干不掉我的样子》一经问世就狂销了40万册。大悦城展示的这组漫画形象体现了漫画作家的生活场景。 哈哈，“抱朕，还等朕翻你牌子呐？来，抱抱 参见万睡，为何不跪？超级喜欢吾皇的“王之蔑视”眼神。。。 这位将军是做什么的呢？ 大猫的厨房倒是挺不错： 这个电脑桌就是按照白茶书房里的样子而造，孩子们都很喜欢这个书房： 同样也是网红的大狗巴扎黑内心阴影面积估计无法计算。。。 吾皇现在很忙啊： 孩子们和吾皇合影 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/4chytv/"},{"title":"说说我对曼彻斯特这座城市的印象","text":"因为10月份要去哥本哈根出差，所以今天去曼城的丹麦签证中心去申请申根签证。虽然曾经去过几次曼城，但似乎喜欢上Steemit之后，到了哪里都会从另外一个角度来观察。哈哈，谁说的来着，Steemit有毒。。。 第一个印象就是曼城这座城市和足球之间的渊源。似乎很多人说到曼彻斯特，首先想到的就是曼联和曼城这两只英超球队。其实足球对这座城市的影响可以说是无处不在的。就连街边都是球星的大幅广告。 就连去签证中心的路上，随随便便的都能看到足球活动场地： 第二个印象就是由于受到英国工业革命的影响，曼城依然保留了很多工业革命的痕迹，虽然那个“蒸汽和汗水”的时代早已远去，但历史在这座城市留下的印记确实随处可见。 仍然在运作的货站: 第三个印象就是这是一个多元化的城市。印度人不愧为英国人数最多的少数民族，在曼城的印巴区，就会然你有一种错觉，似乎到了另外一个国家。而曼城的中国城则是英国最大的中国城之一。虽然听朋友提过似乎曼城的中国城比伦敦的中国城还要大，但毕竟这个也不太好衡量，而且也是无意义的比较，也就没有深究过。但是曼城的好吃中餐馆真的是太多了。这次，经老婆的提议，去的是以各种面食和小吃著名的汉朝。 去吃饭的路上，途径曼彻斯特大学的建筑： 汉朝小吃城： 由于这里的价格很便宜，因此有很多来这里吃午饭的曼大中国留学生，可能是因为我们错过了饭点，因此人不是很多： 非常地道的鸡蛋煎饼： 家乡味道的肉夹馍： 他家的羊肉串不仅味道好，而且肉质非常嫩： 烤猪蹄： 麻辣香锅也是完胜一些川菜馆的香锅： https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/4dbk8r/"},{"title":"说说丹麦人的自行车情节","text":"这次来哥本哈根开会，充分感受到了丹麦人对自行车的情有独衷。会议午餐的时候和丹麦同事们聊天才逐渐了解了丹麦人对自行车的独特情节。其实，丹麦人在上个世纪二三十年代就开始大量的使用自行车作为交通工具了。后来随着汽车的普及，很多丹麦人选择了开车，自行车就慢慢的被人们遗忘了。后来70年代的一次石油危机让很多汽车变成了废铁，也让丹麦人感受到了汽车这种依靠石油的交通工具的脆弱。于是很多人又开始提倡保护环境，重新拾起了对自行车的热爱。 清晨的哥本哈根街头，于2017.10.16 在现在的哥本哈根，设有很宽的专用自行车道，宽度应该够一辆小汽车行驶的。同时在十字路口也针对自行车设计了专用的弯道。因此很多人都选择骑自行车上班和出行。当然也听到了一些关于自行车的趣事。比如： 不仅骑自行车的人经常抗议开车的人破坏环境，同时它们还经常内讧，骑车速度快的嫌弃骑车慢的耽误他们的时间，而骑车慢的反倒觉得骑车快的人不够安全。 这里的共享单车也很盛行，同时自行车上还有导航系统，还能告诉你哪里有停车点。感觉越来越喜欢这座城市了。","link":"/4dnfha/"},{"title":"再次造访剑桥","text":"因工作原因再次造访剑桥。难得在英国的冬日碰上这么一个阳光明媚的天气，剑桥这座小城显得更加漂亮了。 虽然刚到十一月，就能感受到圣诞气氛了。 路过剑桥大学著名的国王学院。当初来剑桥玩的时候是从游客入口进入参观的。今天从其后面的草坪看过去，另有一番味道。 今天在工作间隙参观了大学，很奇怪的是图书馆中竟然没有太多学生。难道剑桥的学霸们太聪明了，都不用到图书馆学习？ Posted using Partiko Android","link":"/4fnmsa4u/"},{"title":"说说英国乒乓球俱乐部的那些事儿","text":"由于乒乓球是我多年来的爱好，因此在十几年前踏入英国的时候就开始留意英国各个城市乒乓球俱乐部的信息。这么多年来曾经加入了多家乒乓球俱乐部并参加了各种比赛。下面是我所在的团队在2016/2017获得团体冠军时所获得的奖牌： 在英国要想参加各种俱乐部的比赛，就不得不提一下英国乒乓球协会。英国乒乓球协会创建于1980年。协会由一部分志愿者来运营。在乒乓球协会中首先出现的是资深球员之间的比赛，发展至今日，成了英国乒乓球的甲级联赛。后来，又出现了少年组，老年组，和女子之间的各种竞赛。 对于一般的乒乓球爱好者，要想参加当地的各种比赛，需要： 首先，在英国乒乓球协会官网【官网地址】注册账号，并缴纳会员费，一年大约十几英镑吧。 其次，给你打算加入的当地俱乐部缴纳会员费，这个费用主要是用来场地租赁，以及相关活动所需。这个费用根据俱乐部而异。如果加入的是各大学的会员，由于有大学的补贴，会员费一般会便宜不少。以我所在的城市约克来说，大学的会员费是每年40英镑，而其他俱乐部则将近100-200英镑。 加入了会员后，你就可以参加俱乐部组织的各种训练了。 同时，俱乐部内部会根据球员的水平把队员分配到不同的团队，参加不同级别的比赛。以我所在的约克为例，这里共有4个级别的比赛，Division 1, Division 2, Division 3, 和Division 4。 虽然乒乓球是我们的国球，但其实在英国这里的业余比赛中，很多外国人的水平还是很高的。 我这里说的是业余选手。我曾经在Division 1打过比赛，胜率不是特别高，感觉有的英国人/德国人看起来打的没有太大特色， 就是典型的横板两面拉打法，但是对方就胜在失误少，经常是一场下来貌似自己的进攻多，但最后输球的还是我。曾经有两个国内受过业余体校训练的本科生来这里参赛，在Division 1的胜率也就是将近80%左右。 除了各地的俱乐部之间有联赛，在英国的各大学之间也有联赛，如果是客场的话，团队成员就需要长途跋涉到另一个城市去参加比赛。 基本上在英国各地的乒乓球俱乐部中都会有孩子们的各种兴趣班，家长可以带着孩子学习乒乓球。这是我儿子在俱乐部练习： https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/3zhpfz/"},{"title":"仰望星空，你可曾想过宇宙的尽头是什么？经典科普书推荐 - 极简宇宙史","text":"最近朋友送了我儿子由霍金弟子所著的《极简宇宙史》这本书，翻看了一下目录，感觉对于上小学的儿子来说有些深奥，但里面讲述的内容非常好，因此打算自己先读上一遍，再慢慢给儿子讲解。谁想到自己一开始读这本书就放不下了。本来计划是利用上班时候的午休时间来读，结果就像看小说一样上了瘾，把所有能挤的时间都利用上很快就读完了。这本书解答了很多我在一直思考却得不到答案的问题，比如宇宙的尽头是什么？地球的寿命怎样？还有一些我从来没有想到过的问题：比如：如果把地球压缩成一个黑洞，那么地球会变成多大？再比如：你知道月亮是地球上掉下去的一块肉，嗯，不，石头吗？还有，你知道吗？在地球上是不可能炼制出金子来的，这是为什么呢？ 这本畅销书讲述了我们所在的地球，太阳系，银河系，以及更大的宇宙空间的形成过程，以及在未来会是怎样的。同时也涵盖了很多微观世界的科学知识，比如磁场的原理是什么？为什么人可以站在地板上不会掉入地板中而无法站在水面上？还通俗的解释了爱因斯坦的相对论以及牛顿万有引力定律的局限性。当然，就像爱因斯坦自己所说的一样，相对论本身也是有局限性的。是不是被我安利了？这本书的中英文版本都有，国外可以在Amazon买到，国内可以在当当买到。这本书，你绝对值得拥有。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/4prmng/"},{"title":"全副武装去了趟超市","text":"最近英国的疫情越来越严重，在家中已经宅了近两个星期。但今天家中的蔬菜水果快吃光了，决定去超市补充一些生活必需品。 图源：pixabay 出发前做好了充足的准备，一次性手套，口罩，墨镜一应俱全。嗯，没错，是墨镜。因为没有买到护目镜，所以用墨镜来替代。 开车到了超市后，发现超市门口已经有很多人在排队了。大家都非常注意，彼此之间保持了两米以上的距离。感觉气氛有些压抑，没有人说话交谈，只是跟着队伍在默默的往前移动。 图源：pixabay 超市门口有员工在控制人数，等了快半个小时后终于轮到我了。进去以后，超市里的人很少。这主要是要保证”social distance“吧。相比较于两周前大家纷纷拥堵在超市中囤积生活必需品时，区别简直太大了。超市的物品非常全，可以说是堆积如山。就连两周前的紧俏商品-卫生纸也有很多。由于继续囤积了一些生活必备品，因此，这次消费的金额差不多是平时购物时的两倍。 到家后并没有对所有物品进行消毒处理，而是把物品全部先放置到了车库中。打算放上三天后再开始使用。对于一些需要在冰箱中保存的物品进行了消毒处理后放在了家中。之后按照专家的推荐边洗手边唱了两遍生日歌。。。 这次购物应该足够全家人吃上两个礼拜了。下面打算尽量选择网购，老老实实在家中宅上几个星期再说吧。。。","link":"/4vss8x/"},{"title":"很多事情就和打球一样，如激流勇进，不进则退","text":"图片：我今年的新队服 我今年参加的乒乓球俱乐部联赛赛季已经过半，比赛结果比自己预期的差了不少。整体感觉自从上个赛季晋级后每场比赛都难打了很多。自己在比赛时对球的处理稍有犹豫被动几乎会毫无例外的会失分。同时也感觉原来打球习惯中的一些小弱点在高手面前都会被抓住，然后被暴打。。。随着比赛一场场的进行，慢慢也就适应了这种和高手互博的感觉，处处抢占主动，发挥自己长处，反倒感觉每场球都打的很痛快，就算有时候实力不如人会输球，但感觉输的不窝囊。 其实生活工作中很多事情都是这样，一味被动求稳往往最终的结果会很差。只有不断主动出击，彻底发挥出自己的实力，才有可能达到预期的目标。用一部我很喜欢的电视剧中的观点来说，就是要亮剑。不论结果如何，一定要把自己的剑亮出来。","link":"/4xdwiz/"},{"title":"带孩子做科学实验系列之 - 物体的密度(试验结果能喝喔)","text":"有时候密度这个概念对小朋友们来说很难理解。下面这个试验能够帮助小朋友们理解密度，而且试验的结果不仅好看，还很好喝！估计没有哪个小朋友会对这个试验说不了。 试验材料准备首先你需要三种不同的果汁，注意这里需要鲜榨果汁，那种用果粉冲的果汁不行的。 为了避免有两种果汁密度非常相近实验失败，建议多买一种作为备用。 果汁的密度由里面所含的糖分和密度所决定。我这里选择的是葡萄汁+Berries，桔子汁，和桃+草莓汁。 接下来你还需要一个特别细的玻璃杯，越细这个试验越容易做成功。 最后你需要一个吸管。我用的就是买Calpol带的。 试验步骤首先让孩子看一下每瓶果汁的配料表，主要看看里面的水份百分比，含糖量，果肉比重等，让孩子自己估计一下比重。 第二步就要找一个干净的杯子，倒入一种果汁A，大约也就是两三厘米深就可以，然后用吸管吸上一滴另外一种果汁B，滴入杯中，观察一下B是会沉底，还是漂浮在A上面。如果沉底，说明B的密度大于A，如果B浮在A上面，说明B的密度小于A。还有另外一种可能，就是两种果汁的密度是一样的，这种情况下你就需要再换另外一种果汁了。重复这个步骤直到你找到三种不同密度的果汁。 我这次选用的果汁按照密度由大到小分别为： Red Grape &amp; Berries, Clementine, Peach &amp; Strawberry. 找另一个干净的杯子，把三种果汁按照密度由大到小的次序倒入杯中，你就会看到果汁分成了三层，互不影响！注意在倒入第二种和第三种果汁的时候要使用吸管，不能直接用瓶子倒！ 否则果汁会混在一起！ 实验很成功，孩子们在分享胜利果实！ 总结这个试验说明了对于同等体积的液体，它们里面所含有的物质是不尽相同的。100毫升的果汁里面所含有的成份就比同样体积的水中的成份要多，因此也要重。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/4yeuv2/"},{"title":"和俏皮可爱的圣诞精灵们的约会","text":"在西方的圣诞传统中，有一群俏皮的圣诞小精灵，他们的任务是查看孩子们是不是听话，并把结果报告给圣诞老人。圣诞老人据此来决定是否要给小朋友们送圣诞礼物。当然，有些时候这些圣诞小精灵们会做一些调皮的事情。。。 上个周末和朋友家一起带着孩子们去了周边的一个精灵村，去看看这里淘气的精灵们，嗯，当然还有圣诞老人。 没有想到这里的人如此多，大家围着这个精灵村的向导，听着他给大家讲述精灵的故事： 精灵向导做的第一件调皮事就是“指羊为鹿”，非要说这是Reindeer… 接着带着众多小朋友们来到了精灵村的入口： 和众多精灵们见面： 互动环节来了，这些调皮的精灵们把有些礼物搞混了，需要小朋友们来帮忙： 这个礼物是巧克力？？？足球？？？ 这个精灵装扮成了什么？猜猜看。。。 这个精灵装扮成的天使也有些太，彪悍了吧 参观完毕还有Mince Pie和Sherry","link":"/4ywdjf/"},{"title":"维京人如何消磨时光","text":"今天在陪孩子写作业时又跟着学习了一下维京人的历史。今天主要是讨论维京人如何消磨时光。 维京人有很多游戏，比如：打球，举重，摔跤。 但游戏经常变得暴力和血腥，偶尔也会丢掉性命。好彪悍的民族。。。 图源：http://sciencenordic.com (by Mari Pedersen) 维京人的游戏经常是非常暴力，甚至残酷的。在游戏中经常会以参与者的严重受伤或死亡而结束。这些游戏要展示的就是男性的力量，灵巧性，和策略。以球类游戏为例，在Egill Skallagrımsson中记录了一个这样的故事：一个12岁的男孩和另一个更年长的男孩在玩游戏中处于下风，因此发怒而用球拍攻击对方，对方自然毫不示弱。看到这样占不到便宜，于是掉头就跑。。。嗯，不是真的逃跑，而是跑去找了把斧子，回来直接把对方给砍翻了。。。","link":"/5a2a301bec57/"},{"title":"一年一度的万圣节又要来了！","text":"周末去超市，各种万圣节的装饰已经上架开始促销了。这是在超市门口见到的各式南瓜。最中间的那个南瓜爷爷最初以为是假的，走进了一看才知道是真真正正的南瓜！顺便查了一下最大南瓜的世界记录，竟然有2,624.6磅，也就是1,190公斤！ 图片拍摄于2019年10月 临近万圣节，最兴奋的还是孩子们。目前已经收到孩子就读小学的通知，要举办南瓜灯比赛，还有万圣节趴。同时孩子们参加的各种课外班，芭蕾课等等也都会举办各种万圣节活动。 图源：pixabay 当然，孩子们最期盼的还是万圣节当晚的Trick or Treat要糖活动。英国当地有个不成文的习俗，如果你不打算让孩子们上门要糖，就不要做任何万圣节装饰，也不要点南瓜灯。反之，如果家中装扮的很万圣节，就表示期待小朋友们来上门要糖了。 在万圣节期间，英国这里最经典的食物就是太妃糖苹果Toffee Apple，苹果酒，还有南瓜派了。感觉和孩子们一样有些小期待了。","link":"/5dhuvm/"},{"title":"英国的童子军","text":"儿子参加英国的童子军Scouts已经满一年了，获得了各种我认识和不认识的徽章。这次获得了Bronze Chief Scouts Award。同时我们全家被邀请参加颁奖典礼。其实这种活动名为童子军，参与组织的人各种年龄段都有，从6岁的小朋友到两鬓斑白的老人，都在为这项活动贡献力量。 英国的Scouts是针对年龄为6-25岁青少年的一个组织。在他们组织的各种活动中，给年轻人们提供各种经历，甚至是冒险。通过一系列活动锻炼孩子们的各种能力，比如：团队协作，时间管理，领导力，创造力，计划能力，沟通能力。 长期参加这项活动的孩子在升学就业中能获得更多优势。 童子军的各种活动包括皮划艇，海外考察，摄影，攀登等。 参加这些活动，可以学习生存技能，急救，计算机编程，甚至是如何驾驶飞机。通过这些活动可以结交朋友，体验更广阔的世界。 童子军活动的成功在很大程度上要归功于一些成年人志愿者，他们通过各种方式来贡献自己的力量，同时也享受各种活动经历，认识新朋友。其实很多童子军志愿者都感觉能够从参加的各种活动中得到各种能力的提高。","link":"/5ekhhy/"},{"title":"来看看英国小学生的英语和数学试题","text":"到了期末了，孩子也放假了，同时也收到了孩子二年级SATS考试成绩。看了一下，感觉数学很简单，英语真心不容易啊。。。 来，先看几道算术题： 再来看几道Math reasoning，数学方面的推理题： 英语方面主要考的是拼写，语法，句法等： 除此之外，还有英语的阅读理解，感觉非常像雅思考试。 国内的家长们怎么感觉？国内二年级的语文考试难度和这个比怎样？","link":"/5fqjkb/"},{"title":"也来说说我的兴趣：乒乓球","text":"我最大的兴趣爱好就是打乒乓球，自从上小学开始打到现在，这个兴趣从没有间断过。虽然没有受过系统专业的训练，但由于机缘巧合，曾受过专业教练的指导，因此这么多年过来，在各种业余比赛中也取得了一些成绩。现在乒乓球不仅仅是我自己的兴趣所在，我还在努力培养自己孩子对乒乓球的兴趣。 由于父母都是中学老师，因此在我很小的时候他们就带着我去学校学习打乒乓球。当时的条件有限，很多乒乓球台都是室外的水泥台。但也就是在这些水泥乒乓球台上，在和小伙伴们一次次的练习中，我对乒乓球的兴趣逐渐被培养起来了。 后来上大学后，遇到了很多志趣相投的同学，我自然也成为了大学的乒乓球场地的常客。记得在校内运动会的时候，经过和队友的努力，拿到了全校的团体冠军，当时的感觉真的是把棒极了。 参加工作后更是以球会友，结交了不少球友，球技也在缓慢的提高中。到了英国这个乒乓球的发源地才发现这里的乒乓球爱好者竟是如此之多。也就自然而然的加入了当地的乒乓球俱乐部并参加了俱乐部之间的联赛。 在我的引导下，儿子似乎也喜欢上了乒乓球，回国期间带他参加了国内的训练班，在专业教练的指导下，孩子很快就培养起了对乒乓球的信心。 对于这个兴趣，我会一直坚持下去的！","link":"/5hl12q/"},{"title":"开始在家办公","text":"英国疫情一天比一天严重，很多欧洲国家(目前不包含英国)的学校都已经听课，很多英国公司也都鼓励员工在家办公。 我所在的单位今天开始试运行如何在家办公。在此之前已经做了很多准备，比如：工作如何计划，团队成员之间的协作，沟通方式等等。 但是，在真正试行的时候，还是遇到了一些问题。比如：有的服务器是有访问权限限制的，只有内网中的个别IP地址可以访问，现在远程工作通过VPN连接的话，IP地址发生了变化，虽然有很多方法可以解决，但在实际操作的时候还是有很多事先想不到的问题的。 对于在家工作这个问题，我真的是很矛盾，就工作效率而言，个人更喜欢在办公室工作。但在目前形势下，尤其是英国目前的疫情下，希望所有的工作还是在家更好吧。 现在进一步的感受到，岁月静好，能够安安心心的工作，孩子们快快乐乐的上学是多么美好的一件事。","link":"/5hvaoh/"},{"title":"哥本哈根嬉皮村游记","text":"会议期间，在丹麦同事的推荐下来到了这里著名的Christiania嬉皮村小逛。 说到Christiania的起源，就要回溯到上个世纪60年代的嬉皮风。 当时一些叛逆的年轻人非常抵触盛行的拜金主义， 古板的教育体制， 还有核武等种种令人不满但却无法改变的社会问题， 以一种看似非常颓废，甚至自虐的方式生活。 他们的生活宗旨就是追求纯自然的生活， 同时向往完全自由的生活状态。 这种想法一经提出， 慢慢在全球范围内受到很多人的认可。 当然丹麦也不例外。 一群年轻人来到哥本哈根城东的一个废弃军营占山为王， 并自称为克里斯钦省， 俨然就要独立的样子。 丹麦政府曾经想要取缔， 但又迫于人权组织的压力， 一直没有采取有效措施， 慢慢这个省就成了一个即成事实。 政府索性就给了他们高度的自制权。 发展至今， 村里的居民将近有1000人。 村里的植被环境都保持了最原始的状态， 也是目前世界上唯一能展现60年代嬉皮士风貌的地方。 村里也有很完善的社区， 有自己的学校， 同时靠着旅游业也有自己的收入。 当然， 诸如医院， 银行， 供水， 供电等等设施还是和哥本哈根连在一起的。 不得不说，这里隐居了一些出色的艺术家， 在村里也可以看到很多出色的艺术作品， 展示了很多天马行空般的想象力和创造力。 这座房子外面的画很有艺术感，也非常漂亮： 因为游客很多， 因此这里还有专门的村内导游 这里写着”Say no to hard drugs”， 表明了这个村对于毒品的态度。。。","link":"/5klbbn/"},{"title":"断舍离","text":"最近一直宅在家中。由于时时刻刻都生活/工作在这个小空间，因此更加觉得家中有些杂乱，很多不必要的东西可以扔掉。正好单位在复活节期间多放了两天假，加上本来的复活节大周末，总共六天的时间。于是和媳妇决定对家中进行大刀阔斧的整理。 图源：pixabay 首先进行整顿的是家中的书架，架子上摆放着一家人的书。其中很多是针对新生儿的育儿书籍。这些书当年都是从国内人肉扛回来的。现在肯定不需要了，于是进行了分类：破损的直接回收扔掉，好一些的送给朋友和捐助给一些慈善店。 对于有些书，比如一些经典儿童绘本，媳妇总是有一些舍不得。这个时候我就劝她，好好想一想，过去一年，甚至几年内，是否用过，如果没有的话，说明就不需要这本书了。那么，它就应该把位置让出来。这样我们就能把当前更需要的书摆上书架。 其实对于一本你真正需要，或者喜欢的书，你经常会情不自禁的去读它。比如，我最喜欢的图书之一：《极简宇宙史》。迄今已经读过两遍了。我在书架中给它留了一个最好的位置，因为我知道我还会再读一遍的。 经过这一番整理，原本杂乱臃肿的书架顿时清爽了，感觉似乎心头的一块大石头被搬走，自己的心情也好了很多。","link":"/5w3nes/"},{"title":"我的第一次烘培经历","text":"媳妇前两天过生日。在现在疫情下考虑还是不去买生日蛋糕了。何况英国超市中的生日蛋糕上面都是厚厚的一层糖霜，想想就够了。于是决定，自己动手给媳妇做一个生日蛋糕。先上个成品图吧： 其实，媳妇绝对是一个烘培高手，一般孩子们和我的生日蛋糕都是她来做。各种糕点都是轻松搞定，什么戚风蛋糕，中式月饼，Brownie等等，迄今为止还没有失败的记录。做出来的糕点不仅我们自己喜欢吃，单位同事，朋友们也都是赞不绝口。但是，总不能让媳妇自己给自己做生日蛋糕吧。 何况，现在成天宅在家中，这也算带着孩子们的一项活动。于是立刻开始动手啦。 从网上查找了一下菜谱，选择了一款最为简单的海绵蛋糕作为我有生以来的第一次烘培尝试。 首先用打蛋器将鸡蛋打好，菜谱上说要打的非常起泡才好。但我用打蛋器只能打成这个程度，随它去吧。 然后在蛋液中混入食用油，糖，牛奶，再用打蛋器打好。 接下来将面粉放入蛋液中并搅匀。在这个步骤中比例是很关键的。按照教程上说的，蛋/糖/面粉的比例是2:1:1，最佳状态是最终的食材混合物能够达到粘在搅拌器上不掉下来的程度。但我按照这个比例配出来的太稀了，根本达不到这个效果。可能是我中间按照自己的感觉加入了牛奶和食用油的原因吧。于是就不停的加入面粉。最终根本就不管这个比例了，完全跟着感觉走。后来和媳妇请教时才知道，她每次都是严格按照比例，用厨房秤称出每一项食材的重量的。哎，看样子，做任何事情都是有规矩的，不能像我这样随意来。也许，只有达到高手境界才能随意发挥吧。 也不知道加了多少面粉之后，食材的混合物终于可以挂在搅拌器上了。我迫不及待的将其导入烘培盘中，然后在事先预热的烤箱中烤了共25分钟。 蛋糕终于烤好了！尽管没有媳妇烤的蛋糕松软，但是似乎味道还很不错。我这第一次的尝试也算成功了吧。。。","link":"/5wpl8/"},{"title":"Mrs Sunderland Festival闭幕演出","text":"由于两个孩子在上周的比赛中表现突出，分别获得了两个钢琴独奏冠军和两人合作的四手联弹的冠军，因此很荣幸的被组委会邀请在闭幕演出中进行表演。作为家长，我们也沾了孩子们光，在现场感受了一下各个类别表演获奖者的精彩演出。 由于在比赛期间只参加了钢琴比赛，因此对其他项目仅仅是知道而已，但并不知道具体比赛细节。这个大型活动涵盖Music，Speech，Drama等众多内容。今天晚上也见识了其他类别获奖者的精彩演出。很多选手都是从英国各地赶来的，看来对这个活动是真爱啊。 比如说Speech组的冠军是一个小朋友，上台的表演形式有些类似于脱口秀。讲的故事虽然只有短短的几分钟，但把观众逗得不断捧腹大笑。我想这也是国内李诞的表演为什么如此火爆的原因吧。 还有一个比较震撼的就是各个合唱团的精彩表演。虽然演员们多是业余选手，但他们的演出效果还是非常震撼的，比如有一支合唱团演唱的《狮子王》中的歌曲，配合着各种口技，仿佛将非洲风情和各种动物带到了舞台上。 真心喜欢这个活动，感觉往返两个多小时的车程也值得了。","link":"/5x8nh9-mrs-sunderland-festival/"},{"title":"针对交易所的交易所","text":"今天偶然间看到一篇文章，提出了一个有趣的观点：目前币圈很多老韭菜的刚需是需要一个专门能够聚合各个交易所的交易所。 其实，无论是新老韭菜，在交易/搬砖时都需要这样一项服务，实时统计各个交易所的币价，并能够进行汇总显示。当然，如果能够自动进行比价并交易的话，就更完美了。 想象这么好的idea，难道没有人在做吗？于是Google了一下，还真的找到了一个聚合交易所： 感兴趣的可以去注册看看，这是我的邀请链接：http://www.biup.com/reg.html?&amp;lang=zh_CN&amp;in_code=S443Z8","link":"/65hywi/"},{"title":"复活节花园寻宝","text":"复活节如期而至，其实每年都选择在复活节假期回国和家人团聚。但今年因疫情被迫取消了航班，第一次带着孩子在英国度过复活节。 图源：pixabay 不过凡事都尽量往好处想，孩子们一直喜欢复活节时在花园中寻找复活节彩蛋这个游戏，但由于每年的复活节都在中国，因此一直没能满足他们的这个心愿。今年正好满足一下他们的这个小小愿望。 由于疫情，现在复活节彩蛋都限购，只买到一点点的彩蛋。但孩子们更喜欢的是这个游戏本身，彩蛋的多少应该不是最重要的。 其实，在寻找复活节彩蛋游戏中，还有一个主角，就是复活节小兔子。在传说中，复活节小兔子将彩蛋藏起来。之所以是兔子，可能是因为它们强大的生育能力吧，毕竟复活节意味着新生命的诞生。 我自然就成了客串小兔子的角色，将彩蛋藏在了花园中。 藏在了苹果树的树枝上： 梨树上： 孩子们做游戏的小房子这里： 浇水用的小水壶中： 很快，这些彩蛋就都被找到了。彩蛋内部一般都是空的，象征着耶稣复活后空空的坟墓。其实时至今日，复活节的宗教色彩已经慢慢淡化了，成了很多家庭度假的热门时段。期待早日恢复正常，把错过的假期补上。","link":"/6da9hx/"},{"title":"英国日益严重的疫情下，记录一下那些暖心的瞬间","text":"英国的疫情进一步恶化，最近两天查尔斯王子，Johnson首相，还有卫生大臣先后被检测出新冠状病毒阳性。这也让众多英国民众更加担心接下来几周的英国疫情。 但就在这样的疫情下，依然有着很多温暖人心的瞬间，让大家相信我们是在一起和病毒作斗争。 首先是昨晚8点钟的时候，众多家庭纷纷走出家门，站在门口和阳台上，为众多在前线工作的NHS医生，护士，及相关工作人员鼓掌加油。尽管，那些医护人员可能听不到这些掌声，但相信他们可以感受到大家对他们的尊重和鼓励。We are together! 还有就是针对前一段时间民众恐慌引发囤积食物而造成的食品短缺，众大超市发表联合声明，确保全部民众的生活必需品，因为这对他们而言，已经不仅仅是他们的工作了，而是一种应尽的责任。而且，很多超市还专门开辟了特殊时段，为众多在一线奋斗的人员提供优先购物通道，让他们在劳作后不用担心买不到生活必需品。 由于医院的压力越来越大，因此要招募一定数量的志愿者，让人感动的是，众多民众首先想到的是如何共同努力，共度难关，而不是个人的安全，在非常短的时间内报名人数就远远超过所需人数。 这样温暖的瞬间还有很多很多，让我感受到整个人类在一起和病毒作斗争，相信终有一天我们会彻底战胜病毒。","link":"/6fbtgr/"},{"title":"开车中偶遇路霸，司机毫无办法，有女侠路见不平，拔腿相助","text":"在英国这里开车时遇到各种动物横穿马路，真的是没有一点办法，只能等着。 这个就是罪魁祸首，抱歉开车中, 照片有点模糊， 有时候真的是奇怪，这些动物也真是聪明，知道人不会伤害它们才会如此放肆吧。。。","link":"/6fca14/"},{"title":"说说丹麦的消费水平","text":"在这次出行之前就知道丹麦的物价高， 这次算是有了一个深刻的体会。 关于汇率， 为了简单， 基本上可以把丹麦克朗和人民币看成1:1。 哥本哈根Irma超市 首先是这里的25%的税， 英国的20%已经觉得很高了， 而且在超市中对于生活必需品比如面包，牛奶不征税。 可在哥本哈根的超市中，貌似是对所有东西都征税的。 感觉最贵的是这里的吃的。 在街边随便买个炒面需要80-90 DKK。 普通餐厅的一道main course基本上都是200 DKK左右， 一家四口人就算只要main course + 酒水饮料， 一顿饭下来基本就要1000 DKK了。 最后一天吃的中餐， 稍微便宜些， 每道菜也要120-150 DKK左右。 听丹麦同事说哥本哈根是拥有米其林餐厅最多的城市， 难怪就连会议午餐的餐厅主人都是米其林大厨呢。 搜了一下， 2017年哥本哈根共有一家米其林三星， 一家米其林二星， 13家米其林三星餐厅。 坐的从机场到酒店的出租车， 只要15分钟， 就要280DKK。 最后给个建议， 如果来哥本哈根玩的话， 推荐购买Copenhagen Card， 我媳妇买了个5天的卡， 899DKK， 几乎所有著名景点门票 + 公交都包， 感觉省了好多钱。 另外， 真的没有必要换太多现金， 用信用卡直接付的话汇率还是很不错的。","link":"/6h49cg/"},{"title":"杜伦大教堂","text":"因工作原因来Durham出差，经同事建议从火车站沿河边步行到开会地点，看到了不一样的杜伦大教堂。算算离上次来都十年了，岁月在不经意间竟然如此匆匆。。。","link":"/6mgazp/"},{"title":"自闭症儿童需要更多的关注","text":"最近儿子学校给所有家长发了一封信，呼吁所有家长更多关注自己的孩子，以便更早发现自闭症的儿童，及早采取措施。并建议成立一个group，大家分享心得体会。 其实，根据最新的统计，世界范围的自闭症患者超过1%，只不过自闭症患者的程度可能各不相同，重的不能生活自理。轻的则不易察觉。很多自闭症患者往往在某些方面远超常人，甚至是出类拔萃的天才。很多世界名人，科学家都是自闭症患者，比如：爱因斯坦，莫扎特，牛顿，达尔文等等。我所工作的单位中也有一些同事是自闭症，但他们都非常聪明，也感觉不出和常人的区别。因此，即使感觉自己的孩子可能是自闭症，也不必太过担心，只不过他们可能需要更多的理解和关注，因为他们眼中的世界可能于我们的彻底不同。 Image credit to: thinkaustism.co.uk 如果旁边的人有以下行为的那么就需要多加关注了（下面列表非官方，只是从邮件中看到的）： 表现出于他／她年龄不符的行为举止，这些行为甚至可能会导致他们自己或周围孩子的危险 如果事情没有按照计划进行，表现出特别的焦虑或者有不恰当的举动 不能从别人的角度来看待问题，或者不能为了别人而调整自己的行为 很难改变自己，比如从一个活动切换到另外一个活动 对于某种东西过于敏感，比如某种气味，食物的纹理，或者衣服 社交障碍 睡眠障碍或者尿床 过于没有组织计划性 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/6mqwf9/"},{"title":"国外经典图书推荐之：查理和巧克力工厂","text":"给孩子买了一套Roald Dahl的经典图书。不仅孩子自己喜欢，就连我和孩子的妈妈对这套书也有些着迷。这位作家在全世界范围内都是大名鼎鼎，他的图书销量超过了2.5亿！今天给大家推荐他写的”Charlie and the Chocolate Factory” (查理和巧克力工厂)。 Image source: pixabay 这个故事讲述的是出身贫困家庭的Charlie从小和自己的父母还有爷爷奶奶，姥姥姥爷住在一栋漏风的破房子中，家中经常吃不饱饭，可即使这样，查理也从来不吃长辈们让给自己的食物，因为他知道长辈们也饿着肚子。对于查理来说，每年最期待的日子就是自己的生日了，因为只有在他生日的那天才能吃到他最喜欢的巧克力。离他家不远的地方就是一个全世界最有名的巧克力工厂，工厂里生产的巧克力畅销世界各地。但工厂一直异常神秘。它的大门一直紧闭着，既没有人进去，也没有人出来。突然有天工厂的主人Willy Wonka宣布了一条爆炸性的新闻，在最新售卖的巧克力包装里会有５张金色入场券，入场券的获得者将会获得免费参观巧克力工厂的机会，同时终生享用工厂里生产的巧克力。于是整个世界陷入了疯狂中，大家拼命的购买Wonka的巧克力。很快这5个幸运儿出现了。前4位都出身富裕家庭，由于娇生惯养，他们有着各种各样的缺点。在进入巧克力工厂后，他们都被梦幻般的景色所震撼：飞流直下的巧克力瀑布，波涛荡漾的巧克力河流，大片的口香糖草地。。。最终前面的4个孩子都迷失在各种诱惑中，从而丧失了继续参观的资格。只有查理坚持到了最后，从而获得Wonka的青睐，成为了下一任巧克力工厂的继承人。 这个故事告诉了我们要遵守规则和自律，非常适合教育孩子。其实，不仅是图书，还有电影和音乐剧。我家孩子对这部音乐剧也是非常着迷。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/6pdftt/"},{"title":"注册赞赏公民，支持Steem中文社区 + 使用经验分享","text":"受 @ericet 影响，最近尝试使用 like 的赞赏功能。感觉非常好用，就交付了每月5美元的赞赏公民(CIVIC LIKER)月费。这样我的赞赏能量就更大了。同时昨天在 @ericet 提供的核心代码基础上进行了修改，写了一段代码，对 https://steem.buzz/ 上所有配置了赞赏功能的 CN 区用户自动进行了赞赏。 下面总结一下自己的体会，完全是自己的理解，如有偏差，欢迎大家指正。 首先，什么是赞赏公民？赞赏公民类似于Steem/Hive上的大鲸，其赞赏(点赞)的权重较大。但Steem/Hive上的大鲸的点赞力度也根据SP/HP值而有所区分。赞赏公民只有每月5美元这一种选项，因此点赞权重应该一样。 其次，在Steem/Hive中有Voting Power的概念，满血时点赞产生的收益最大，随着点赞次数增加，点赞产生的收益逐步递减。当VP为0时，点赞不产生任何收益。但在like网络中似乎并没有VP的概念，似乎可以无数次点赞。但是，根据我目前测试，针对同一个用户的多篇文章点赞，其产生的收益并不相同，似乎也在递减。我目前看到的是前两篇一样，第三篇的收益会降低。再往后目前还没有尝试。但具体细节怎样，由于找不到相关文档，我目前也不清楚。 关于Steem/Hive网络和赞赏功能的集成。目前似乎只有 @ericet 在 https://steem.buzz/ 上将赞赏功能和Steem集成到了一起。目前我还没有看到将赞赏功能和Hive整合的网站。 其实，like网络已经提供了很多方式和你的自媒体进行整合，比如有Wordpress插件，Medium集成等。对于其它系统搭建的网站，都不难整合的。细节请看到这里：https://github.com/likecoin/likecoin-button","link":"/6sxpjo/"},{"title":"说说今天在超市中遇到的一个坑","text":"听很多人吐槽过英国人的数学如何不好，在超市里的物价经常标的莫名其妙，比如同样商品一件1英镑，两件2.5英镑之类的笑话。我也看到过很多英国人在购物时对于那些买一送一的OFFER直接忽略，拿起一个就走的。 但今天却见识了一家超市的坑，而且我还掉坑里了，哈哈，虽然很快就从坑里爬了出来。。。 首先是看到了这个半价的洗碗机里的那个小皂块的半价折扣，想想家里的正好快用完了，于是就拿了一个。可是交钱后才发现收了我既不是20英镑，也不是半价的10英镑，而是一个莫名其妙的16英镑。后来去客服问了一下才搞清楚，原来是把不打折的放在了这里。后来我又去看了下，想找一个打折的，结果发现整架子都是那种16英镑的，只能说这个折扣的牌子真是坑人。 接下来紧跟着掉到了第二个坑中，有一种家里总用的洗衣粉也在半价折扣，同一个架子上摆着共三种颜色的，左边白色和右边粉色的下面价签写着半价，而中间金色的包装没有价签，于是想着同一厂家同种产品，应该都在折吧，就拿了一桶，结果是原价。。。 还好，这里退货很方便，看来每次购物完检查一下小票真的是非常有必要啊。","link":"/6wsdmf/"},{"title":"大自然的馈赠 - 野生栗子","text":"十月金秋又到了，在英国这里几乎到处都是野生的栗子树。对于喜欢吃栗子的人真的是有福气了。 在我办公室附近就有一片大草地，草地边上就有两颗不小的栗子树。 由于已经到了成熟的季节，很多栗子都已经涨开了。 有些熟透了的栗子落到了地上，又回归了大地母亲的怀抱。 除了栗子外，草地边上还长了好多黑莓和Rasberry，由于没人采摘，很多黑莓落在地上，化为泥土。 我非常喜欢采摘，也喜欢带着自己的孩子采摘这些野生的水果，接受大自然的馈赠。捡到的栗子我试着在烤箱里烤过几次，效果不怎么好。后来索性就简化了一下，直接放在锅里用水煮熟就可以吃了。纯有机，纯天然，又超级有营养！ 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/6x2ppa/"},{"title":"出门放风","text":"算一算已经宅在家中两周多了。在这两周中，除了我自己出门去了一趟超市外，全家人都老老实实的在家闭关，该上班的上班，该学习的学习。孩子们每天上下午固定两次在花园中活动一下，蹦床成了他们最爱的项目。 最近在网上看了一个张文宏教授的在线访谈，知道了在地广人稀的地方，只要多加注意，是可以去散散步的。想一想我家似乎这两个条件都满足啊，我们住的远离市中心，可以说在一个小村落里。同时这两天的天气实在是太好了，处处都能嗅到春天的气息。因此决定全家出动，就在家附近去散散步，不要辜负这大好春光。 本来村里的人就不多，现在更是都宅在家中，因此出门几乎没见到几个人。路上都是空空况况的。零星遇到的行人之间也都很有默契的彼此保持至少三米以上的距离。 与这冷冷清清的街道相比，一簇簇的水仙花还有各种知名的，不知名的小花已经完全盛开，将路边点缀的生机盎然。 同时趁着现在路上几乎没有车，让孩子们骑车正式上路，顺便给他们讲了讲各种需要注意的交通规则。 虽然活动半径距离住处都没超过200米，但一家人走走停停，回家时已经是一个多小时之后了，感觉浑身舒畅。希望生活能够早日回归正常，和众多亲友们再次相聚。","link":"/6x7r52/"},{"title":"孩子们的乐园 - 北京蓝天城职业体验","text":"早就听朋友们说北京这个蓝天城职业体验中心很好，孩子们几乎没有不喜欢的。今年终于有机会带孩子去体验了一下。我们去的是北京朝阳区大悦城的那家。早就听说这里人满为患，因此我们特意避开了周末，不过还是遭遇了各种学校组织的团，参加各种活动时依然需要排队。 进去时各种热门活动都已经排起了常常的队，预计等待时间至少半小时，因此我们先参加了相对排队时间短的活动。首先参加了时装秀的活动。小女孩们换好服装，准备开始走秀： 走秀正式开始： 接下来参加了医生体验活动，活动项目很多，比如要建立医疗卡，为各种病人包括小孩看病，抬病人上救护车等等。看看孩子们穿上医生的白大褂，似乎很有感觉： 轮流给病人看病： 给小朋友看病： 还要用担架抬着病人上救护车 接下来又来这个“果园”进行采摘体验： 摘完后还要推车自己摘的水果绕场一周，不太明白这是做什么，难道是去卖水果？？？","link":"/53bufg/"},{"title":"约克哈里*波特纪念品店小逛","text":"最近朋友从北京来英国玩，陪着朋友参观了一下约克肉铺街的哈里*波特纪念品店。想想在约克住了这么多年竟然也没有去过这家店 (The shop that must not be named)。 店门口排着长长的队： 纪念品店所在的街道就是电影中对角巷的拍摄地： 隔着商店橱窗就能看到里面拥挤的人群。 排队将近30分钟后终于轮到我们了，进入了这魔幻的世界： 进门处的橱窗： 各种怪兽： Magic wand: 各种杯子： 哈哈，飞行器： 还有posters: 魔法杖： 朋友家的小孩是铁杆哈里波特迷，在小小的店内竟然转了快一个小时！","link":"/6xtpfq/"},{"title":"哪位大神能给解释一下为什么我的帐户会莫名其妙的给别人点赞和踩贴？","text":"今天突然看到自己的账户莫名其妙的踩了 haejin 的贴子，同时也莫名其妙的给了zulkifli123的一个帖子100%的赞。首先想到的是自己的账户被黑。于是登陆Steemit立刻更改了密码。同时取消了对utopian, dlive, busy应用的授权。 后来仔细看了下 zulkifli123的这个帖子，只有一张图片和两行字，却得到了近200的赞，而且有大鲸也赞了，觉得应该不是自己的账户被黑，而是授权的某个应用被黑从而导致这些奇怪的行为。后来又看到似乎Utopian被攻击的消息，难道是用户的posting授权被人滥用了？ 哪位大神给解释一下究竟是怎么回事？@oflyhigh @skenan @abit","link":"/6z5ics/"},{"title":"英国疫情现状+漫长的闭关开始","text":"英国的疫情已经越来越严重了，甚至很多人都感觉英国在步意大利的后尘。自从“全民免疫”的概念提出来之后，英国政府最近的政策完全反转了，提出了一系列严格举措来控制疫情蔓延。 首先是自上周五放学后开始，全英所有大中小学全面停课。同时鼓励所有有可能的单位员工全部在家办公。继而又出台政策，要求所有餐厅，酒吧，剧院等暂停营业。小企业主可以和政府申请财政补助，停业公司中在家的员工则会由政府发放80%的工资而不用工作。 然而，让我非常不理解的是，由于这个周末的天气很好，众多英国家庭纷纷外出，享受这宝贵的阳光。很多交通干线上纷纷堵车，各种公园，景点人满为患。仿佛全面度假要开始一般。。。 对于这点，我是真心无语。。。英国NHS的众多医生护士纷纷提出：”I stay at work for you, You stay at home for us.” 的口号，号召大家齐心协力共抗病毒。英国议会也全票通过最新法案，赋予政府更大权限，如有必要，将会采取更加严厉的措施，避免疫情的进一步恶化。 我和周边的朋友家庭们只能做好我们该做的，好好的宅在家中。期待疫情早日消除，所有人都能尽情享受这无限的春光。","link":"/72etvv/"},{"title":"月是故乡圆 - 参加当地华人的中秋晚会","text":"每逢佳节倍思亲。这周正逢国庆和中秋两大节日，让我更加思念国内的亲人们。转眼到英国已经十几个年头了，当时初到英国的情景还历历在目，可目前自己的孩子们都上学了。悠悠岁月漫长，心中永远不变的是对故乡，对亲人的思念之情。 还好当地的华人自己组织起来，举办了中秋晚会。在晚会上遇见了好多许久不见的朋友，也认识了很多新的朋友，孩子们玩的也非常高兴，让参与者都感觉了一份家的温馨。 这次中秋晚会的一个高潮就是中国传统的猜谜游戏，大家纷纷踊跃参与，组成了不同的小组，最后我爱人的小组还荣获了第一名。给大家分享几个有趣的谜语。一个是难度系数较大的：一边大，一边小，一边跑，一边跳（打一字）。另一个是非常奇葩的：吃着包子上厕所（打一个成语） 组织者还组织孩子们做手工，让孩子们体验了一下中国传统文化。 在国庆之夜，祝愿我的祖国繁荣昌盛，我的家人朋友们幸福安康！ https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/7krffu/"},{"title":"祝小公主生日快乐","text":"我家的小公主四岁了！本来计划给她办个生日趴，可小姑娘说只要在幼儿园里和好朋友们一起庆祝就可以了。要“save the money for Disneyland”。以便去迪士尼好好玩一玩。 女儿最近在幼儿园各项指标都超前，让我们引以为傲。参加的各种课外班，小提琴，幼儿芭蕾，音乐课也是表现突出，老师经常让她给做示范。 我的小公主生日快乐！","link":"/78xjjd/"},{"title":"由一瓶威士忌引发的思考","text":"今天去超市买东西，在还购物车的时候发现前面的空购物车中有一瓶威士忌酒，很明显是有人在买完东西后忘记拿了。当时直接就把酒送到了超市的服务台，把情况说清楚了，走人。后来受好奇心驱使，查了查这瓶酒的价格，将近40英镑，相当我在超市消费金额的一半。 其实，以前也遇到了几次类似的场景，都做了相同的处理。有些时候朋友会说我这个人在这方面脑瓜不太灵光。可我自己倒没觉得怎样，如果我把这瓶酒拿回家，自己肯定过不了自己这一关，心里肯定会觉得很别扭。在国外生活时间久了，很是接受这边的诚信体系，是你的就是你的，别人也抢不走，不是你的就都是浮云，要学会淡定。 也曾经听过一些人的所谓生活窍门，比如：个别在大学上学的学生从来不交停车费，被问到为什么的时候还“精明”的算了一笔账：停车费每月30英镑，但他停车的地方比较偏，被查的几率很小，如果一年中偶尔被查到两三次，每次收到50英镑的罚单，整体来说也是划算的。对这种想法我真的是无语了。我确实懒得琢磨这些小窍门，想要赚钱，有很多方法，何必费心想这些小窍门？ 其实从根本上说这就是一种对规则的尊重，在我们生活的社会中有很多大家都认可的规则，你是认真的遵守这些规则吗？ 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/7mlfrn/"},{"title":"侠盗罗宾汉的故乡之行","text":"上个周末全家去侠盗罗宾汉(Robin Hood)的故乡，也就是Sherwood Forest度假。先看看百度百科上对罗宾汉的介绍： 在英国的传说中，罗宾汉的名字是极为响亮的。有些学者认为罗宾汉是中世纪绿林好汉的化身，还有学者认为这些民间故事完全出自人们的想象。他的传奇有多种说法，大致是说在12～13世纪著名的十字军东征的时候，英格兰的理查王被俘，留在国内的约翰王子趁机篡权，拒绝赎回理查王。而与他狼狈为奸的诺丁汉郡长也趁机强占了忠心于理查王的罗宾汉家的领地，更试图染指他的心上人玛丽安。罗宾汉被迫躲进舍伍德森林，以此为基地，领导一支农民起义军到处劫富济贫，最终成功赎回理查王，粉碎了约翰王子等人的阴谋。罗宾汉最突出的就是射箭术高超。据介绍，现在射箭比赛里就有“罗宾汉”这一术语，指射中另一支已中靶心的箭。 历经近两个小时的车程，终于来到罗宾汉曾经战斗过的地方： 我们预订的森林小木屋： 这棵大树非常有名，曾在2014年全英树木评比中获奖！据说罗宾汉就是在这棵大树下认识自己的好兄弟加左右手Little John。 这里简直就是狗狗们的天堂，各种品种的狗狗们在这里尽情撒欢，就连Information Centre门口都有“停狗位”：","link":"/7ncpsm/"},{"title":"古希腊艺术：阿喀琉斯和埃阿斯对弈","text":"最近孩子正在学习古希腊的知识。家庭作业中有很多涉及到古希腊的内容。本周的作业是完成一件和古希腊艺术相关的作品。经过一番选择，我们决定临摹古希腊艺术中著名的花瓶：阿喀琉斯和埃阿斯对弈。于是我也和孩子一同学习了一下这件艺术品。 图源：英国亚马逊上仿制的艺术品 这件作品由公元前550年左右时的黑绘陶瓶艺术家埃克塞基亚斯所创作。在陶罐上描绘了阿喀琉斯与埃阿斯对弈的场景。这名艺术家还有一件著名的作品，就是“埃阿斯之死”。有人对这位艺术家的评价极高，是因为他才使得黑绘陶瓶艺术成为主流艺术之一。 瓶中的阿喀琉斯(Achilles)和埃阿斯(Ajax)很多人一定很熟悉。尤其是阿喀琉斯，是古希腊神话中神一般存在的英雄。由于自出生时他的女神母亲将其捉住脚踝放入冥河斯堤克斯里浸泡，因此全身刀枪不入，同时还具有超凡的智慧和力量，只有被手握住的脚踝处成了他的致命弱点。也因为如此后来在特洛伊战争中被小人所害。","link":"/7sfbjq/"},{"title":"重新造访爱丁堡","text":"最近出差重新造访曾经生活了多年的爱丁堡。 爱丁堡这座美丽的城市是苏格兰的首府。城市中的剧院，博物馆，画廊比比皆是。瓦特，贝尔，达尔文，史蒂文森，柯南道尔，J·K·罗琳等人和爱丁堡有着密不可分的联系。 爱丁堡的景点也非常集中：爱丁堡城堡，皇家大道，卡尔顿山，亚瑟王宝座，苏格兰国家博物馆，苏格兰国家艺术画廊，王子街，斯科特纪念塔等等 Posted using Partiko Android","link":"/7z1jxztw/"},{"title":"900+ Chinese Food Recipes - Top 1 Chinese food recipes in Google Play store","text":"900+ Chinese Food RecipesTop 1 Chinese food recipes in Google Play store Screenshots Hunter’s comment900+ Chinese Food Recipes is an amazing Android recipe app with more than 900 recipes, including soups, meats, fishes, vege, noodles, cakes, dumplings etc. This app has everything from easy to expert recipes and teaches you step by step in making Chinese food. The interface of the app is user-friendly and easy to use. Each recipe includes information like the ingredients and the instructions about how to cook. You can bookmark your favorite recipes and come back later. Also, you can share the recipes via social networking as well. If you love Chinese food and want to know how to cook it, this is the APP for you. Linkhttps://play.google.com/store/apps/details?id=id.startupmedia.chinesefoodrecipes ContributorsHunter: @aafeng This is posted on Steemhunt - A place where you can dig products and earn STEEM.View on Steemhunt.com","link":"/900-chinese-food-recipes-top-1-chinese-food-recipes-in-google-play-store/"},{"title":"A great family day out in Piglets farm - 在小猪农场的愉快周末","text":"这个周日带这孩子参加在Piglet小猪农场的mumbler活动。农场里除了各种孩子们喜欢的游乐设施外，还有专门的各种活动，比如：孩子的舞蹈，芭蕾，face painting等等。原来这个农场就很受欢迎，今天更是格外的忙，看停车场的车就比平时多了一倍。 We had a great family day at Piglet Pig Farm this Sunday. There are different activities such as children’s dance, ballet, face painting and so on. The farm is very popular, today it is extremely busy. 门口的这只萌萌的小猪Truffles The super cool Truffles 这是Piglet正门，感觉门口这个小果树非常漂亮，结满了黄色的小果子 In front of the main entrance, a beautiful tree with lots of yellow fruits. 不愧是小猪农场，入门处不远就有一群小猪和猪妈妈。看来什么小动物小的时候都是很可爱的。 Just opposite the main entrance, a pig family is seeking food and the little ones are super cute. 今天的天气非常给力，一直有阳光，风也很小，这在英国可是非常难得的。蓝天，白云，小猪，还有我家的小美女 Today’s weather is amazing, see blue sky, cloud, pig, and my little princess 孩子们一进门就冲到了这辆木制拖拉机这里。我家的小女汉子站在了木制拖拉机的驾驶舱顶上 The children rushed to the wooden tractor. My little daughter was standing on top of the wooden tractor’s cockpit 蹦床一直是我儿子的大爱，他一直在这里不停的蹦了半个小时。从一开始的人满为患蹦到了最后几乎就他自己。 Trampoline has always been my son’s favourite, he has been here in the non-stop jump for half an hour. From the beginning of the overcrowding to the last almost just himself. 到了小猪赛跑的时间了，大家纷纷围拢过来观看。小朋友们先是和这个小猪造型合影： It’s pig racing time 孩子们超级喜欢的拖斗车，我家的儿子和女儿都是超级喜欢。儿子来了后就连续做了两次。 Trailer is always children’s favorite. 还有这种能骑三轮车的地方，骑起来感觉比自行车要费劲些。但这也是它吸引人的地方吧。因为稍微费劲，所以比赛起来也就更有意思。而有的则可以家长和孩子一起骑 Pedal Go-Carts attacts both children and adults. 另外里面还有一个小高尔夫球场，主要是用推杆。从开始到最后难度系数不断增加。我家小女儿更钟爱这里的高尔夫，玩了好几轮 A small golf course sits in the far end of the Piglets. My little daughter loves the golf here, she has played several rounds 在女儿的小朋友带领下，一起玩起了这个网间跨越的游戏，可以让小孩子们锻炼身体协调能力 My daughter has been playing the Olympigs Obstacle Course for a while. 两个小蜘蛛侠 Two little spiders 这个造型独特的小房子也是喜爱过家家的小女儿的最爱，女儿管它叫做蘑菇房 This little mushroom house is an ideal place to play Daddy and Mummy’s game 这里也有用玉米地搭建的迷宫Maze A maze by corns 就连里面的垃圾桶都在教育孩子们垃圾分类的知识 The rubbish bin has been designed to educate children on garbage classification 沙池这里也吸引了不少小朋友。 Sand pool here also attracted a lot of children. 小推土机驾驶员 The little bulldozer driver 出门前咨询了一下，这里在万圣节，圣诞节期间还有各种活动。据说圣诞节期间的有些活动已经背订光了。期待下一次的活动。 There are a variety of activities during Halloween and Christmas. Some of the activities during the Christmas period have been sold out. https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/a-great-family-day-out-in-piglet/"},{"title":"长隆海洋王国游记 A trip to Chimelong Ocean Kingdom","text":"我们在国内的时候去了一趟位于珠海横琴长隆国际海洋度假区的长隆海洋王国，下面把这次的游记和大家分享一下。这里有各种珍稀的海洋生物，比如白鲸，海豚，北极熊，北极狐等等。Located at Chimelong International Ocean Resort in Hengqin, Zhuhai, Chimelong Ocean Kingdom is a large aquarium that allows guests to view the rare whale shark, beluga whales, polar bears, and other adorable animals up close! 长隆海洋王国在世界上都是有名的，因此吸引了大批的游客，这里是海洋王国的入口Chimelong Ocean Kingdom delivers an exciting and internationally recognised park experience! 入口处的大屏幕就让人感到非常震撼，话说这是我在所有去过的公园中见到过的最大的展示屏。在屏幕中可以看到各种小动物在悠闲的游来游去。屏幕的两边则装饰着珊瑚和岩石。The amazing ocean journey begins the moment you step onto Ocean Avenue! Immerse yourself in an underwater world with the giant overhead LED screen. The avenue’s sidewalks are decorated with vibrant corals and rocks reminiscent of the ocean floor. 首先参观的是这些可爱的海狮We first visited these cute sea lions 接下来这些海狮进行了精彩的表演A wonderful performance by these sea lions 海豚也来客串，进行顶球表演。之后又进行团体表演The performance by dolphins 接下来我们来到了极地世界，这里展示着北极和南极的各种动物，有企鹅，北极熊，北极狐，和北极狼，还有白鲸的表演。We then arrived at Polar Horizon which shows us the mysterious North and South Poles. 接下来我们去了著名的白鲸剧场We visited the famous Beluga whale theatre 白鲸到水池边用特殊的方式和观众致意，前排观众都被淋成了落汤鸡The clever whales says hello in a special way, pouring water to audience 接下来是白鲸和驯兽员的互动。首先是白鲸推着驯兽员游泳，然后驯兽员还站在了白鲸的肚子上。Then the trainer and the whale performed together, e..g the whale pushed the trainer to swim and latter the trained stood on the whale’s stomach. 池底的龙虾：The lobsters 游弋的鲨鱼，和工作人员咨询了一下，原来这种鲨鱼是不吃小鱼的。它们可以和小鱼们和平共处。Those sharks live in peace with other fishes. 这种鲨鱼是要吃别的小鱼的，因此只能在单独的水箱中玩耍了These sharks would eat other fishes, so can only stay in a separate water tank 超大的魔鬼鱼Stingrays 整个水箱很大，鱼群在里面自由的游弋，还有丑丑的小鱼，生活在石缝中的小鱼 ： 梦幻般的水母 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/a-trip-to-chimelong-ocean-kingdom/"},{"title":"香辣虾","text":"今天突然无比想念国内的香辣虾，周边中餐馆菜单上似乎没见到这个菜。于是决定自己动手，也没有从网上查菜谱，完全凭着感觉做的。没有想到异常成功，色香味都非常满意。看来厨艺都是逼出来的。","link":"/a5b8eef14aff/"},{"title":"如何在预售前兑换AAA代币-详细操作步骤","text":"偶然间看到 @rosatravels 的这篇文章，自己尝试了一下AAA代币的兑换。感觉如果没有用过Steem Engine，过程略有些绕，因此把操作的详细步骤总结一下，供感兴趣的朋友参考。 关于AAA代币及其对应项目的详细介绍，请参考 @jayplayco 的这篇文章：Starting Presale of Triple A, the blockchain based Movie and Video review platform 登陆 Steem Engine首先，登陆Steem Engine，这里只需要使用你的posting key就可以。 充值STEEM到Steem Engine单击 “Deposit”，会看到如下窗口： 单击 “GET DEPOSIT INFO”, 你会看到如下窗口： 其中，”Current STEEM Balance” 指的是你Steemit账号中可用的STEEM数量，在最下面的 “DEPOSIT AMOUNT” 中输入你想要转入的STEEM数额，比如：10。注意：这里Steem Engine要收取1%的手续费。然后，单击：”DEPOSIT STEEM”。 由于这里设计到转账操作，因此需要输入你的Active key。我这里使用的是Steem Keychain这个Chrome插件，非常好用。 单击Steem Keychain中的”CONFIRM”按钮确认交易。如下图所示，STEEM很快就能转到Steem Engine中： 购买JJM代币进入Steem Engine的JJM代币页面：https://steem-engine.com/?p=market&amp;t=JJM 输入当前的市场价，打算购入的JJM数额，系统会自动计算出所需的STEEM，如果你的余额够，可以单击”Buy JJM”，进入到下一步，否则，修改需要购买的JJM数量。 系统会再次确认： 单击 “BUY” 下单。系统同样需要你输入Active key，或者在Steem Keychain中确认。 回到”WALLET”页面，可以看到你的Token中有了JJM： 发送JJM给 @virus707@virus707 就是JJM 和 AAA 代币的发行者，下面你需要把刚才拿到的JJM发送给 @virus707。建议在备注字段填写推荐人，例如：aafeng - referral，这样你我各自能得到额外的2%代币。 同样需要输入Active key，或在Steem Keychain中确认。 然后就等着吧，我是在一个多小时后收到AAA代币的。我的20 STEEM最后换到的AAA估值 $145，是不是很爽？？？等到6月5日正式发售时希望给我们一个惊喜。","link":"/aaa/"},{"title":"Abramović Method沉浸式体验","text":"在这次会议期间， 由主办方组织在丹麦皇家图书馆，也号称黑钻石图书馆体验了一下著名的Marina Abramović沉浸式体验。在这里，需要把手机交给工作人员保管，脱掉鞋子，戴上耳机，进入到一个非常安静的房间中，选择一个你最舒适的方式，你可以站着，可以坐着，甚至可以躺下，盖上毯子。 彻底放松下来，忘掉一切，用心去体验书中讲述的故事。 这种沉浸式阅读的发明者是由塞尔维亚出生的世界出名的表演艺术家Marina Abramović所发明。她被认为是在这个世界上最伟大，同时也是最具破坏力的表演艺术家。在她的很多表演中，强调的是和观众的深度交互。这套方法中包括了特殊的耳机，帮助听众摆脱各种束缚的方法，比如：特制的椅子和硬板床。这套方法有些时候甚至都可以作为一种心理疗法。 在整个体验过程中，我试着坐在特制的椅子上，同时也试着躺在了特制的硬板床上，听着耳机中清晰而缓慢的英语朗读的故事，很快就忘记了时间，不知不觉的沉浸到了故事中。真是一次奇妙的体验。","link":"/abramovic-method/"},{"title":"英国圣诞节传统 - 圣诞日历Advent Calender","text":"英国圣诞节的传统之一就是给孩子买一个Advent Calender圣诞日历。一般圣诞日历都设计的很精美。内设24个小门。从12月1日到24日，每天可以打开一个小门，里面会装有一些巧克力或小玩具，给孩子门一个惊喜。虽然平时对孩子们的甜食控制很严格。但毕竟圣诞季来了，我也会放松要求。送给孩子们他们喜欢的圣诞日历。哥哥选择的是小雪人的圣诞日历。妹妹选择的则是冰雪奇缘为主题的圣诞日历。 其实，圣诞日历不仅是孩子门的最爱，很多成年人也喜欢。毕竟，一到12月份，每天都有一个小惊喜，又有谁不喜欢呢？因此现在很多商家比如Liberty, Harrods，还有很多经营化妆品的商家都会推出一些化妆品的圣诞日历，同样也非常畅销。 圣诞日历最早源于德国的路德教。早期的圣诞日历带有浓厚的宗教色彩，人们会在12月的每一天点上一支新蜡烛，或者挂上一幅新的宗教画。其实，圣诞节本身又何尝不是呢？沧海桑田，发展至今日。圣诞日历的宗教色彩已经越来越淡化了，已经变成了一种美好的节日礼物了。","link":"/advent-calender/"},{"title":"大好河山，我回来了","text":"","link":"/afa560cb3665a/"},{"title":"欣赏《哪吒之魔童降世》电影","text":"《哪吒之魔童降世》在英国上映了，今天全家专门开了40多分钟的车去先睹为快。影片确实好看，我们全家都非常喜欢。尤其是看惯了英文电影后，在欣赏这部中文电影，同时剧中的哪吒又是从小就非常熟悉的神话人物时，整个观剧过程就是一种莫大的享受。这也难怪这部电影的票房如此之高了。 Posted using Partiko Android","link":"/anmhach9/"},{"title":"Application for Language Manager &amp; Translator role - DaVinci Witness Project","text":"IntroductionI am aafeng. I am writing this post to apply for both Language Manager and Translator role (Simplified Chinese) in DaVinci project. I am a professional software developer with over 15 years experience and I am currently working in a UK based company. I have used many open source software and would like to contribute back to the open source community. I have started translating open source projects in my spare time via Utopian and Crowdin since December last year and would like to continue my translation work in DaVinci Witness Project. 自我介绍大家好，我是aafeng。我打算申请DaVinci的简体中文语言协调员和翻译。我是一名有着超过15年经验的软件开发工程师，目前就职于一家英国企业。在软件开发中我用到了很多开源软件，因此也希望能够回馈开源社区。自从去年12月开始，我开始通过乌托邦和Crowdin提交各种开源软件的翻译。现在希望能够继续通过DaVinci项目来提交新的翻译。 Linkshttps://crowdin.com/profile/aafeng MP3 via Dropbox linkEnglish version: https://www.dropbox.com/s/xns40oiebez9xpw/20180615_105129eng.mp3中文：https://www.dropbox.com/s/w0taomdzdk56x6g/20180615_105239cn.mp3","link":"/application-for-language-manager-and-translator-role-davinci-witness-project/"},{"title":"通过程序自动获得Hive免费账号","text":"前几天写了一篇文章总结了如何使用第三方工具获得免费账号。但作为一个懒人，肯定还是想要通过程序自动实现的好。下面介绍一个完整的步骤。 首先说一说前提条件。你的账户需要足够的HP才可以，我现在有5000多的HP，满血时只能获得两个免费账号。同时需要事先安装好Beem。 程序的基本思路就是根据目前Resource Credits的百分比来决定是否要领取免费账号（Claim account）。比如：可以设置为如果RC &gt;= 80%，就进行领取。 至于目前RC百分比的判断，可以采用如下的代码： from beem.account import Account creator = Account(&apos;aafeng&apos;) current_rc = float(creator.get_rc()[&apos;rc_manabar&apos;][&apos;current_mana&apos;]) max_rc = float(creator.get_rc()[&apos;max_rc&apos;]) print(100 * current_rc / max_rc) 其输出结果为： 76.26412538197629 这个数字就是目前RC的百分比。接下来需要定义一个RC_THRESHOLD,再用上面的百分比和RC_THRESHOLD进行比较，从而决定是否要Claim account。使用Beem claim account的代码片段如下： RC_THRESHOLD = 75 hive = Steem(node=&quot;https://anyx.io&quot;, keys=[active_key]) if 100* current_rc / max_rc &gt; RC_THRESHOLD: hive.claim_account(‘aafeng’) 把上面的代码放在一起： from sys import argv from beem import Steem from beem.account import Account RC_THRESHOLD = 75 if __name__ == &quot;__main__&quot;: user = argv[1] active_key = argv[2] hive = Steem(node=&quot;https://anyx.io&quot;, keys=[active_key]) creator = Account(user) current_rc = float(creator.get_rc()[&apos;rc_manabar&apos;][&apos;current_mana&apos;]) max_rc = float(creator.get_rc()[&apos;max_rc&apos;]) if 100* current_rc / max_rc &gt; RC_THRESHOLD: hive.claim_account(creator) print(&quot;Claimed an account&quot;) else: print(&quot;Below RC threshold&quot;) 运行这个程序： python autoca.py aafeng YOUR_ACTIVE_KEY 已经成功的Claim了一个账号。再把这个程序加入Cron job，就可以完全不用管它了。。。 当然，对于HP值很大的账号来说，可以在程序中多次Claim账号，这就需要把上面的程序稍作修改，每次Claim完之后再检测一下当前的RC百分比，然后再次进行判断来决定是否继续Claim。这里需要注意每次Claim账号之后，需要在程序中停顿几秒，等待节点信息更新后，否则可能获取不到最新的RC百分比。","link":"/autoclaim-hive-account/"},{"title":"每天进步一点点： AWS DynamoDB中的坑","text":"最近这段时间对AWS，尤其是它的无服务器架构非常感兴趣。这两天尝试了一下AWS中的非关系型数据库(NoSQL)： DynamoDB，感觉到里面有不少坑，最近写的一个应用原型最初的设计是基于DynamoDB的，但进行到后期，感觉因为性能问题完全进行不下去了，又推翻了改成关系型数据库，轻松搞定。下面总结一下： 首先，对于有些应用场景，DynamoDB并不适用。甚至可以说，对于大多数应用场景，DynamoDB都不适用。 如果只是中小型应用的话，能够用关系型数据库解决，就不要考虑DynamoDB了。非要用DynamoDB？你真的想多了。。。 其次，DynamoDB最适合的引用场景就是典型的键/值类型的存储，而且是海量数据的存储。如果你需要进行复杂的查询，还是老老实实的用关系型数据库吧。用DynamoDB的Scan进行复杂的查询，真的是龟速，你还是想多了。。。 还有，使用AWS API对DynamoDB进行读写操作很简单。但是，要把DynamoDB设计好，真的有很多因素需要考虑，你需要想很多。。。 最后，给出在网上看到的一个图表，非常清晰的指出了什么时候才需要考虑使用DynamoDB:","link":"/aws-dynamodb/"},{"title":"风景如画的牛津","text":"明媚阳光下的牛津景色好美。","link":"/b5bee1bb55eaa/"},{"title":"BBC Children in Need day","text":"今天又是儿子学校一年一度的Children in Need慈善活动日。在这一天，小朋友们可以不穿校服，而是穿上各种特殊的衣服，比如有的学校的孩子们穿的都是睡袍，有的学校则是穿上平时的衣服就可以。同时家长们完全自愿的向这个活动募捐。 这个慈善活动的主旨是让每一个孩子都有一个安全而快乐的童年，从而充分激发孩子们的潜力。这个慈善机构每年资助两千多个全英的慈善项目，重点帮助各种需要特殊帮助的儿童，比如：家境贫困，遭受暴力的儿童，还有一些有残疾的儿童。每年英国都会组织明星义演，获得的资金都会用来赞助这个慈善机构。这种募捐完全自愿，在2016年获得总共6000万英镑的收入。","link":"/bbc-children-in-need-day/"},{"title":"英国最美花园之一Bodnant Garden游记 &#x2F; A nice day in Bodnant Garden","text":"这次威尔士之行的第二天主要在号称英格兰最美花园之一的Bodnant Garden参观。 这是花园的入口 我也拿了一个trial，试着找到图中的各种鸟 这是这些鸟的名字： 到了著名的睡莲池，略有遗憾的是错过了5，6月睡莲盛开的季节，只剩几株睡莲在开花 盛开的莲花 一汪碧绿 有点感觉到秋天的味道了 花丛中忙碌的蜜蜂 我看这是一对情侣树 深绿中隐藏着不知名的小果 转眼又转到另一个漂亮的池塘 好漂亮的莲花 超过百岁的人面狮身像，它的旁边专门写着，我已经超过百岁了，请不要骑在我身上 高耸入云的松树，听工作人员将树的种子都是从中国进口的，历经百年经过几代人的培育才长成这片松树林 处处都是色彩斑斓的鲜花： 花园非常大， 里面还有不小的瀑布： 这里著名的绿色走廊 中午就在花园外面的Cafe吃的午饭，我和儿子终于吃到了心心念的威尔士兔子。不过不要以为是兔子肉喔，这就像鱼香肉丝里没有鱼，老婆饼里面没有老婆一样。。。 下午一直阴雨连绵，由于时间不够了，就没有进到康威城堡里面参观，只是在外围照了照像 在海边散步时还看到了号称英国最小的房子(the smallest house in Britain，地址：11 Lower Gate Street, Conwy)。 据工作人员介绍，这栋房子曾经住过好几代人，现在已经不再住人了，只是作为一个景点供游客参观。","link":"/bodnant-garden-a-nice-day-in-bodnant-garden/"},{"title":"英国的Bonfire night","text":"今晚是英国的Bonfire night，也叫Guy Fawkes Night。全英各地举行各种活动，所有活动的主题就是篝火和烟花。据说是为了纪念历史上的一个著名的阴谋被破坏的事件。当年一个名叫Guy Fawkes的人因为不满国王James I，也就是苏格兰历史上的James VI的宗教迫害，带领一群极端的天主教徒准备在国王开会期间将国王炸死，后来事情因为一位猪队友泄密而被国王发现。Guy Fawkes被国王处死，而这一天则被人们庆祝阴谋被粉碎，慢慢的成了英国最热闹的一个夜晚，而这一天慢慢的变成和宗教无关了。 本来打算去York Maze参加一下活动，可没有想到票竟然早早就卖光了，只好自己买了些烟花在家意思一下了。好在今年邻居家好大手笔，燃放各种漂亮烟花近半个小时，我们也算免费欣赏了一下。","link":"/bonfire-night/"},{"title":"英国Boxing Day抢购体验","text":"今天在老婆的要求下起了个大早，体验了一下英国Boxing Day的大抢购。我的主要目标是NEXT家的童装。 我今天起的很早，在6点钟就来到了购物中心门口，门前已经排起了几百米的长队。NEXT是6点钟开门，看这队的长度，估计排在最前面的人应该5点就到了吧。 商店橱窗上几天前就贴满了各种促销宣传，让人们早做准备。其实很多人都是事先看好要买的商品，在Boxing Day这天一冲进商店就直奔目标而去。 媳妇早就给列好了购物单和尺码，我也是很快就结束战斗了，哈哈，这是我今天半个小时内的战利品： 其实他家的东西在这个时候买非常合适，经常打折到半价不到。童装的设计很好看，也基本都是纯棉的，穿着也很舒服。","link":"/boxing-day/"},{"title":"在霍华德城堡进入Beatrix Potter的童话世界","text":"以前每次去英国湖区都必定要到Beatrix Potter去看望Peter rabbit和它的小伙伴们。这次正好赶上有一个剧组在霍华德城堡进行三天的演出，当然不能错过。于是带娃去体验了一番。 今天的天气格外热，毒辣辣的太阳也不能阻挡孩子们和Peter rabbit的约会。 整个表演过程中让人如同穿越到了Beatrix Potter所生活的年代，也和童话中的人物，Peter，Tom等等来了个近距离接触。","link":"/beatrix-potter/"},{"title":"Build a bear, 只属于你的小熊","text":"家中小公主的生日马上就要到了。今天终于有机会带她去领会了一只只属于她自己的小熊。 这家店的最大特点就是，你选择的小熊从样式，填充，配套的衣服，各种配饰，都是由小朋友自己选择，甚至，每只小熊都有自己的出生证！这样，每只小熊都是独一无二的。 首先，小熊的选择就很多： 选择好小熊后，交给工作人员，他们会给小熊填充： 填充完毕后，则要给小熊选择衣服和各种配饰： 然后可以给小熊打印出生证明 终于可以抱上自己的小熊回家了：","link":"/build-a-bear/"},{"title":"龙井茶文化","text":"今天去体验了这里的茶文化，先去了当地人推荐的九溪烟树，然后徒步九溪十八涧至龙井村，品尝了清明节前的龙井，造物真的很神奇，清明前后差一天茶的味道就会有明显差别。","link":"/c839e61cfb1a4/"},{"title":"在Burnby Hall渡过的愉快周末","text":"难得孩子们的Half term，周末没有任何课外班，于是带着孩子们到Burnby Hall去玩。其实这个地方已经来过很多次了，每次的活动也都相对固定。但是感觉只要带着他们出来，孩子们就很高兴。我非常认可这句话：陪伴是给孩子最好的礼物。 首先拿着专门的鱼食到湖边喂鱼。 湖边的一家三口的长颈鹿造型 鸟舍旁的花圃中依然盛开的鲜花 非常精致的鸟舍中，鸟儿们在欢快的玩耍 转眼就到了午饭时间，到Cafe中点了一些Panini和toast Cafe里面还有一个小博物馆 这只狮子在被击毙前杀了好几个人 午饭后虽然还下着小雨，孩子们依然兴高采烈的在花园中奔跑 雨后彩虹 花园中有艺术家用铁丝网编制的各种动物造型： 公园中的无敌湖景 专门给鸽子搭建的小房子 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/burnby-hall/"},{"title":"北京老牛体验馆亲子体验 &#x2F; A great family day in Laoniu children discovery museum, Bejing","text":"早就听说北京老牛儿童探索馆的大名，一直没有机会带孩子去，今年回国期间终于如愿以偿，带着孩子在里面玩了半天，感觉真的是名不虚传，里面不仅好玩，而且还很有教育意义。老牛体验馆位于中国儿童中心院内，主要面向7岁以下儿童。在这里提倡亲子互动，让孩子们在玩的过程中探索和认识世界。老牛馆儿童票价60元，成人票价20元。这个收费算是非常低的了。我们是去的下午场。 I have heard this famous children discovery museum for a long time and luckily we took our kids there this year. This centre is a decent educational place to let kids have fun while learning new things, and let children explore and understand the world. It is mainly for children under 7 years old. The admission fee is 60 RMB for children and 20 RMB for adults. 到了儿童探索馆： We have arrived! 进入老牛馆后先到了左边的布偶表演区，孩子们在操纵木偶表演： First we went to the puppet show area which children are the directors! 接下来先来到空气动力学的科学区，这里通过各种道具把空气动力学的基本原理展示给孩子们。首先是这里通过吸力把塑料球吸引到顶部。 Then we came to the aerodynamics scientific area, where through a variety of experiments to show children the basic principles of aerodynamics. 孩子在聚精会神的看着： Kids are watching 旁边是这个可以攀爬的网状金属树：儿子已经迫不及待的爬上去了 Next to this is the climbing net 小女儿也不甘示弱： My daughter also likes it 旁边还有一个展示水流和水的冲击力的科学区，孩子们可以在这里玩水： There is also a science area showing the impact of water. 这里可以教孩子们了解脉搏和心跳： Children can learn pulse and heartbeat here 放了一辆真的小汽车来教孩子们了解汽车构造： A really car for kids to try 任何一个儿童中心都必不可少的shopping体验区 The shop 女孩子们最喜欢的过家家 Girls love this kind of imaginative play 宠物医院的两个小医生 Two pets doctor 游玩结束后去了非常有名的便宜坊餐厅去吃北京烤鸭，这个餐厅布置得非常雅致： We went to the famous PianYiFang restaurants to have dinner, the restaurant is very nice and comfortable 大红灯笼 Red lanterns 餐厅中的空间很大，孩子们在饭前饭后可以自由活动。孩子们首先都被这两只鹦鹉给吸引过去了： The children were first attracted by the two parrots 北京烤鸭一如既往地好吃，当时就没有拍照，比较惊艳的是这两个素菜。都是第一次吃，但都非常爽口。 Beijing roast duck, as always, delicious, but we didn’t take photos. I was impressed by the two vegetable dishes. 黄金红薯泥： Gold sweet potato mash 非常喜欢这个凉拌冰菜： I love this icy vegtable https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。 Please follow, resteem and upvote @aafeng.","link":"/a-great-family-day-in-laoniu-children-centre-bejing/"},{"title":"国外经典儿童图书推荐之 - Can&#39;t You Sleep, Little Bear?","text":"今天给大家推荐一本非常温情的睡前读物：Can’t You Sleep, Little Bear? 在故事中一只小熊和一只大熊生活在一起。白天它们一起玩耍，晚上小熊上床后大熊坐在旁边读书。可是小熊总是说害怕黑，于是大熊先后给小熊拿来了一盏小灯，稍大的灯，和最大的灯，希望小熊能够入睡，可是小熊总是能够找到各种理由说房间里仍然黑，它害怕。最后在月光的沐浴下，小熊终于达到了自己的目的：在大熊的怀抱中睡着了。 图源：Amazon 这个故事告诉了我们孩子们对于陪伴的需要。在孩子们提出种种要求的时候，要透过现象看本质，看看孩子们究竟需要的是什么，而不能一概而论的打断和拒绝。同时书中的对话也堪称经典。比如：“I’m scared,” said Little Bear. “Why are you scared, Little Bear?” asked Big Bear.“I don’t like the dark,” said Little Bear. “What dark?” said Big Bear. “The dark all around us,”语言非常简单，但是充分表达出了小熊的心里活动。因此不仅故事本身，故事中的语言也非常适合孩子们学习。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/can-t-you-sleep-little-bear/"},{"title":"Deleted, don&#39;t vote","text":"Deleted","link":"/chester-rows-5glqgotn/"},{"title":"Chester Rows","text":"Half term到了，全家来Chester这里来度个长周末。 这座小城非常漂亮，给我印象最深的是Chester Rows。说起Chester Rows风格的建筑，其实很多人都见过，但却未必知道其源于切斯特。 其实在英国的很多地方，比如伦敦Liberty商场，都能见到由木头搭建，黑色木梁，白色墙壁的建筑。 这种建筑采用的是中世纪都铎风格，看起来黑白格外分明，一般最低两层为商铺。这种建筑风格就叫做Chester Rows，其最大特点就是那两层由成排房子搭建并连接的长走廊。顾名思义，切斯特就是这种建筑风格的发源地。 Posted using Partiko Android","link":"/chester-rows-pxhivo4c/"},{"title":"Chester动物园游记","text":"前一段时间全家去Chester动物园去玩，今天简单整理一下。Chester动物园据说非常有名，在欧洲能排在前几名。我们共两家人在动物园中暴走了一整天，直到闭园还没有看完。而且在这里看到的一些动物是我在其他动物园中从未看见过的。 Chester动物园入口 动物园中的犀牛，真心替它们觉得冷。也许这些犀牛都已经是第N代移民，已经适应英国这里的气候了。 Chester动物园中的大象 原来一直知道Hyrax这种动物，但没有见过，今天终于对上号了： 在别的动物园从没见过这货，感觉又像斑马，又像野驴，其实它的名字叫做Okapi 动物园中也有一个小型的水族馆，里面的热带生物也不少。","link":"/chester/"},{"title":"Chinese translation of Byteball betting bot (688 words, 100% completion)","text":"RepositoryGithub: https://github.com/byteball/username-attestation Crowdin link: https://crowdin.com/project/byteball-betting-bot Simplified Chinese page: https://crowdin.com/project/byteball-betting-bot/zh-CN# Project DetailsByteball is a crypto blockchain which offers some distinct features to avoid many issues associated with other blockchains. Unlike a linear chain in Bitcoin, Byteball uses a DAG (directed acyclic graph). The main features include enhanced privacy, multiple asset classes, free distribution, conditional payments etc. Byteball bots is a great feature to do some work automatically. Translating this project to Chinese will help promoting it to Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 2,164 words. In this contribution, I have translated 688 words and make the Simplified Chinese translation to 100%. Abbreviations e.g. ‘BB’ have been used in some source strings - it is easy to understand that ‘BB’ means Byteball in English. However, for Chinese users, they might be confused while seeing ‘BB’ in Chinese translation. Therefore, instead of using ‘BB’ as is, I use ‘Byteball’ in the translated texts. Another issue is to be consistent with previous translations, e.g. ‘World Community Grid’. A few versions can be found from various sources, e.g. wiki, search engine results, and previous translations, I have to choose the most appropriate one across the whole project. Thank you to the Chinese language manager for his suggestions. Languages I translate Byteball Bot from English to Simplified Chinese. Word Count I have translated 688 words in total. Here are the details: Username-attestation Before: 0% After: 450 words WCG distribution bot Before: 29% (98/336 words being translated) After: 336-98=238 words Total: 450 + 238 = 688 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-byteball-betting-bot-688-words-100-completion/"},{"title":"Chinese translation of ORO CRM -  1079 words completed (10)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my tenth contribution to this project and I have translated 1079 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1079 words in total. Here are the details: OroMailChimpBundle\\translations\\messages.en.yml Before:29% (228/763) translated. After:I translated 763-228 = 535 words. OroMailChimpBundle\\translations\\validators.en.yml Before:0% After:I translated 11 words. OroMarketingActivityBundle\\translations\\jsmessages.en.yml I translated 1 word. OroMarketingActivityBundle\\translations\\messages.en.yml Before:10% (19/185) translated. After:I translated 185-19=166 words. OroMarketingListBundle\\translations\\jsmessages.en.yml Before:0% After:I translated 64 words. OroMarketingListBundle\\translations\\messages.en.yml Before:40% (67/166) After:I translated 166-67=99 words. OroMarketingListBundle\\translations\\validators.en.yml Before:0% After:I translated 52 words. OroReportBundle\\translations\\messages.en.yml Before:76% (147/193) After:I translated 193-147=46 words. OroReportCRMBundle\\translations\\messages.en.yml Before:19% (26/131) After:I translated 131-26=105 words. Total: 535+11+1+166+64+99+52+46+105= 1079 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1079-words-completed-10/"},{"title":"Chinese translation of ORO CRM -  1083 words completed (7)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my sixth contribution to this project and I have translated 1083 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1083 words in total. Here are the details: OroMagentoBundle\\translations\\messages.en.yml Before:30% (1286/4269) translated by others. After:I translated 2369-1286= 1083 words. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1083-words-completed-7/"},{"title":"Chinese translation of ORO CRM -  1099 words completed (6)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my sixth contribution to this project and I have translated 1099 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1099 words in total. Here are the details: OroDotmailerBundle\\translations\\messages.en.yml Before:81% (1184/1451) translated by others. After:I translated 1451-1184= 267 words. OroDotmailerBundle\\translations\\validators.en.yml Before:0% After:I translated 11 words. OroHangoutsCallBundle\\translations\\messages.en.yml Before:6% (3/49) translated by others. After:I translated 49-3= 46 words. OroMagentoBundle\\translations\\jsmessages.en.yml Before:15% (17/110) translated by others. After:I translated 110-17= 93 words. OroMagentoBundle\\translations\\messages.en.yml Before:14% (604/4269) translated by others. After:I translated 1286-604=682 words. Total: 267+11+46+93+682=1099 Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1099-words-completed-6/"},{"title":"Chinese translation of ORO CRM -  1105 words completed (9)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my ninth contribution to this project and I have translated 1105 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1105 words in total. Here are the details: OroMagentoBundle\\translations\\messages.en.yml Before:82% (3509/4269) translated. After:I translated 4269-3509 = 760 words. OroMagentoBundle\\translations\\validators.en.yml I translated 49 words. OroMagentoBundle\\translations\\workflows.en.yml Before:25% (14/56) translated. After:I translated 56-14 = 42 words. OroMagentoContactUsBundle\\translations\\messages.en.ymlBefore:66% (6/9) translated. After:I translated 9-6 = 3 words. OroMagentoContactUsBundle\\translations\\workflows.en.ymlBefore:27% (16/58) translated. After:I translated 58-16 = 42 words. OroMailChimpBundle\\translations\\messages.en.ymlBefore:2% (19/763) translated. After:I translated 228 -19 = 209 words. Total: 760+49+42+3+42+209 = 1105 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1105-words-completed-9/"},{"title":"Chinese translation of ORO CRM -  1121 words completed (5)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my fifth contribution to this project and I have translated 1,121 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count OroCRMTaskBundle\\translations\\jsmessages.en.yml Before:56% After:I translated 23-13=10 words. OroCRMTaskBundle\\translations\\messages.en.yml Before:36% After:I translated 87-32=55 words. OroCRMTaskBundle\\translations\\validators.en.yml Before:0% After:I translated 15 words. OroCRMZendeskBundle\\translations\\messages.en.yml Before:64% After:I translated 200-128=72 words. OroDotmailerBundle\\translations\\jsmessages.en.yml Before:0% After:I translated 32 words. OroDotmailerBundle\\translations\\messages.en.yml Before:17% After:I translated 1184-247= 937 words. Total word count 10+55+15+72+32+937=1121 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1121-words-completed-5/"},{"title":"Chinese translation of ORO CRM  -  1127 words (2)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my second contribution to this project and I have translated 1,127 words in this submission. There are some marketing terms need careful consideration to get most appropriate Chinese translations. For example, when plural is used, sometimes it means the same as singular (e.g. Event and Events all mean ‘事件’), but sometimes plural means the count of something, e.g. Forwards means number of forward so it should be translated to ‘转发数’, not ‘转发’. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1,127 words in total. Here are the details: OroCaseBundle\\translations\\messages.en.yml Before:50% (245/481) translated by others. After:I translated 481-245= 236 words. OroChannelBundle\\translations\\jsmessages.en.yml Before:97% (47/48) translated by others. After:I translated 48-47= 1 word. OroChannelBundle\\translations\\messages.en.yml Before:55% (104/187) translated by others. After:I translated 187-104= 83 words. OroContactBundle\\translations\\messages.en.yml Before:93% (739/790) translated by others. After:I translated 790-739= 51 words. OroContactBundle\\translations\\validators.en.yml Before:91% (79/86) translated by others. After:I translated 86-79= 7 words. OroContactUsBundle\\translations\\messages.en.yml Before:66% (55/83) translated by others. After:I translated 83-55= 28 words. OroCRMCampaignBundle\\translations\\messages.en.yml Before:24% (76/309) translated by others. After:I translated 309-76= 233 words. OroCRMCaseBundle\\translations\\messages.en.yml Before:88% (142/161) translated by others. After:I translated 161-142= 19 words. OroCRMChannelBundle\\translations\\jsmessages.en.yml Before:97% (47/48) translated by others. After:I translated 48-47= 1 word. OroCRMContactUsBundle\\translations\\messages.en.yml Before:90% (106/117) translated by others. After:I translated 117-106= 11 words. OroCRMDotmailerBundle\\translations\\messages.en.yml Before:31% (278/894) translated by others. After:I translated 744-278= 457 words. Total=236+1+83+51+7+28+233+19+1+11+457 = 1127 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1127-words-2/"},{"title":"Chinese translation of ORO CRM -  1133 words completed (11)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my eleventh contribution to this project and I have translated 1133 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1133 words in total. Here are the details: OroSalesBundle\\translations\\messages.en.yml Before:63% (1177/1843) After:I translated 1843-1177=666 words. OroSalesBundle\\translations\\workflows.en.yml Before:37% (80/212) After:I translated 212-80=132 words. OroTrackingBundle\\translations\\messages.en.yml Before:6% (22/357) After:I translated 357-22=335 words. Total: 666+132+335 = 1133 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1133-words-completed-11/"},{"title":"Chinese translation of ORO CRM -  1140 words completed (8)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my eighth contribution to this project and I have translated 1140 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1140 words in total. Here are the details: OroMagentoBundle\\translations\\messages.en.yml Before:55% (2369/4269) translated by others. After:I translated 3509-2369= 1140 words. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1140-words-completed-8/"},{"title":"Chinese translation of ORO CRM -  1142 words completed (4)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my third contribution to this project and I have translated 1,142 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1,142 words in total. Here are the details: OroCRMMailChimpBundle\\translations\\messages.en.yml Before:55% (387/702) translated by others. After:I translated 702-387=315 words. OroCRMMailChimpBundle\\translations\\validators.en.yml Before:0% After:I translated 11 words. OroCRMMarketingListBundle\\translations\\jsmessages.en.yml Before:0% After:I translated 64 words. OroCRMMarketingListBundle\\translations\\messages.en.yml Before:33% After:I translated 156-53=103 words. OroCRMMarketingListBundle\\translations\\validators.en.yml Before:0% After:I translated 19 words. OroCRMReportBundle\\translations\\messages.en.yml Before:79% After:I translated 205-162=43 words. OroCRMSale\\translations\\jsmessages.en.yml Before:0% After:I translated 36 words. OroCRMSaleBundle\\translations\\messages.en.yml Before:39% After:I translated 913-362=551 words. Total: 315+11+64+103+19+43+36+551=1142 Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1142-words-completed-4/"},{"title":"Chinese translation of ORO CRM (12) - 1046 words 100% completion","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my twelfth and final contribution to this project and I have translated 1046 words in this submission. The Simplified Chinese translation for this project is 100% completed. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1046 words in total. Here are the details: OroSalesBundle\\translations\\jsmessages.en.yml Before:0% After:I translated 40 words. OroTaskBundle\\translations\\jsmessages.en.yml Before:86% (20/23) After:I translated 23-20=3 words. OroTaskBundle\\translations\\messages.en.yml Before:57% (100/175) After:I translated 175-100=75 words. OroTaskBundle\\translations\\validators.en.yml Before:0% After:I translated 15 words. OroTaskBundle\\translations\\workflows.en.yml Before:50% (6/12) After:I translated 6 words. OroZendeskBundle\\translations\\messages.en.yml Before:13% (122/922) After:I translated 800 words. I have also corrected some translations done by other translators (not in Davinci team) in the following folders: OroCRMReportBundle: 33 OroChannelBundle: 27 OroCRMAbandonedCartBundle: 2 OroCRMCallBundle: 2 OroAnalyticsBundle: 3 OroCRMChannelBundle: 18 OroCRMContactBundle: 9 OroCRMDotmailerBundle: 3 OroCRMMagentoBundle: 10 Subtotal: 107 Total: 40+3+75+15+6+800+107 = 1046 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-12-1046-words-100-completion/"},{"title":"Chinese translation of ORO CRM -  1207 words completed (3)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my third contribution to this project and I have translated 1,207 words in this submission. Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 1,207 words in total. Here are the details: OroCRMDotmailerBundle\\translations\\messages.en.yml Before:83% (744/894) translated. After:I translated 894-744= 150 words. OroCRMHangoutsCallBundle\\translations\\messages.en.yml Before:6% (3/49) translated by others. After:I translated 49-3= 46 words. OroCRMMagentoBundle\\translations\\jsmessages.en.ymlBefore:28% (35/121) translated by others. After:I translated 121-35=86 words. OroCRMMagentoBundle\\translations\\messages.en.ymlBefore:60% (817/1343) translated by others. After:I translated 1343-817 = 526 words. OroCRMMagentoBundle\\translations\\validators.en.yml Before:0% (0/31) translated by others. After:I translated 31 words. OroCRMMagentoContactUsBundle\\translations\\messages.en.yml Before:75% (6/8) translated by others. After:I translated 8-6= 2 words. OroCRMMailChimpBundle\\translations\\messages.en.yml Before:2% (21/702) translated by others. After:I translated 387-21=366 words. Total=150+46+86+526+31+2+366 = 1207 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-1207-words-completed-3/"},{"title":"Chinese translation of ORO CRM -  685 words completed (1)","text":"Repositoryhttps://github.com/oroinc/crm Crowdin link: https://crowdin.com/project/oro-crm Simplified Chinese page: https://crowdin.com/project/oro-crm/zh-CN# Project DetailsOroCRM is an open-source PHP CRM (Client Relationship Management) platform. It is very flexible to meet various business cases. This framework offers customer management tools, sales pipelines, account management, marketing campaigns, reporting tools. It can be integrated with third party software and also can be deployed either in cloud environments or on-premise setup. The framework is scalable from a small business to large enterprises. OroCRM is an ideal solution for managing customer data, building relationships, and eventually boosting sales. I have decided to translate the OroCRM to Simplified Chinese since China is a big market and hopefully my translation will help OroCRM get more Chinese users. Contribution SpecificationsTranslation Overview The whole project consists of 21,391 words. Other translators have translated 37% of the whole project. There are lots of incomplete files in the project due to the previous translators’ choice of strings to be translated and newly added strings by project owner. This is my first contribution to this project, therefore I spent some time to check previous translations and try to make sure my translations will be consistent with previous ones, e.g. using the same terms (if they are appropriate). Languages I translate OroCRM from English to Simplified Chinese. Word Count I have translated 685 words in total. But there are some duplicates, so my estimation is about 500 words in this submission. Here are the details: OroAbandonedCartBundle\\translations\\messages.en.yml Before:80% (116/145) translated by others. After:I translated 145-116=29 words. OroAccountBundle\\translations\\messages.en.yml Before:62% (112/179) translated by others. After:I translated 179-112=67 words. OroActivityContactBundle\\translations\\messages.en.yml Before:23% (41/171) translated by others. After:I translated 171-41=130 words. OroAnalyticsBundle\\translations\\messages.en.yml Before:97% (147/151) translated by others. After:I translated 151-147=4 words. OroCallBundle\\translations\\messages.en.yml Before:41% (100/239) translated by others. After:I translated 239-100=139 words. OroCampaignBundle\\translations\\messages.en.yml Before:11% (41/351) translated by others. After:I translated 351-41=311 words. OroCampaignBundle\\translations\\validators.en.yml Before:79% (19/24) translated by others. After:I translated 24-19=5 words. Total=29+67+130+4+139+311+5=685 Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-oro-crm-685-words-completed-1/"},{"title":"Chinese translation of Steem White Paper (Genesis) - 1107 words completed","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. I have translated the abstract, introduction, and part of “Recognizing Contribution”. There are 1107 (6%) words in this submission. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 0 words translated. After my submission: 1107 words translated. In this submission, no duplicate strings, links and code have been found except key terms, e.g. Steem. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-1107-words-completed/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1085 words completed (10)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Account Creation”, “Justifying Minimum Balances”, “Adjusting the Reserve Ratio”, and “Effectiveness Relative to Fees”. There are 1,085 words in this submission and I have completed 70% of the whole project. It is very interesting to know the ideas of implementing Steem account systems, why reserve ratio is important, and how it prevents Steem blockchain from potential network flooding. It was a bit challenging to translate these ideas as some math are introduced to prove how the model works. To do a better translation, I have to understand how the system works before start translating the strings. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 10,292 words (63%) have been translated. After my submission: 11,377 words (70%) translated. In this submission, no duplicate strings, links have been found except a very short equation (only contains a few words). Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1085-words-completed-10/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1093 words completed (11)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Renting vs. Buying vs. Time Sharing”, “Performance and Scalability”, and part of “Allocation &amp; Supply”. There are 1,093 words in this submission and I have completed 76% of the whole project. Comments I believe that there are two typos in the source string, e.g. ‘Optanetechnology’ should be ‘Optane technology’. I have left comments in Crowdin for project owner. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 11,377 words (70%) have been translated. After my submission: 12,470 words (76%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. transaction. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9)Chinese translation of Steem White Paper (Genesis) - 1085 words completed (10) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1093-words-completed-11/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1104 words completed (8)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Botnet Resistant”, “Mining Pool Resistant”, “Eliminating Transaction Fees”, “The Problem With Fees”, “Micropayments Don’t Work”, “Fees are a Barrier to Entry”, “Changing Fees”, “Sybil Attacks”, and part of “Full Reserve vs Fractional Reserve”. There are 1,104 words in this submission and I have completed 56% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 7981 words (49%) have been translated. After my submission: 9085 words (56%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1104-words-completed-8/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1113 words completed (6)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Voting Collusion”, “Rate Limited Voting”, “Delayed Payouts”, “Payout Distribution”, “Rewarding Parent Posts” and “Payouts”. There are 1,113 words in this submission and I have completed 41% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 5657 words (34%) have been translated. After my submission: 6770 words (41%) translated. In this submission, no duplicate strings, links and code have been found except a math formula and key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1113-words-completed-6/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1112 words completed (4)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have been translating “Steem Dollars (SMD)”, e.g. I have finished “Sustainable Debt to Ownership Ratios”, “Interest”, “Setting Price Feeds”, “Subjective Contributions”, and part of “Distributing Currency”. There are 1112 words in this submission and I have completed 28% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 3429 words (21%) have been translated. After my submission: 4541 words (28%) translated. In this submission, no duplicate strings, links and code have been found except key terms, e.g. Steem. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1128-words-completed-4/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1135 words completed (13)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Impact of Token Creation Rate”, “Impact of Token Creation Rate Greater than Ninety-Percent”, and part of “Accounting In Steem”. There are 1,135 words in this submission and I have completed 86% of the whole project. Comments I have found a typo and left a comment for project owner, e.g. “insigni cant” should be “insignificant”. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 12,962 words (79%) have been translated. After my submission: 14,097 words (86%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9)Chinese translation of Steem White Paper (Genesis) - 1085 words completed (10)Chinese translation of Steem White Paper (Genesis) - 1093 words completed (11)Chinese translation of Steem White Paper (Genesis) - 492 words completed (12) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1135-words-completed-13/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1132 words completed (5)","text":"Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5) Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have been translating “Steem Dollars (SMD)”, e.g. I have finished “Distributing Currency”, “Voting on Distribution of Currency”, and part of “Voting Collusion”. There are 1132 words in this submission and I have completed 34% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 4525 words (27%) have been translated. After my submission: 5657 words (34%) translated. In this submission, no duplicate strings, links and code have been found except key terms, e.g. Voting. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1132-words-completed-5/"},{"title":"Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have been translating “Steem Dollars (SMD)”, e.g. I have finished “Minimizing Fraudulent Feeds”, “Mitigating Timing Attacks”, “Minimizing Abuse of Conversions”, “Liquidity”, and part of “Sustainable Debt to Ownership Ratios”. There are 1135 words in this submission and I have completed 21% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 2294 words (14%) have been translated. After my submission: 3429 words translated. In this submission, no duplicate strings, links and code have been found except key terms, e.g. Steem. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1135-words-completed-3/"},{"title":"Chinese translation of Steem White Paper (Genesis) - 1189 words completed (2)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Recognizing Contribution”, and have been translating “Ways to contribute” including Capital Contributions, Steem (STEEM), Steem Power (SP), and part of “Steem Dollars (SMD)”. There are 1189 words in this submission and I have completed 14% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 1105 words (6%) have been translated. After my submission: 2294 words translated. In this submission, no duplicate strings, links and code have been found except key terms, e.g. Steem. Previous submissionsChinese translation of Steem White Paper (Genesis) - 1107 words completed Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1189-words-completed-2/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1207 words completed (9)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Full Reserve vs Fractional Reserve”, “Bandwidth Instead of Micropayment Channels”, “Example Implementation”, “Case Study: Bitcoin”, “Impact of Capacity”, “Maximum Number of Unique Users”, and “Comparison to Fees”. There are 1,207 words in this submission and I have completed 63% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 9,085 words (56%) have been translated. After my submission: 10,292 words (63%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Also there are two blocks of pseudocode, about 100 words in total in the source strings. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1207-words-completed-9/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  1211 words completed (7)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Consensus in Steem”, “Mining in Steem”, “Mining Rewards require Steem Power”, “Mining Algorithm”, and part of “Botnet Resistant”. There are 1,211 words in this submission and I have completed 49% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 6770 words (41%) have been translated. After my submission: 7981 words (49%) translated. In this submission, no duplicate strings, links have been found except a few lines of pseudocode and key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-1211-words-completed-7/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  506 words completed (14)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Accounting In Steem”, “The Power of Steem”, and part of “No Micropayments, Tips Optional”. There are 506 words in this submission and I have completed 90% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 14,097 words (86%) have been translated. After my submission: 14,603 words (90%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9)Chinese translation of Steem White Paper (Genesis) - 1085 words completed (10)Chinese translation of Steem White Paper (Genesis) - 1093 words completed (11)Chinese translation of Steem White Paper (Genesis) - 492 words completed (12)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (13) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-506-words-completed-14/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  492 words completed (12)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Contribution Rewards”, “Power Rewards” and “SMD operations”. There are 492 words in this submission and I have completed 79% of the whole project. Comments This is my 12th contribution in this project, also the hardest one so far as it contains quite a few long sentences, I have to refine my translations a couple of times to make sure I get all translations right. Here are a couple of examples: Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 12,470 words (76%) have been translated. After my submission: 12,962 words (79%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9)Chinese translation of Steem White Paper (Genesis) - 1085 words completed (10)Chinese translation of Steem White Paper (Genesis) - 1093 words completed (11) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-492-words-completed-12/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  772 words completed (15)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “No Micropayments, Tips Optional”, “Value is in the Links”, “Solving the Cryptocurrency Onboarding Problem”, and part of “Solving the Cryptocurrency Liquidation Problem”. There are 772 words in this submission and I have completed 94% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 14,603 words (90%) have been translated. After my submission: 15,375 words (94%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9)Chinese translation of Steem White Paper (Genesis) - 1085 words completed (10)Chinese translation of Steem White Paper (Genesis) - 1093 words completed (11)Chinese translation of Steem White Paper (Genesis) - 492 words completed (12)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (13)Chinese translation of Steem White Paper (Genesis) - 506 words completed (14) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-772-words-completed-15/"},{"title":"Chinese translation of Steem White Paper (Genesis) -  839 words completed (16)","text":"Repositoryhttps://github.com/bookchainio/steem-whitepaper-genesis Crowdin link: https://crowdin.com/project/steem-whitepaper-genesis Project Details Steem is a Delegated Proof of Stake blockchain that uses a “Proof of Brain” social consensus algorithm for token allocation. Steem is a blockchain based social network platform. Content authors and curators are rewarded by cryptocurrencies for their contributions to the platform. I have been actively using Steem/Steemit for a year and have an enjoyable experience with Steem blockchain. It is a great opportunity for me to translate Steem White paper. Contribution SpecificationsTranslation Overview The Steem white paper only has 1 file containing 16,214 strings. In this submission, I have finished “Solving the Cryptocurrency Liquidation Problem”, “Censorship”, “Solving Organic Discovery via Search Engine Optimization”, “Shifting Toward Blockchain-based Attribution”, “Replacing Advertising with Blockchain-based Content Rewards“, and “Conclusion”. There are 839 words in this submission and I have completed 100% of the whole project. Languages I translate Steem White paper from English to Simplified Chinese. I am an IT professional with experience in cryptocurrencies and blockchains. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 15,375 words (94%) have been translated. After my submission: 16,214 words (100%) translated. In this submission, no duplicate strings, links have been found except key terms, e.g. Steem. Previous contributionsChinese translation of Steem White Paper (Genesis) - 1107 words completedChinese translation of Steem White Paper (Genesis) - 1189 words completed (2)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (3)Chinese translation of Steem White Paper (Genesis) - 1112 words completed (4)Chinese translation of Steem White Paper (Genesis) - 1132 words completed (5)Chinese translation of Steem White Paper (Genesis) - 1113 words completed (6)Chinese translation of Steem White Paper (Genesis) - 1211 words completed (7)Chinese translation of Steem White Paper (Genesis) - 1104 words completed (8)Chinese translation of Steem White Paper (Genesis) - 1207 words completed (9)Chinese translation of Steem White Paper (Genesis) - 1085 words completed (10)Chinese translation of Steem White Paper (Genesis) - 1093 words completed (11)Chinese translation of Steem White Paper (Genesis) - 492 words completed (12)Chinese translation of Steem White Paper (Genesis) - 1135 words completed (13)Chinese translation of Steem White Paper (Genesis) - 506 words completed (14)Chinese translation of Steem White Paper (Genesis) - 772 words completed (15) Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-steem-white-paper-genesis-839-words-completed-16/"},{"title":"Chinese translation of Verdaccio - 1518 words completed","text":"Repositoryhttps://github.com/verdaccio Crowdin link: https://crowdin.com/project/verdaccio Project Details Verdaccio is a lightweight private proxy registry with an entirely optional configuration that allows you to host private Node.js packages and compatible with all client package managers such npm, yarn or pnpm. It would be great to have a private npm registry for a Nodejs team, in case of the central npm registry goes down - Verdaccio is such an open source solution. Verdaccio can start with a small default configuration and scale or adapt if necessary. Contribution SpecificationsTranslation Overview Spreading in 31 files, there are 10,074 words to translate in Verdaccio project. In this submission, I have translated 1,518 words in 3 files: packages.md, plugins.md and puppet.md. Languages I translate Verdaccio from English to Simplified Chinese. I have software development experience for many years and have used similar projects like Verdaccio in my projects. Therefore, the ideas and the terms in Verdaccio is not new to me. I have translated several projects in Crowdin and have been promoted to proofreader in various projects by project owners. Here is my Crowdin profile. Word Count Before my submission: 0 words translated in plugins.md, packages.md, and puppet.md. After my submission: I have translated 100% of plugins.md and puppet.md, and 95% of packages.md (just one sentence left as I need to check with project owner). In this submission, Crowdin shows I have translated 1,518 words including some code snippets. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/chinese-translation-of-verdaccio-1518-words-completed/"},{"title":"威尔士Chirk Castle一日游","text":"和朋友一起去威尔士的Chirk Castle游玩。Chirk Castle于爱德华一世时期, 1310年建成，是英国十大古堡之一。 它坐落于一个美丽的庄园内，周围山峦迭起，郁郁葱葱，景色宜人。下面记录一下： 眺望远处美景 首先到里面的果园逛了逛。 被园丁修过的苹果树 熟透了的Rasberry 无花果 不知名的植物 紫色的萝卜 南瓜 豆角 天气非常好： 从城堡山坡上往下望，视野开阔，景色很美，这里还有英国这里的特色大草垛 城堡内部人很多： 城堡内部有孩子们扔绳子的游戏： 格子游戏： 城堡内部的各种武器： 威尔士的标志： 这些老古董椅子可能都已经不堪重负了，因此上面放了一些带刺的叶子以防游客不小心坐上去, 可是如果真的不小心坐上去了呢？画面太美不敢想。。。 餐厅： 客厅 猜猜这个是干什么用的？ 展示的盔甲 窗外的风景： 孩子们在修建整齐的花园中奔跑： 大树桩做成的椅子：","link":"/chirk-castle/"},{"title":"在没有大鲸的日子里 - CN区近几日变故有感","text":"深秋中的约克，枯黄的树叶中令人惊奇的绽发了新枝 最近中文区几位临时大鲸被取消代理带来了一系列的反应： 中文区发文数量锐减，收入也是少的可怜。有个别人开始找各种所谓的证据落井下石，无中生有。我们中文区的一些热心的，也是让人敬佩的朋友也是进行了各种反击。我在一方面敬佩他们的侠肝义胆时也是深感有心无力。Money talks，这句让我不是很喜欢的口号道出了一个无奈的事实，没有了强有力的大鲸支持，要想让一个社区茁壮成长，太难了。 最早加入Steemit社区是受朋友的影响，说起来也正好赶上了中文区最为火爆的两个月，慢慢的也就养成了写些文字记录日常点滴的习惯。也有幸受几位大鲸的眷顾，一直在Steemit下坚持了下来。现在整个中文区这个美好的平衡突然被打破，估计很多人都会想到一个问题，就是写还是不写。其实，我觉得完全没有必要勉强自己，如果你心中还在问这个问题，那么说明你可能有其他更重要的事情要做，那么做你心中真正想做的事吧。如果你真心还想在steemit上写，可能也不会问这个问题了。 我感觉自己目前还没有要停下来的打算，即使不在steemit发，这两个月的时间也养成了在自己博客上记录生活中的各种趣事，还有琐事的习惯。反正也要记录，顺便也就发在steemit上了。 只是希望中文区就像我所看到树上的新枝一样，有新的希望在萌芽中，希望不要太久。Steem on，与大家共勉。","link":"/cn/"},{"title":"一个奇葩但**貌似**很实用的Chrome浏览器扩展","text":"今天偶然看到有人推荐这个Chrome浏览器扩展。它的基本用途就是能够在你看Youtube视频的时候能够对你进行人脸识别，一旦你走开，就会自动暂停播放，等你回来了继续。乍一看，这个扩展就是我一直想要的啊！平时看Youtube视频的时候，如果有事走开，回来后可能会错过一些剧情，还要倒回去重新看。但看了看review，打消了我要安装的念头，绝大多数人都喜欢这个idea，但是人脸识别这块似乎不能正常工作。希望开发团队早日解决这个问题。或者，Youtube直接自己搞定。总之，非常期待这样的功能！ 感觉，AI离我们的生活越来越近了，听说美颜相机都发展到AI阶段了，我们的生活越来越多的暴露在各种AI APP的监控下了。。。","link":"/chrome/"},{"title":"从今天的Coffee Morning想到的，慈善+区块链技术也许是下一个热点？","text":"今天单位发邮件鼓励大家在明天Tea break休息的时候参加The World’s Biggest Coffee Morning。这个活动是由Macmillan发起的一个为癌症患者募捐的活动。在去年的活动中共募得了2950万英镑的。今年希望超过去年的捐款总数。这项活动发起于1990年，最早只是小范围的活动，但从第二年开始在全英国推广并获得越来越多人的支持，迄今为止一共募得一亿六千五百多万的资金。 在英国有很多这样的民间公益组织，它们的目的各不相同，有的是为癌症患者，有为心脏病人的，有的是为有特殊需要的儿童的，有为男性健康的。我查了一下2017年的最新数据，有16万这样的组织。当然这样的组织是需要在英国慈善委员会注册等级并接受监督管理的。我还是很喜欢英国这边的这种募捐方式，完全自愿，自己选择喜欢的慈善组织，捐多少也是随意。 感觉区块链技术似乎特别适合做这种慈善项目，账目完全公开透明，有没有哪位对这方面感兴趣的？可以做个类似Steem/Steemit的平台，哈哈，完全是我自己的YY。。。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/coffee-morning/"},{"title":"快别用Coinbase了！","text":"最近刚注册了Coinbase账户，正打算使用Coinbase。偶然看到了这篇文章，竟然有无数人吐槽Coinbase，把文章的大意翻译了一下，供大家参考。 原文在这里： https://steemit.com/bitcoin/@hilarski/stop-using-coinbase-for-bitcoin-and-ethereum-purchases 图片来源 主要原因有几条： 1) Coinbase曾经系统崩溃过，似乎是今年的事。而且也听说过他家曾经被黑过。2) 如果在他家用你的银行账户购买比特币有被银行关闭账户的风险。3) Coinbase有可能随时关闭你的账户。4) Coinbase出现问题的时候会影响整个比特币市场。5) 原文作者还有很多未提及的原因。 推荐几家交易网站/方式： 1) Kraken US Based2) Crypto Capital3) Local Bitcoins4) 和朋友直接交易5) Bittrex 原文下面有无数吐槽，看来Coinbase真的是有问题啊。。。","link":"/coinbase/"},{"title":"莎士比亚玫瑰剧院","text":"今年的莎士比亚玫瑰剧院今年新添了儿童剧Billy Shake Wonder Boy，讲述了莎士比亚童年时期的故事以及一些经典戏剧作品的创作过程。三个演员精彩又互动性极强的表演时不时把观众逗得哈哈大笑，最后还邀请小朋友们跟他们合影。 剧院设在建于13世纪的克利福德塔内部，在这里陆续演出一系列莎士比亚最著名的戏剧。剧场还会有一系列伊丽莎白时代的娱乐活动和传统美食。受到16世纪的传奇伦敦玫瑰剧场启发，玫瑰剧院将可以容纳950名观众，其中阳台上有600个座位，房间则可容纳350人站着欣赏演出。 Posted using Partiko Android","link":"/cxxgssb4/"},{"title":"绑定了dtube账号等待空投","text":"看到中文区不少人在说绑定dtube账号等待空投的事，于是把自己的账户也绑定好了，等待空投。 整个操作非常简单明了，只要按照网站的提示走就可以。 绑定好之后，想试用一下dtube的点赞，于是选择了一个视频赞了下去，哎，怎么是100%呢？？？后来仔细找了一下，原来在这里设置： 还有dtube的点赞比例是单独设置的： 不太理解这种设计的好处在哪里，反正我觉得不如将两个app完全同步的好。","link":"/dtube/"},{"title":"又一个赛季结束了","text":"今晚打完了本赛季的最后一场比赛，可以休息一下了。自从上个赛季晋级后，虽然对手更强了，但队友们都很给力，在本赛季成绩非常好，虽然未能连续晋级，但总成绩应该非常靠前。加油！期待下个赛季的到来。","link":"/e5cef92cefb03/"},{"title":"曼彻斯特最爱中餐，没有之一","text":"每次去曼彻底特都要到东馆，他家的铁板玉子豆腐更是每次必点。","link":"/efa5885028aa4/"},{"title":"烧烤季到了","text":"难得英国这里有一次这么好的天气，烧烤约起来。 Posted using Partiko Android","link":"/faa4ltuy/"},{"title":"购入了两个Engine Miner 4","text":"前天看到有人提到Engine Miner 4，感觉这个币很特殊，于是就购入了一个，到昨天收到了 3.5 ENG。对这个Miner的表现很满意。于是又购入并stake了一个Engine Miner。 今天满怀期待的在Steem Engine查了一下收益，只有1.19 ENG。怎么Miner多了，收益却少了？？？ 百思不得其解，辛亏看到了 @ericet 的这篇文章，才明白了原来全部是靠运气啊？？？这也太不靠谱了吧，我的运气一直不怎么好啊。。。 再观察几天，如果我的运气一如既往的差，还是unstake了吧。","link":"/engine-miner-4/"},{"title":"雨中游西湖","text":"虽然天气不给力，但雨中的西湖别有一番味道","link":"/fe531bf49a695/"},{"title":"Festival of ideas","text":"今天带孩子参加了一个当地的Festival of ideas，收获很大，寓教于乐，将很多科学，历史，艺术的知识通过游戏的方式体现出来，孩子们都是直到散场才走。有的游戏就连成年人都喜欢玩。 Posted using Partiko Android","link":"/festival-of-ideas-cgetlmtn/"},{"title":"从Gefion Fountain来说说丹麦和瑞典的百年爱恨情仇","text":"这次哥本哈根之行中抽空去看了看Gefion Fountain吉菲昂喷泉这个著名的景点。 也从网上查到了关于这个景点的一些传说。 wikipedia上是这样说的： 古代瑞典有位戈尔弗国王答应女神吉菲昂可以从瑞典国土挖出一块土地，但是限时一个昼夜。于是吉菲昂女神把她的四个儿子化为四头牛，用犁从瑞典国土挖出一大块土地，并把土地移到海上，就成为现在的西兰岛。 Gefion Fountain吉菲昂喷泉, 摄于2017.10.15 在和丹麦同事们闲聊中才知道原来还有另外一个版本。 相传从远古时代丹麦和瑞典就因为领土问题纷争不断， 于是吉菲昂女神就驾驭神牛耕出了一条分界线， 从而化解了纠纷。 姑且不论哪个传说更受大众承认， 但我听到的第二个传说却更能反应出丹麦和瑞典两国由来已久的各种纷争和百年的爱恨情仇。 其实在早期，也就是1523年以前，丹麦是北欧当之无愧的霸主，他的历史上也是英才辈出，比如哈拉德蓝牙王，玛格丽特女王等等。 周边国家都是俯首称臣。 但慢慢伴随着丹麦皇族内斗和瑞典的崛起， 丹麦在漫长的对瑞典的战争中国力逐渐削弱， 慢慢就变成了现在这样的小国。 而瑞典则实现了从一个跟班小弟到北欧老大的成功逆袭。 发展至今， 两国仍然在各种经济领域竞争。 但在对外时， 他们却都会异口同声的声称自己是北欧人。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/gefion-fountain/"},{"title":"Files Go - Free up space on your phone","text":"Files GoFree up space on your phone Screenshots Hunter’s commentDeveloped by Google, Files Go app is a great tool to help you manage Android phone storage. From the Files Go UI, you can see details storage amount of your phone, such as how much space has been used. Based on these information, you can decide if you want free up some spaces. You can set alerts for things like apps with a large cache of unnecessary files, duplicate files etc. Linkhttps://play.google.com/store/apps/details?id=com.google.android.apps.nbu.files&amp;hl=en ContributorsHunter: @aafeng This is posted on Steemhunt - A place where you can dig products and earn STEEM.View on Steemhunt.com","link":"/files-go-free-up-space-on-your-phone/"},{"title":"Great photos in Burnby Hall","text":"We had a great family day out in Burnby Hall, here are some photos:","link":"/great-photos-in-burnby-hall/"},{"title":"H. C. Andersen Fairy-Tale House安徒生童话屋游记","text":"一说到丹麦，很多人的第一印象就是安徒生童话。可以说安徒生是丹麦的国宝级人物。我们的这次丹麦之行自然要去拜访一下安徒生童话屋H. C. Andersen Fairy-Tale House。在童话屋中可以看到各种还原的经典童话场景，比如： 拇指公主， 美人鱼，皇帝的新装等等。在里面还可以看到介绍安徒生的生平， 安徒生的亲笔手稿以及收听安徒生的童话。 下面照片均拍摄于2017.10.14 童话屋的位置很方便，就位于最为热闹的市政厅广场一侧。地址： Rådhuspladsen 57，1550 København V，Denmark 一进入童话屋，首先看到的是这座安徒生的雕像。和市政厅广场的那座相比，这座雕像中的安徒生略显年轻。 同时在入口处还可以购买童话屋旁边的一个冒险屋门票，里面是各种恐龙和怪物，我家两个宝贝对那些东西不是很感兴趣。 购票进入后首先被这个神奇的水龙头所吸引，龙头中的水柱虽然很粗但其中的水一点都不会出来。估计水中掺了一些其他成份吧。 在童话屋中再现了安徒生很多著名图画中的场景，同时配有语音讲解。这是皇帝的新衣，神奇的是皇帝在照镜子的时候有时候镜子中看到的是穿着衣服，有时候则没有穿。这个我本来也没有发现。后来晚上到了酒店察看媳妇照得像片时才发现这个不同。 坚定的锡兵 最著名的小美人鱼，这个故事在讲解的时候，背景灯光会不断变换，在美人鱼面向的城堡那里会显现出一个女巫的影像。 拇指姑娘 在这里介绍安徒生的生平，包括他的童年，以及搬到哥本哈根后的生活和创作。 这里展示了安徒生最著名的童话书 另外，在这里还能收听3种语言的安徒生童话介绍（英语，中文，丹麦语）。其中有两个故事使用中文讲述的，我家两个宝贝听的非常认真。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/h-c-andersen-fairy-tale-house/"},{"title":"说说英国的万圣节Halloween","text":"今天去超市购物的时候发现Morrisons已经在大力促销各种万圣节的商品了，感觉在英国这里的万圣节一年比一年更热闹了。记得去年Morrisons超市的万圣节商品还没有这么多。今年摆满了整整两排货架。孩子们也都超级期盼万圣节，经常会有各种Party，还能挨家挨户的去要糖。下面来看看英国的这个鬼节都需要准备什么。 首先是需要准备各种道具。其实英国人在这方面还是脑洞很大的，除了经典的骷髅，僵尸，吸血鬼，女巫等等，好多人自己动手设计各种恐怖造型。记得两年前在我家搞的一个万圣趴，有一个朋友自己设计了一个恶鬼的面具，看起来超级恐怖，来我家要糖的孩子们被吓哭了好几个。哈哈，打算吓人的小鬼被大鬼给吓走了。 同时还有各种挂饰可以买回去装饰一下，更有万圣节的气氛。 另外英国这里的一个万圣节经典食物就是各种裹上糖的苹果，比如：Toffee Apple和Candy Apple，这个我是从来不买，毕竟孩子的牙齿还是要保护好的。 当然，过万圣节的话，南瓜灯肯定是主角之一。每年都要带着孩子们刻上一个南瓜灯。而且这里的很多学校在万圣节前会举办各种南瓜灯比赛，看看谁的南瓜灯最吸引人。这里似乎还有一个约定俗成，在万圣节那天如果谁家门口有南瓜灯，表示欢迎上门要糖，如果没有南瓜灯也没有任何万圣节装饰代表对万圣节不感兴趣，就不要上门打扰了。 感觉心情受着孩子们的影响，对万圣节也是有些期待了。","link":"/halloween/"},{"title":"国外经典儿童图书推荐之：Handa&#39;s surprise","text":"这次给大家推荐的这本图书是”Handa’s surprise”。最初接触到这本书的时候，只是觉得里面的插图非常漂亮，故事情节非常吸引人。但后来听一位在英国幼儿园工作的朋友介绍这本书时，才明白这本书中讲述的还有一些我没有想到的东西，比如，可以借助这本书的情节和孩子玩角色扮演游戏。后来我自己的两个孩子也是乐此不疲，家里的水果也就遭了殃。经常无数次被摔在地上，或者被遗落在了家中的某个角落了，直到彻底打扫卫生的时候才被发现，已经发霉长毛了。。。 书中讲述的是一个小朋友Handa选择了7种自己喜欢的水果送给自己的好朋友，有又甜又软的香蕉，有甜美多汁的橙子，还有非常creamy的牛油果，等等。在一路上水果不断被各种动物偷吃，快到她好朋友村庄的时候，水果已经快被偷吃完了。这时候正好碰巧遇到一直山羊撞到了一颗桔子树上，树上的桔子落了下来，Handa的水果筐里盛满了桔子。等到了她好朋友的村庄后，两个好朋友一看，满筐的桔子，而桔子正是Handa的好朋友最喜欢吃的水果。想想，这真的是一个大大的惊喜啊。这可能正应了中国的一句古话： 有心栽花花不开，无心插柳柳成荫。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/handa-s-surprise/"},{"title":"作为用户，看好Hive链生态系统，加仓HIVE","text":"自从上周六STEEM发生0.22.8888软分叉，冻结众多前见证人资产之后，昨天HIVE币价暴跌，最低时被腰斩。 关于HIVE和STEEM的硬分叉，双方可以说是各执一词，我就不在这里做过多评论了。但作为STEEM/HIVE用户，就目前而言，我更看好HIVE的生态系统。毕竟大多数的Dapp都迁移到Hive网络上了。包括这两天众多Dapp都要使用的基础服务Steemconnect也已经声明将于六月停止在Steem上的服务，在Hive上的hivesigner则可以正常使用。 由于HIVE有着一个完善的生态系统，因此我相信HIVE的币价会回归正常。在B网加仓了HIVE： 郑重声明，这只是我的个人行为，不能作为你的投资建议，风险自负。 作为一个普通用户，我更赞同早期Steem的宣传口号：Money talks，哪边把用户量做上去，把币价抬起来，哪边就能吸引更多的用户。目前我看到的是硬分叉前Steem中的大多数Dapp都迁移到了Hive网络，这样就会携带其大量用户进入Hive。当然，也期待孙老板能把Steem的蛋糕做大，币价也能做上去。","link":"/hive-hive/"},{"title":"如何在Hive上使用hivepy","text":"最近Hive和Steem分家，一直考虑原来在Steem下的一些程序如何能在Hive继续使用的问题。今天正好看到O哥发的这篇文章,很高兴的点进去看了看，原来O哥和我卡在同样的问题上了。 简而言之，就是提示找不到’hive’这个包。错误提示是： File &quot;/home/aaf/environments/myenv/lib/python3.5/site-packages/hive/cli.py&quot;, line 78, in legacyentry version=pkg_resources.require(&quot;hive&quot;)[0].version)) 其实，导致这个错误的原因是由于这里使用了错误的package名称，只要把这里的”hive”改为”hivepy”就可以了。 再运行： hivepy 可以看到； 需要注意，在调用hivepy库的时候，有些方法的名字发生了变化。必须做出相应调整，下面写了一个检查用户账号的测试程序： from sys import argv from hive.account import Account from datetime import datetime from hive import converter user = argv[1] user=user.replace(&quot;____&quot;,&quot;-&quot;) account = Account(user) cv = converter.Converter() print(&quot;Rep: %s&quot; % account.reputation(4)) print(&quot;HBD: %s, HIVE: %s&quot; % (account.balances[&apos;total&apos;][&apos;HBD&apos;], account.balances[&apos;total&apos;][&apos;HIVE&apos;])) print(&quot;SP: %.2f&quot; % (cv.vests_to_hp(account.balances[&apos;total&apos;][&apos;VESTS&apos;]))) print(&quot;reward_hbd_balance: %s&quot; % account.balances[&quot;rewards&quot;][&quot;HBD&quot;]) print(&quot;reward_hive_balance: %s&quot; % account.balances[&quot;rewards&quot;][&quot;HIVE&quot;]) print(&quot;reward_hp_balance: %.2f&quot; % cv.vests_to_hp(account.balances[&quot;rewards&quot;][&quot;VESTS&quot;])) 运行： python3 checkaccount.py aafeng 其输出为： Rep: 69.8117 HBD: 0.433, HIVE: 47.775 SP: 5344.49 reward_hbd_balance: 0.0 reward_hive_balance: 0.0 reward_hp_balance: 2.14","link":"/hive-hivepy/"},{"title":"Hive Wallet迟迟不能用，如果想要转移资产该怎么办？","text":"Hive已经推出好几天了，但其钱包功能一直不能用，每次点击“Wallet”时，都会给出一个很不友好的出错页面： 那么，如果真的需要将自己持有的Hive / HBD等转移到其他账号，或者交易所的话，该如何做呢？其实也很简单，只需要写几行Python代码就可以实现这样的功能。我这里使用的是hive-python，但里面有个坑需要填。具体请看这篇文章：如何在Hive上使用hivepy 具体代码就很简单了： import sys from hive import Hive from hive.account import Account if len(sys.argv) !=7: print (&apos;Usage: transfer.py ACCOUNT ACTIVE_KEY TO AMOUNT HBD/HIVE MEMO&apos;) exit() _from = sys.argv[1] _active_key = sys.argv[2] _to = sys.argv[3] _amount = float(sys.argv[4]) _type = sys.argv[5] _memo = sys.argv[6] wif = { &quot;active&quot;: _active_key } hive = Hive(keys=wif) account = Account(_from) hbdbalance = float(account.balances[&quot;available&quot;][&quot;HBD&quot;]) hivebalance = float(account.balances[&quot;available&quot;][&quot;HIVE&quot;]) if _type==&apos;HBD&apos; and hbdbalance &lt; _amount: print(&quot;Account balance low: %s&quot; % (str(hbdbalance))) exit() if _type==&apos;HIVE&apos; and hivebalance &lt; _amount: print(&quot;Account balance low: %s&quot; % (str(steembalance))) exit() hive.transfer(_to, _amount, _type, memo=_memo, account=_from) print (&quot;transferred %s %s to %s&quot; % (str(_amount),_type,_to)) 运行： python transfer.py aafeng YOUR_ACTIVE_KEY aafeng.test 0.001 HIVE test 从hiveblocks可以看到转账已经成功。","link":"/hive-wallet/"},{"title":"Hive和Steem都已经分家了，绝大多数账户的恢复账户还都是Steem意味着什么？","text":"Hive从Steem硬分叉之后，发生了很多事情。其中有一点就是，所有的Steem账户都在Hive上有了一个”分身”，用户名相同，密码相同，所有的设置都相同。其中重要的一点就是：绝大多数账户的恢复账户(Recovery account)是steem这个账户。究其原因，这取决于账户的创建方式。如果是通过Steemit官网创建的，那么默认恢复账号就是’steem’，如果是通过别的账户创建的，那么，恢复账号就是其父账号。 那么，这意味着什么呢？如果你的Hive密码丢失了，那么你所设置的Recovery account是可以帮你找回密码的。过去在Steem网络中，steem属于’官方’账号，在丢失密码时可以向其寻求帮助来找回密码。但是，在Hive中，steem这个账号似乎没有这个义务来帮助用户恢复密码了。 那么，对于众多Hive用户来说，建议更换Recovery账号，这样万一不幸丢失密码，可以多一层保险。推荐设置为自己家人或者好友的账号作为恢复账号。甚至，设置一个小号作为恢复账号都可以。 如果打算修改系统恢复账号，可以有以下几种方式： 首先，可以通过peakd.com来进行恢复。在首页中单击”ACTIONS”-&gt;”Keys &amp; Permissions”， 然后选择：”Recovery account” 然后按照提示进行操作就可以。在操作过程中需要提供Owner Key。 第二种方式：写一段简短的代码来实现这个操作。我是信任peakd.com这个网站的，但还是不想提供自己的Owner key给第三方。这时，可以通过Beem库实现这个操作。毕竟这是开源软件，可以读一下源代码明白是怎么运作的。具体更改恢复账号操作的源代码如下： import beem username = &apos;aafeng.test&apos; wif = { &quot;owner&quot;: “YOUR_OWNER_KEY” } hive = beem.Steem(nodes=[&apos;https://api.hive.blog&apos;], keys=wif) account = beem.account.Account(username, steem_instance=hive) account.change_recovery_account(new_recovery_account=&apos;aafeng&apos;) 运行这段程序，可以看到，我测试账号的恢复账号更改操作已经提交。 需要注意的是，出于账户安全的考虑，这个操作需要30天才能完成。 关于更多恢复账号的讨论，可以参阅这篇英文文章：https://peakd.com/witness-update/@engrave/review-your-recovery-account-if-you-dont-want-to-lose-your-assets","link":"/hive-steem-steem/"},{"title":"在Hive下尝试免费账号的创建","text":"尽管用Resource Credit创建账号已经被很多人讨论过，但自己一直没有尝试。今天在Hive下进行了尝试。下面的操作只是针对那些对编写代码不是很熟悉的朋友们的。对于众多的程序猿们，完全可以自己写一个很简单的程序来实现这个功能。 首先声明，以下操作是针对一个第三方工具进行的。在操作过程中需要提供自己账户的Active Key，因此建议大家在操作完成后更改自己的密码。 首先访问如下网址：https://www.reazuliqbal.com/AccountCreate/ 其源代码在这里：https://github.com/CodeBull/AccountCreate 至于这个操作需要多少RC,可以在这里查询：https://beempy.com/resource_costs 接下来输入自己的用户名和Active Key 然后单击“Claim Account”，界面上就会提示“You have successfully claimed a discounted account!” 在Hiveblocks上查看操作记录，可以看到已经创建成功； 同时可以看到我的Resource Credit只剩下一半了。当然，HP越多，消耗的RC百分比越少。HP太少了，甚至无法进行如下的操作。 接下来就可以创建账户了。输入待创建账号的用户名和密码，以及自己的Active Key，单击“Create Account”，就可以创建账号了： 在hiveblocks上查看，可以看到新账号已经被创建： 感觉RC空着也是空着，不如先领取一些”discounted account“，如果真的需要创建账号时就很方便了。","link":"/hive/"},{"title":"Hole of Horcum徒步之旅","text":"周末约着朋友一起去North York Moors附近的Hole of Horcum徒步。 其实这里是North York Moors National Park的一部分。在附近还可以乘坐老式的蒸汽小火车到Whitby小镇。 徒步路线就是要绕这个大坑一周。 我们抄了一条近道，坑底有快乐的牛群在吃草戏耍。 感觉自己距离白云好近。。。 Posted using Partiko Android","link":"/hole-of-horcum-khqslogm/"},{"title":"秀秀我家的Human Calculator，同时推荐一个优秀的数学学习网站","text":"最近儿子迷上了一个数学学习网站Matheletics并且热衷于和全球范围内的小朋友们PK速算。他的最高记录目前是Level 2每分钟59道题，Level 3每分钟52道题。对于这个速度，我这个数学专业的都望尘莫及，我试了几次，自己最多每分钟也就能答对36道题。因此，儿子也被系统授予了”Human Calculator”的称号。看看他做题的样子，还真有点像个机器人。 Mathletics是一家澳洲公司3P Learning的旗舰产品，也是迄今为止我所知道的全球范围内最好的数学学习平台。在这个平台中有着来自世界各地不同学校和家庭的用户组成的全球性社区。里面不仅有根据教学大纲设定的各项学习内容，而且还有很多趣味活动。 感觉这个网站设计的成功之处就是引入了游戏中的升级和竞争机制。学生可以和全世界范围内的其他学生进行心算比赛，同时在做各种练习和比赛的时候还会得到积分和奖励。在英国应该有超过半数的学校都在使用这个网站。如果学校没有加入的话，也可以注册个人帐号。同时还有苹果和安卓的APP可以使用。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/human-calculator/"},{"title":"Isle of Wight trip Day 1 - 怀特岛游记 - 第一天","text":"怀特岛是英格兰最美丽的小岛，也是很多英国人心目中的度假圣地。就连英国皇室也非常喜欢这座小岛，也经常来这座岛上度假。怀特岛上的景色非常独特，既有挺拔的山峰，也有干净漂亮的沙滩。同时岛上也是各种户外活动的天堂，可以在这里登山，冲浪，玩游艇等等。而每年六月份岛上还会举行盛大的音乐节，吸引了无数的游客。 The Isle of Wight is the most beautiful island in England just off the south coast of England and it is a very popular holiday destination. The British Royal family also likes this small island and visited it for a few times. The scenery on the Isle of Wight is very unique, including the mountains and beautiful beaches. It is also suitable for lots of outdoor activities such as climbing, surfing, yachting etc. The famous Isle of Wight Festival takes place here annually. 要去怀特岛，渡轮是首选的公共交通。我们从南安普顿坐渡轮上岛。我们需要排队把车开到渡轮上。渡轮上的设施很全，可以在上面就餐。同时也可以到甲板上欣赏海景，不过就是风有些大。 The Isle of Wight is easy to get to by ferries, and once you are here you won’t want to leave! There are up to 200 Isle of Wight ferry crossings a day operating from Portsmouth, Southampton and Lymington. We took the ferries from Southampton to East Cowes. 首先我们来到了怀特岛最著名的Sandown海滩。这里的海滩绵延几个英里，海滩中央有著名的码头。而且这里的沙子非常细，海滩也非常干净，海水清澈见底。同时因为在这片沙滩上曾经多次发现过恐龙的骨头碎片，怀特岛还有另外一个大名鼎鼎的绰号：”恐龙岛”。如果你去Sandown海滩的话，可以试着去找找看。。。Sandown Beach is one of the Isle of Wight’s finest and most popular beaches with miles of soft golden sands, together with Sandown’s pleasure pier sitting in the middle. Dinosaur bone fragments have been repeatedly found in the beach, therefore, Isle of Wight has another famous nickname: “Dinosaur Island”. 在Sandown海滩附近有很多英国著名的炸鱼薯条店，基本上都是几分钟的步行距离。我在去买炸鱼薯条的路上偶然发现了Royal China这家中餐，去买了份虾仁炒面，分量非常大而且味道还不错，记得是5英镑，感觉比吃鱼薯要好。! 下午我们又驱车去了位于Godshill的这个Model Village小人国。里面很好玩，有各种栩栩如生的房屋，建筑，交通工具，动物，当然，还有各种人物造型。里面也很适合照相。We went to the beautiful Model Village in Godshill. There are scale models of Shanklin and Godshill villages as they were in the 1920’s. Shanklin(尚克林)是怀特岛上的一个小镇，景色优美，建筑风格非常别致，尤其是那些房子的屋顶，让人仿佛置身于童话世界中。","link":"/isle-of-wight-trip-day-1/"},{"title":"龙舟赛","text":"一年一度的龙舟赛，从上午十点一直要赛到下午四点。 今年共有超过一百支队伍参赛，很多都是慈善机构组队参赛的。可以说我看到的绝大多数队伍都非常不专业，这点从选手们动作的一致性就可以看出来。但这并不影响参与者与观众的热情。 Posted using Partiko Android","link":"/jha8ku8y/"},{"title":"奇特的仙人掌花园","text":"Lanzarote岛上的仙人掌花园非常独特，花园周边的田地中种满了仙人掌，感觉这里把仙人掌当成了一种作物来种植。 仙人掌花园里面有各种各样的仙人掌，高矮胖瘦，各种形状的都有！进入公园后，就仿佛进入了童话世界一样。里面还有一个风车，可以穿过咖啡厅登上去远眺。 Posted using Partiko Android","link":"/j8ab8abx/"},{"title":"女儿第一次攀岩","text":"女儿的第一次攀岩体验记录一下。 本来以为她会害怕，没想到竟然玩上瘾，爬了一遍又一遍。 Posted using Partiko Android","link":"/jtngskwl/"},{"title":"汉堡","text":"前一段时间去德国汉堡，一直没有时间整理照片，今天想起来了。 Posted using Partiko Android","link":"/jusyt1k0/"},{"title":"说说英国的Kumon课外补习班","text":"儿子已经上Kumon课外补习班快两个月了，他的数学和英语也有了明显的提高。虽然这个班真的不便宜，而且把家长们搞的很累，但感觉还是很值得。 首先，是孩子养成了做作业的习惯。在英国这里，小学的学习任务很轻松，老师也不像国内那么严格。因此，家长如果不抓的话孩子就彻底放羊了。有了Kumon，每天孩子感觉都有事干，慢慢就养成了学习的习惯。 其次，课程设计的很合理，让孩子知道了该学什么，也把相应的知识点练的滚瓜烂熟，长时间坚持的话会明显领先同龄孩子，从而在今后的各种考试中占尽先机。 感觉在英国这里整体的升学压力不大，因此要想让孩子的功课学的好，还有一些特长的话，拼的就是家长了。","link":"/kumon/"},{"title":"万圣节南瓜灯展","text":"今天儿子学校举行一年一度的万圣节南瓜灯展。遗憾的是前几天因为去哥本哈根开会，回来后把这件事给忘记了。今天早上送儿子上学的时候才意识到，所以只能欣赏一下别人的南瓜灯了。每次学校都是要求孩子们早上上学的时候把自己刻的南瓜灯交到学校，然后下午放学后就会在学校的forest中布置好供大家参观了。 这是早上孩子们送到学校的南瓜灯 到傍晚时分南瓜灯已经布置好了 这个南瓜灯刻的比较糙，但牙不知道是什么做的，很有特色 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/k8a5v/"},{"title":"Lanzarote兰沙略得","text":"Lanzarote被联合国教科文组织宣布为“生物圈保留地”，这里最大的特点就是其火山岩浆地貌和许多火山岩洞奇特景观。同时让人震撼的就是这里的人与自然共处，依靠和开发火山，保护火山的故事。著名作家三毛也曾经在此岛上小住并为它起了一个很雅致的名字：兰沙略得。 Posted using Partiko Android","link":"/lanzarote-fjknamfr/"},{"title":"Lilleshall Abbey参观及Shropshire rocks活动初体验","text":"最近到朋友家做客，参观了他家附近的Lilleshall Abbey，顺便参与了最近非常火爆的Shropshire rocks活动。 Lilleshall Abbey本身并没有特多的特色，和英国很多的Abbey/教堂一样，到处都是残垣断壁。 最有趣的还是参加最近非常火的Shropshire rocks活动。这个活动的主旨就是鼓励人们多参加户外活动，参加活动的人会把自己绘制的各种石头藏到户外的某个地方，其他人如果找到了要在自己的facebook上发图，之后把石头拿到别的地方再藏好，这样，随着参与活动的人越来越多，石头也会越来越多，大家找到石头的几率也会越来越大。虽然只是找石头，可以不论孩子们还是大人们都十分投入，给大家秀一秀我们的战利品，哈哈，当然，还要把它们再藏回去，这次打算请这些石头搬家到约克了。。。","link":"/lilleshall-abbey-shropshire-rocks/"},{"title":"如何将Liker按钮集成到Hexo","text":"自从朋友将Hexo推荐给我以来，它就是我非常喜欢的静态网站生成工具了。下面把Liker按钮集成到Hexo中的步骤总结一下，让众多的Hexo网站可以通过点赞获得收益。以下以Hueman主题为例进行说明： 首先，从官方github获取对应的css并将其转换为styl格式，为了大家方便，我直接把转换好的贴到这里： .lc-page-header display none height 0px .likecoin-button position relative width 100% max-width 485px max-height 240px margin 0 auto &amp; &gt; div padding-top 49.48454% &amp; &gt; iframe position absolute top 0 left 0 width 100% height 100% 将上面文件保存至：themes/hueman/source/css/liker.styl 第二步，打开 themes/hueman/source/css/style.styl 文件，并添加如下行： @import &quot;liker&quot; 第三步，打开themes/hueman/layout/common/article.ejs，将如下代码添加到想要的位置（注意替换成你自己的liker ID）： &lt;div class=&quot;likecoin-embed likecoin-button&quot;&gt; &lt;div&gt;&lt;/div&gt; &lt;iframe scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;https://button.like.co/in/embed/aafeng17936/button?referrer=&lt;%- encodeURIComponent(post.permalink) %&gt;&quot;&gt;&lt;/iframe&gt; &lt;/div&gt; 接下来重新生成网站并发布到服务器就可以了。","link":"/liker-hexo/"},{"title":"每天进步一点：配置localstack本地测试AWS功能","text":"今天开始试用localstack，感觉非常好用。用localstack开发AWS应用非常方便，下面把整个过程记录一下。整个过程是基于这个英文教程的，但下面只是我自己的理解和笔记，并不是对英文教程的翻译。 LocalStack是什么？Localstack允许你在本地尝试一系列的AWS服务，而无需担心费用问题。 支持离线方式 你无需和他人共享AWS资源，这样想怎么搞就怎么搞，不用担心影响到别人 轻松管理本地资源 完全免费 尝试AWS服务而不需要AWS账号 设置首先确保安装了Docker, AWS CLI, 然后确保运行了aws configure来生成并保存相关密码。 接下来创建一个项目，比如“test1”, 并在该项目中创建一些文件： 1234mkdir test1cd test1touch index.js docker-compose.yml .envmkdir .localstack 复制一个图片，比如：test.jpg 到项目目录下。 进行npm配置和安装配套AWS 包： 12npm init npm install aws-sdk dotenv 编辑 docker-compose.yml 并添加如下内容: 123456789101112131415version: '3.2'services: localstack: image: localstack/localstack:latest container_name: localstack_demo ports: - '4563-4599:4563-4599' - '8055:8080' environment: - SERVICES=s3 - DEBUG=1 - DATA_DIR=/tmp/localstack/data volumes: - './.localstack:/tmp/localstack' - '/var/run/docker.sock:/var/run/docker.sock' 启动docker容器: 1docker-compose up 等个2分钟左右你就可以在浏览器中访问 localstack 界面了: http://localhost:8055/ 对于本地的AWS S3，可以通过如下端口访问: http://localhost:4572/ 现在你就可以在本地测试AWS的服务了! 通过localstack来测试AWS S3服务通过localstack来创建一个S3 bucket: 1aws --endpoint-url=http://localhost:4572 s3 mb s3://demo-bucket 注意：这里的 –endpoint-url 参数指定了 localstack 中对应的 s3 访问路径。 在 localstack 的日志中，你会看到如下信息： 1localstack_demo | 2019-12-06 15:10:14,909:API: 127.0.0.1 - - [06/Dec/2019 15:10:14] &quot;PUT /demo-bucket HTTP/1.1&quot; 200 在 localstack S3 的Web界面中，你可以看到: 123456&lt;Buckets&gt;&lt;Bucket&gt;&lt;Name&gt;demo-bucket&lt;/Name&gt;&lt;CreationDate&gt;2006-02-03T16:45:09.000Z&lt;/CreationDate&gt;&lt;/Bucket&gt;&lt;/Buckets&gt; 为S3 bucket添加访问控制列表ACL: 1aws --endpoint-url=http://localhost:4572 s3api put-bucket-acl --bucket demo-bucket --acl public-read 现在，你的S3 bucket就对外公开了。 现在你可以检查一下这个文件： .localstack/data/s3_api_calls.json {“a”: “s3”, “m”: “PUT”, “p”: “/demo-bucket”, “d”: “XXXXXXXX”, “h”: {“host”: “localhost”, “Accept-Encoding”: “identity”, “User-Agent”: “aws-cli/1.16.183 Python/3.6.9 Linux/4.15.0-72-generic botocore/1.12.253”, “X-Amz-Date”: “20191206T151014Z”, “X-Amz-Content-SHA256”: “xxxx”, “Authorization”: “AWS4-HMAC-SHA256 Credential=XXXXXX, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=xxxx”, “Content-Length”: “153”, “X-Forwarded-For”: “172.30.0.1, 0.0.0.0:4572”, “content-type”: “binary/octet-stream”}}{“a”: “s3”, “m”: “PUT”, “p”: “/demo-bucket?acl”, “d”: “”, “h”: {“host”: “localhost”, “Accept-Encoding”: “identity”, “x-amz-acl”: “public-read”, “User-Agent”: “aws-cli/1.16.183 Python/3.6.9 Linux/4.15.0-72-generic botocore/1.12.253”, “X-Amz-Date”: “20191206T151327Z”, “X-Amz-Content-SHA256”: “xxxx”, “Authorization”: “AWS4-HMAC-SHA256 Credential=xxxx”, “Content-Length”: “0”, “X-Forwarded-For”: “172.30.0.1, 0.0.0.0:4572”, “content-type”: “binary/octet-stream”}} 可以看到，你的所有操作都被记录了下来。 编辑 .env 文件，并添加如下内容： AWS_ACCESS_KEY_ID=’123’AWS_SECRET_KEY=’xyz’AWS_BUCKET_NAME=’demo-bucket’ 其实这里 AWS key &amp; secret 填什么都可以，只要不是空字符串就行。localstack 并不进行身份验证. 创建文件： aws.js 1234567891011121314151617181920212223242526272829303132333435const AWS = require('aws-sdk')require('dotenv').config()const credentials = { accessKeyId: process.env.AWS_ACCESS_KEY_ID, secretAccessKey: process.env.AWS_SECRET_KEY,}const useLocal = process.env.NODE_ENV !== 'production'const bucketName = process.env.AWS_BUCKET_NAMEconst s3client = new AWS.S3({ credentials, endpoint: useLocal ? 'http://localhost:4572' : undefined, s3ForcePathStyle: true,})const uploadFile = async (data, fileName) =&gt; new Promise((resolve) =&gt; { s3client.upload( { Bucket: bucketName, Key: fileName, Body: data, }, (err, response) =&gt; { if (err) throw err resolve(response) }, ) })module.exports = uploadFile 创建文件 test-upload.js: 12345678910111213141516171819const fs = require('fs')const path = require('path')const uploadFile = require('./aws')const testUpload = () =&gt; { const filePath = path.resolve(__dirname, 'test.jpg') const fileStream = fs.createReadStream(filePath) const now = new Date() const fileName = `test-image-${now.toISOString()}.jpg` uploadFile(fileStream, fileName).then((response) =&gt; { console.log(&quot;:)&quot;) console.log(response) }).catch((err) =&gt; { console.log(&quot;:|&quot;) console.log(err) })}testUpload() 运行如下命令进行测试: 1node test-upload.js 从docker日志中你可以看到对应的图片路径，例如： 1http://localhost:4572/demo-bucket/test-image-2019-12-06T15%3A28%3A57.037Z.jpg 如果再次检查文件： .localstack/data/s3_api_calls.json, 你会看到图片被转换为二进制数据并被存储。","link":"/localstack-aws/"},{"title":"带孩子做科学实验系列之 - 会跳舞的葡萄干","text":"下面介绍的这个试验是会跳舞的葡萄干，试验步骤简单但却很有趣。 试验准备这个试验需要以下这些材料： 葡萄干Raisins 柠檬水 玻璃杯 试验步骤首先往玻璃杯中倒入柠檬水，注意一定要把瓶子斜着倒，这样能够最大程度的保持住泡沫，从而保证好的试验效果。其实就和倒啤酒一样。 接下来加一把葡萄干到杯中。 你就会看到葡萄干在”跳舞“了! 注意观察一下看看葡萄干是越跳越欢还是逐渐慢了下来？如果再多加点葡萄干会怎样？ 其实这个实验的原理很简单：因为在柠檬水这样的饮料中有很多二氧化碳，在葡萄干刚刚放入杯中的时候，会沉到杯底。杯底的二氧化碳气泡会携带这葡萄干浮到杯子最上面。到了杯子上面的时候二氧化碳气泡会破裂，没有了这些气泡，葡萄干就会再次沉到杯子底部。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。 往期科学实验系列物体的密度用洗涤灵驱动的小船水的张力 国外经典儿童图书推荐系列Can’t You Sleep, Little Bear?The Very Hungry Caterpillar饥饿的毛毛虫We’re Going on a Bear HuntZa-Za’s Baby BrotherSome dogs doOwl BabiesThank you, little mouseHanda’s surprise","link":"/lr3ts/"},{"title":"值得尊敬的科学家居里夫人Marie Curie介绍","text":"今天辅导孩子写作业。作业的内容是写一份关于著名科学家居里夫人Marie Curie的报告。相信很多人都知道这位著名的化学家，但难得今天有机会系统学习了这位伟人的生平。 图源：pixabay 简而言之，居里夫人的最大贡献是发现了两种新元素钋（Po）和镭（Ra），这对日后医学上对癌症的治疗具有很大的推动作用。 居里夫人出生于波兰华沙，家中共有5个兄弟姐妹。在姐姐的帮助下来到巴黎留学。也在这里她认识了自己后来的丈夫皮埃尔·居里。两人因相同的兴趣越走越近，终于在一年后结婚。1898年，居里夫妇发现了钋和镭这两种新的元素。并发现镭能够有效杀死癌细胞。 1903年，居里夫妇被授予诺贝尔奖。1911年，居里夫人第二次获得诺贝尔奖。 在当时，人们并没有意识到放射性元素对身体的危害。居里夫人常将含有放射性元素的试管放在衣服的口袋里，或者抽屉中。后来因此死于再生不良性贫血。 作为受世人敬仰的科学家，居里夫人被葬入法国的先贤祠，她也是第一位凭借自身成就进入先贤祠的女人。","link":"/marie-curie/"},{"title":"国外经典图书推荐之： Matilda","text":"今天给大家推荐同样还是Roald Dahl的经典图书之一：Matilda。这本畅销书同样被改编成了音乐剧，在伦敦西区也是上座率非常高的。 Matilda这本书讲述的一个聪明绝顶的小姑娘Matilda的故事。在书中Matilda的父母非常庸俗势利，她的父亲是一个商人，她的母亲则是一个赌徒。Matilda在很小的时候就把自己家里的书读完了，之后又自己去图书馆借书读。她在4岁的时候就读了很多世界经典名著，比如：远大前程，雾都孤儿，简爱，傲慢与偏见，老人与海等等，汗。。。我现在还没读全。。。在她上学后又遇到了非常恶毒的校长Agatha Trunchbull。这位校长有明显的暴力倾向，在校的师生都生活在她的阴影之下。书中讲述的就是Matilda如何和校长斗争的故事。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/matilda/"},{"title":"兰沙略德岛岩浆隧道","text":"在Lanzarote岛上有很多的火山隧道，大多数尚未进行开发，是探险家的乐园。据说有一条隧道直接通往亚特兰蒂斯的神秘世界！经过曼里克的设计，有两条隧道可供游客参观。其中的Jameos del agua是由火山岩浆融化而形成的一条岩浆隧道，全长7公里。外面还有清澈的水滴湖，湖中有一种白色的小螃蟹，号称是Lanzarote的吉祥物。 从隧道出来后别有洞天 Posted using Partiko Android","link":"/mge1lfdm/"},{"title":"参加Mrs Sunderland Festival","text":"今天带着孩子们参加位于Huddersfield的Mrs Sunderland Festival，主要目的是参加其中好几个级别的钢琴比赛。这是钢琴老师推荐的，目前已经是第二次来参加了。 举办地址位于Huddersfield的市政厅，空旷的大厅中放置一台很大的三角钢琴，感觉场地非常的高大上。 Mrs Sunderland Festival在全英范围内都是非常有名的音乐节。每年的音乐节都持续将近9天的时间。在和组委会人员闲聊中了解，这个音乐节曾经非常热门，吸引着全英各地的优秀音乐爱好者和专业评委的参与，最火爆的时候每天就会有数千人来参加。但非常遗憾的是，近些年来，对古典音乐感兴趣的人似乎越来越少了，但好在这个音乐节在众多爱好者和志愿者的支持下一直走了下来。 音乐节的名称源于英国历史上的一位著名的歌唱家：Susannah Sunderland。她是Huddersfield合唱团的创始人之一。由于其出色的天赋，受邀为维多利亚女王演唱。由于她筹资资助第一届Huddersfield声乐独奏比赛，这个活动逐渐就以她的名字来命名。 在整个音乐节期间，除了钢琴，打击乐器，管弦乐器，歌唱比赛等各种比赛外，还有专家们组织的各种工作室，将音乐知识一代一代的传下去。 在今天的比赛中，孩子们不仅得到了锻炼，而且还非常幸运的抱回了两座奖杯！","link":"/mrs-sunderland-festival/"},{"title":"My translation work on Flowable project (100% completion under webapp folder)","text":"I have started working on Flowable project to translate texts from English to Simplified Chinese. It is a large project, containing around 4,000 strings (appr.). So far I have completed 537 strings under webapp folder in past two days. Here is my activities:https://crowdin.com/project/flowable/zh-CN/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-flowable-project-100-completion-under-webapp-folder/"},{"title":"My translation work on Flowable project part 2 - completed 60%","text":"I have been working on Flowable project to translate texts from English to Simplified Chinese. It is a medium to large project. Since my last submission a couple of weeks ago, I have completed strings under flowable-ui-idm and flowable-ui-task folder and completed 60% of the translation. Here is my activities:https://crowdin.com/project/flowable/zh-CN/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-flowable-project-part-2-completed-60/"},{"title":"My translation work on react project - 544 words","text":"I have been working on react project to translate texts from English to Simplified Chinese. I have translated 544 words so far. Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-544-words/"},{"title":"My translation work on Flowable project part 3 - 2576 words, completed 100%","text":"I have been working on Flowable project to translate texts from English to Simplified Chinese. Since my last submission a few days ago, I have translated 2576 words and completed the whole translation. Here is my activities:https://crowdin.com/project/flowable/zh-CN/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-flowable-project-part-3-2576-words-completed-100/"},{"title":"My translation work on react project part 2 - 664 words","text":"I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 664 words (1208 in total). Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-2-664-words/"},{"title":"My translation work on react project part 3 - 573 words","text":"I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 573 words (1781 in total). Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-3-573-words/"},{"title":"My translation work on react project part 4 - 586 words","text":"I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 586 words. Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-4-586-words/"},{"title":"My translation work on react project part 5 - 652 words","text":"React is a JavaScript library for building user interfaces. I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 652 words. Some of my translations’ screen dump: Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-5-652-words/"},{"title":"My translation work on react project part 6 - 624 words","text":"React is a JavaScript library for building user interfaces. I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 624 words. Some of my translations’ screen dump: Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-6-624-words/"},{"title":"My translation work on react project part 8 - 617 words","text":"React is a JavaScript library for building user interfaces. I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 617 words. Some of my translations’ screen dump: Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-8-617-words/"},{"title":"My translation work on react project part 7 - 592 words","text":"React is a JavaScript library for building user interfaces. I have been working on react project to translate texts from English to Simplified Chinese. Since my last submission, I have translated 592 words. Some of my translations’ screen dump: Here is my activities:https://crowdin.com/profile/aafeng/activity To prove it is the work done by me, here is the profile page after login: Also, this screen dump shows that I have suggested 41 translations： and this page shows that I have translated 592 words： Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-react-project-part-7-592-words/"},{"title":"My translation work on Red-DiscordBot project - 946 words, completed 100%","text":"I have been working on Red-DiscordBot project to translate texts from English to Simplified Chinese. I have translated 946 words and now all translation work is complete. Here is my activities:https://crowdin.com/project/red-discordbot/activity_stream To prove it is the work done by me, here is the profile page after login: Posted on Utopian.io - Rewarding Open Source Contributors","link":"/my-translation-work-on-red-discordbot-project-946-words-completed-100/"},{"title":"Node.js 学习笔记","text":"最近开始参与Node.js的翻译，正好把这个框架系统的学习一下，补一补原来在使用Node.js时的知识漏洞。把最近的心得体会整理一下。这个不是系统的教程，只是我自己的笔记而已。 关于Node.js环境的搭建不推荐使用apt-get直接安装。强烈推荐使用nvm，这就像pip之于python, rvm之于ruby一样，方便管理不同的Node.js版本。 关于Node.js中的回调函数Node.js 使用了大量的回调函数，Node.js 所有 API 都支持回调函数。而Node.js卖点之一异步编程依托的主要技术之一就是回调函数。由于大量回调函数的使用，因此在使用Node.js时思维方式一定要是多线程的，虽然Node.js是完全单一进程/线程的。 Node.js事件循环依托V8 引擎提供的异步回调接口，Node.js仅仅靠单一进程/线程就实现了可以处理大量并发请求的架构。在其实现中大量的使用了观察者模式。","link":"/node-js-1/"},{"title":"小学运动会","text":"孩子学校一年一度的运动会。英国这边学校运动会的传统项目和国内有些不同。有短跑，400米跑，手拿勺子托着球跑，还有障碍赛，只不过障碍赛中加入了不同的选项，比如人站在大购物袋中往前跳。 有的学校还让家长参赛，更是热闹。。。 Posted using Partiko Android","link":"/omculoc0/"},{"title":"多年没有感受到过年味道的我在圣诞前夕体验到了浓浓的节日氛围 | 月旦评","text":"记得小的时候每逢过年大家都非常兴奋。亲朋好友间要互相串门拜年，孩子们一直都在盯着家里的年货。一把鞭炮就能让孩子们兴奋的玩耍半天。可以说是一年中大家最期盼的日子。但是也记不清从何时开始，在国内过年的时候大家都在说已经没有年味了。人们很少再互相串门，孩子们也没有那么期盼过年了。 但是很有趣的是，今年圣诞来临之际，却仍我感受到了浓浓的节日气氛，甚至是有些年味了，虽然是外国人的年。 政府工作人员不辞辛苦驾着拖拉机拉着雪橇，扮做圣诞老人挨门挨户给小朋友们送去圣诞祝福： 各大超市也都装扮的非常有节日气氛 单位的圣诞树下也是摆满了各种礼物，单位也是提供各种巧克力和小吃慰劳大家，同时还有各种圣诞聚餐，party等等。 英国各地的圣诞集市也是热闹非凡，有着各种小商品和小吃 孩子的学校举行的圣诞联欢会更是让我想起了小时候过年前班级里搞的新年联欢会。同学们围坐在教室中，吃着各种零食，观看同学们准备的节目。节目表演结束后，还会有各种有奖游戏，比如：猜谜，套环，钓鱼等等。奖品虽小，无非就是铅笔，橡皮或者糖果什么的，但大家都玩的兴致非常高。在英国这里的圣诞联欢会孩子们似乎就和我小时候一样的兴奋。 这是一种抽奖游戏，20P购买一个随机号码，立刻就能查看是否中奖 这个是套环游戏，和国内的感觉一样 这个游戏则是在一桶碎纸条中淘宝，由于眼睛看不到，只能靠自己的手去探索 这个游戏很有意思，把很多绳子的一头捆上各种奖品，然后把绳子混在一起，购票后可以从绳子的另一端选择一根绳子，轻轻一拽就知道自己能拿到什么奖品了 这里预先祝大家圣诞快乐！","link":"/or/"},{"title":"国外经典儿童读物推荐之：Owl Babies  － 陪伴是给孩子们最好的礼物","text":"今天给大家推荐这本非常温馨的儿童读物：Owl Babies猫头鹰宝宝。里面讲述的是叫做Sarah，Percy，和Bill的三只小猫头鹰的故事。它们和妈妈一起住在森林中的一个树洞里，但有一天发现妈妈不在了。三只小猫头鹰互相依偎，互相安慰。它们的对话也充分体现除了孩子们在等待妈妈时候的焦虑心情。尤其是最小的Bill，在两个姐姐猜测完妈妈去哪里，干什么之后，还不太会表达，每次都是在最后怯怯却又感情至深的说一句：I want my mummy！在漫长的等待后，妈妈终于回来了！ Image source: Amazon 我感觉这本书不仅教育孩子在父母不在身边的时候要勇于面对，同时也告诉父母一个道理：对于孩子们来说，父母的陪伴是最好也是最珍贵的礼物。真的是一部超级温馨的睡前读物！ https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/owl-babies/"},{"title":"领取PAL空投","text":"今天登陆Steem Engine后发现多了这么个图标。点进去后才发现是PAL代币的空投。 既然有大佬给发糖果，自然要领一下。需要用Active Key登录才可以领取，这里再次推荐使用Steem Key Chain，非常好用。总共领取了648 PAL，原来领取数量和你的SP有关。 如果你还没有领的话，快去吧，似乎到本周末结束。","link":"/pal/"},{"title":"英国圣诞传统之一：圣诞童话剧Pantomime","text":"英国圣诞节的一个传统就是全家要去观看一场圣诞童话剧。我们也很喜欢当地的这个传统，于是上个周末全家去看了经典圣诞童话剧之一：Sleeping Beauty睡美人。由于全场不让拍照，因此只能在中场休息的时候照了一下这个屏幕： 虽然名字和《睡美人》的经典故事完全相同，但剧情却做了大幅动的改编，添加了很多滑稽搞笑成分，同时还把英国脱欧等时事添加了进去。最让观众喜爱的就是和演员们的互动环节。其实，这也是圣诞童话剧观众的必备技能之一。比如：如果演员在寻找某个人，但假装找不到的话，观众们一定要进行提醒，”He’s behind you!”，如果台上演员的台词是 “Yes it is!” ，台下观众一定要唱反调，”No it isn’t!”等等，看到了巫师上场，一定要喝倒彩，”Booooooooooo”。我想，这也是很多观众喜爱圣诞童话剧的原因之一吧，整个表演是属于演员和观众的。坐在我们旁边的老爷爷老奶奶每年都订同一个剧的同样位置的座位，已经连续好多年了。看来是真爱啊。。。","link":"/pantomime/"},{"title":"原生态的Papagayo海滩","text":"既然到了Lanzarote岛上，海滩肯定是要去的，我们去的是尚未开发的，原生态海滩 - Papagayo海滩。这里周边都是悬崖峭壁，如果感兴趣可以考虑爬上去，因为在上面可以俯瞰海滩美景。 这里还有两家海鲜餐厅，如果饿了可以在餐厅就餐，价格比岛上其他餐厅要贵些，但毕竟有胜于无。","link":"/papagayo/"},{"title":"Parque Nacional de Timanfaya蒂曼法亚火山公园","text":"Parque Nacional de Timanfaya蒂曼法亚火山公园是Lanzarote这里的地标。公园覆盖将近200平方公里，超过整个岛的四分之一。这座火山公园充分体现了大自然的鬼斧神工，在1730年时由100多个火山口连续喷发6年之久而形成。 这里有一个圆形的火山灰石沙地，其中的火山灰石很烫手。在这里可以看看小火山口，如果将干草扔进去，很快就会被点燃。同时还设有很多粗粗的铁管，如果将一桶冷水倒入其中，则很快就会变成开水并向空中喷射出10余米高。 这里最有特色的食物就是火山烤鸡/烤肉。完全利用火山的能量将食物烤熟。 Posted using Partiko Android","link":"/parque-nacional-de-timanfaya-voul9grz/"},{"title":"单位这里每年一次的plant sale","text":"种类还真不少，近百种 Posted using Partiko Android","link":"/plant-sale-rcxn1vdh/"},{"title":"带孩子参加小朋友生日Party","text":"今天带孩子去参加小朋友生日party 里面好热闹 还可以Make a bear 有最受孩子欢迎的大滑梯 也有小女孩喜欢过家家的地方 还能看小动物 回来路边看到的，猜猜为什么会有这个？","link":"/party-2017723t19760z/"},{"title":"每天进步一点点：使用Python开发AWS Lambda","text":"最近开始使用AWS系列产品，感觉非常有趣。把学习过程记录一下。今天说的是如何使用Python开发一个Serverless的Lambda。以下的步骤在Ubuntu 18中测试通过。 安装serverless框架npm install -g serverless 创建项目mkdir -p hello-world cd hello-world serverless create --template aws-python3 --name hello-world 创建AWS用户创建一个用户，例如：serverless-user，并将得到的access key及secret access key保存到 .aws/credentials [serverless] aws_access_key_id = XXXXXXXXXXXXXXXXXXXXXXX aws_secret_access_key = XXXXXXXXXXXXXXXXXXXXXXX 部署到AWS运行如下命令进行部署： export AWS_PROFILE=&quot;serverless&quot; serverless deploy --region eu-west-1 到目前为止，你还无法看到APIGateway对应的URL，因为它尚未被定义。 编辑 serverless.yml: events: - http: path: hello method: get 再运行： serverless deploy -v 你就会看到类似于：https://XXXXXXXXXX.execute-api.us-east-1.amazonaws.com/dev ，通过这个URL就可以调用Lambda了。 测试你可以通过上面的URL进行测试，也可以运行如下命令进行测试： sls invoke -f hello 清理在完成了这个程序之后，不要忘记清理资源，毕竟部署到AWS中的资源都是要花钱的。。。 serverless remove","link":"/python-aws-lambda/"},{"title":"火山葡萄园","text":"在Lanzatote岛上火山公园附近就有一座很大的火山葡萄园。由于这里缺水，因此用鱼鳞坑来蓄水。同时还有防风墙，看起来就像是到了月球。由于这里盛产葡萄，因此当地的葡萄酒也不可不尝。如果你是8,9月份到岛上来玩，还有机会和主人共享采摘葡萄和酿造葡萄酒的过程。 Posted using Partiko Android","link":"/qfdccyzd/"},{"title":"为生命而奔跑 - 约克郡10英里马拉松","text":"周日的时候去围观了约克郡的10英里（将近16公里）马拉松。The Plusnet Yorkshire Marathon Festival这个活动每年都在约克举行。今年这次有将近2000人参加。比赛的起点和终点都设在约克大学，因此周日这天大学附近一片粉红色。这个活动的主要目的就是为约克郡的癌症患者募捐。根据统计，在约克郡每周都会有565个人被诊断为癌症。约克郡的癌症患者比率明显高于英国的普遍水平。这个慈善组织的目的就是在未来10年内投入1亿英镑资金，争取解决约克郡的癌症率过高的问题。希望在2025年的时候至少多帮助2000或者更多癌症患者康复。 我们到了不久马拉松就开始了，刚开始的时候大家都跑不起来，这是熙熙攘攘的人群： 大屏幕显示走过起点的人们， 同时可以看到还陆陆续续的有人来到。 这个活动的支持者有很多，每年都组织的非常声势浩大。各种准备非常充分，救护车都准备好了，而且广播中一直在说，不要跑太快了，按照自己平时训练的速度就可以 ： 这里是马拉松的终点。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/qs3zk-10/"},{"title":"RaiDrive - Helper to make cloud storage Windows drive","text":"RaiDriveHelper to make cloud storage Windows drive Screenshots Hunter’s commentRaiDrive is a tool to make cloud storage your Windows Drive. Currently, it supports Google Drive, Google Team Drive, Dropbox, Google Photos, OneDrive, WebDAV, SFTP, and FTP. This software plans to support more cloud storage providers in the future. With this software, you no longer need to use your browser to find files. You can open, edit, and save files in your Windows drive as you are using a local file. In the meantime, you can copy, paste, and move files in these Windows drives, all underlying sync jobs are transparent to you. In terms of security, it is up to your cloud providers. If you use Dropbox, and OneDrive, all files are encrypted in the client side and transferred to cloud storage by RaiDrive. And the great thing about RaiDrive is that it is absolutely free! You are able to add any number of Windows Drives as your Windows system allows! Linkhttps://www.RaiDrive.com ContributorsHunter: @aafengMakers and Contributors: @aafeng (85% beneficiary of this article) This is posted on Steemhunt - A place where you can dig products and earn STEEM.View on Steemhunt.com","link":"/raidrive-helper-to-make-cloud-storage-windows-drive/"},{"title":"Robin Hood&#39;s Bay捉螃蟹记","text":"开学前最后一个周末，刚好周六赶上一个阳光明媚而又无风的好天气，一家人前往Robin Hood’s Bay。一路上漫山遍野的石棉花，变化多端的云朵，错落有致的房屋农田，碧海蓝天绿树鲜花 – 美不胜收！ 临时买了桶和网去捉螃蟹啰！不过装备太过简陋，再加上没准备诱饵，结果一无所获。看着旁边一家人一会儿功夫捞上来两三只螃蟹，我们只有羡慕的份儿！不过孩儿他爸倒是学会了怎样捉螃蟹，他说下次一定准备充分再来！ 这是别人捉到的螃蟹 儿子同学一家带我们去了当地一家有名的炸鱼薯条店，炸鱼和鱼饼味道都很赞，更重要的是无论是在室内或室外就餐，都能欣赏到无敌的风景! 探索村庄 – 地势高低起伏使得房屋错落有致， 颇有特色的户门， 狭长的街道，石阶石子儿路，精致的小礼品店，在绿树掩映鲜花点缀下，真的好别致！ 在儿子同学爸爸的带动下，小朋友们玩儿摔炮上了瘾。同学爸爸小时候就住在离此地一公里以内的一个村庄里，所以对这一带很熟悉。临走前，小朋友们在停车场附近的游乐场玩儿得不愿离开。一边看着孩子们开心的笑脸，一边可以欣赏无敌海景，真的再惬意不过了！ 谢谢您阅读我的文章！","link":"/robin-hood-s-bay/"},{"title":"孩子们最爱的Santa Grotto","text":"圣诞节就要到了，和朋友家一起带孩子去参加一个Santa Grotto，也就是去见圣诞老人。 首先是圣诞姐姐在入口处欢迎各位小朋友。 可以写信给Santa 稍微等上一会后就开始坐上拖拉机拉的雪橇出发啦 圣诞老人在一个小木屋中等待大家： 圣诞老人送给每个小朋友一把钥匙，可以到礼品店里换一个自己喜欢的玩具 这里还能看到各种小动物 非常愉快的一个晚上！","link":"/santa-grotto/"},{"title":"Scarborough的愉快周末","text":"在英国难得有一个艳阳高照的周末。上个周末天气转好，英国各大海滩人满为患，我们也约上朋友去了著名的Scarborough海滩。 这个小镇上非常热闹，街边有很多特色的海鲜店，也有很多游乐设施。但前几次去的South Bay，感觉沙滩上碎石有些多，不太适合孩子玩，于是这次改去North Bay。 在海滩上人们各种放松，也有孩子们做着各种游戏，有堆Sand Castle的，玩水的，放风筝的。当然，到了海边不能忘记尝试一下英国的国菜：Fish &amp; Chips。","link":"/scarborough/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation Overview The whole project consists of 1,048,272 words. @victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This is my first contribution to Node.js project and I have translated 1265 words in this submission. Languages I translate Node.js from English to Simplified Chinese. Word Count I have been working on the api folder and have translated 1265 words in this submission. Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-1-1265-words/"},{"title":"塞尔维亚的传统美食：Sarma","text":"圣诞/新年假期期间，应一家塞尔维亚好友的邀请去做客，有幸尝到了女主人做的塞尔维亚传统美食: Sarma。这道菜将肉馅，蔬菜碎，米饭及香料包裹在圆白菜叶子当中，在烤箱中烤熟。女主人还别出新意的用大的尖椒包裹同样的馅料制作了略有不同的Sarma。不过我还是更喜欢传统用圆白菜叶做的Sarma。 对于习惯了中国菜的我，味觉上还是比较挑剔的。但尝过第一口后就停不下来了，菜叶的清香配上鲜美的肉馅及香料，让人欲罢不能，而吸饱了汤汁的米饭给人的味觉很大的冲击，让人大呼过瘾，我竟然一气吃掉了4个！ 在和主人的闲聊中了解到，Sarma作为塞维亚的传统美食，经常在重要的节日，诸如圣诞节，新年，生日时被搬上餐桌。感觉这就有点向中国北方传统中的饺子一样，已经成为塞尔维亚文化中的一部分了。","link":"/sarma/"},{"title":"wrong post, don&#39;t vote, pls ignore","text":"pls ignore","link":"/simplified-chinese-translation-of-node-js-10-1122-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have been working on “util.md”. The util module is designed to support the needs of Node.js’ own internal APIs, but it is useful for application and module developers as well.. Regarding the translation, I have been concentrating on how to make my translation fluent and easy to understand by Chinese readers. Sometimes I have to add some words to make the sentence clear to its readers. A couple of examples are worth mentioning: 1) The source string is:Takes an async function (or a function that returns a Promise) and returns afunction following the error-first callback style, i.e. takinga (err, value) =&gt; … callback as the last argument. In here, “Takes an async function” does not say anything about “taking an async function for what”, therefore, I have added “作为参数“ to my translation. The final translation becomes: 采用 异步 函数 （或返回 Promise 的函数）作为参数，并返回遵循错误优先回调样式的函数，即采用 (err, value) =&gt; … 形式的回调函数作为最后一个参数。 2) Similarly, in this string:If the callback throws, the process will emit an [‘uncaughtException’][]event, and if not handled will exit. It does not say if what not handled, so word by word translation would confuse readers. I have added “该事件” in my translation, e.g. 如果回调函数抛出异常，进程将发出一个 [‘uncaughtException’][] 事件，如果该事件没有被处理，则将退出。 Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my eleventh contribution to Node.js project and I have translated 1107 words in this submission. Before: I have been working on “util.md” and there was no translation in this file. After: The number of words being translated becomes 1107. Total: 1107 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-11-1107-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I am still working on “util.md”. The util module is designed to support the needs of Node.js’ own internal APIs, but it is useful for application and module developers as well. Regarding the translation, some source strings are difficult to translate. I have to understand the underlying programming concepts before I can get the accurate translation. I have to check other paragraphs to get the context and run demo code to understand it better. For instance, for this source string: If original is a function but its last argument is not an error-first callback, it will still be passed an error-first callback as its last argument. It is easy to translate it word by word, but I was a bit confused by its meaning - if the last argument is not an error-first callback, then how it will still be passed an error-first callback as its last argument??? After reading the previous paragraphs, the meaning is confirmed by this string: “promisify() assumes that original is a function taking a callback as itsfinal argument in all cases.” Therefore, my final translation is: 如果 original 是一个函数，但其最后参数不是 error-first 风格回调函数，它仍会收到一个 error-first 风格的回调函数作为其最后一个参数。 Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my twelfth contribution to Node.js project and I have translated 1090 words in this submission. Before: 1107 words was translated. After: The number of words being translated becomes 2197. Total: 2197-1107 =1090 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-12-1090-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have finished translation of “util.md” and “tty.md”. I have also started working on “url.md”. The tty module provides classes for operating tty input/output streams and the url module provides utilities for URL resolution and parsing. Regarding the translation, most source strings are easy to translate as I have the background knowledge. Therefore, my focus was on how to make my translation accurate and easy to read for Chinese readers. I would say special thank you to @sunray for his suggestions to make my translations better and easier to understand. Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my 13th contribution to Node.js project and I have translated 1068 words in this submission. util.md: 2465-2197=268 words tty.md: 458 words url.md: 346 words Total: 268+458+346 = 1072 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-13-1072-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have been still working on url module. During my translation, there is an issues worth mentioning: In this source string: Setting the value to the default portof the URL objects given protocol will result in the port value becomingthe empty string (‘’). I was very confusing with the source string, especially with “given protocol”. Although it is very rare to see typos in Node.js source strings, but in this case, I believe that “given protocol” should be removed. I have left a comment to project owner. Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my 14th contribution to Node.js project and I have translated 1068 words in this submission. Before: 346 words in “url.md” After: 1414 words Total: 1414-346=1068 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-14-1068-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have finished the url module and started working on zlib module. My focus was still on choosing the right words and making sure the translation is easy to read and understand by Chinese readers. Here are a couple of examples: The source string is: Note that all zlib APIs except those that are explicitly synchronous use libuv’sthreadpool, which can have surprising and negative performance implications forsome applications, see the [UV_THREADPOOL_SIZE][] documentation for moreInformation. My initial translation was: 注意：所有 zlib API，除了那些使用 libuv 线程池明确进行同步的之外，在某些应用程序中会对性能产生令人惊奇的，负面影响。请参阅 [UV_THREADPOOL_SIZE][] 以获得更多信息。 When I check my translation, I realize that ‘surprising’ means ‘令人惊奇的’ literally but ‘意想不到的’ is the most appropriate translation here. Also, to improve the legibility, I have moved ‘除了那些使用 libuv 线程池明确进行同步操作的之外，’ to the beginning of the whole translation. My final translation is: 注意：除了那些使用 libuv 线程池明确进行同步操作的之外，所有 zlib API 在一些应用程序中会对性能产生意想不到的负面影响。请参阅 [UV_THREADPOOL_SIZE][] 文档以获得更多信息。 Another example is: The zlib module can be used to implement support for the gzip and deflatecontent-encoding mechanisms defined by HTTP. To improve the legibility, I have reorganized my translation from: zlib 可被用于实现相应的gzip 和 deflate， 以支持在 HTTP 协议中定义的内容编码机制。 to: zlib 模块可被用于实现在 HTTP 协议中定义的，通过 gzip 和 deflate 支持的内容编码机制。 Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my 16th contribution to Node.js project and I have translated 1078 words in url module in this submission. Before: 2488 words in “url.md” 0 word in “zlib.md” After: 3255 words in “url.md” 311 words in “zlib.md” Total: (3255-2488)+311 = 1078 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-16-1078-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation Overview The whole project consists of 1,048,272 words. @victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This is my second contribution to Node.js project and I have translated 1139 words in this submission. Languages I translate Node.js from English to Simplified Chinese. Word Count Before: I have been working on the api folder and have translated 1265 words before this submission. After: The number of words being translated becomes 2404. Total: 2404-1265 = 1139 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-2-1139-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission I was still working on “url.md”. The source string is about the different methods of urlSearchParams, and url object. As the source string is easy to understand, the translation is quite straightforward. Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my 15th contribution to Node.js project and I have translated 1074 words in this submission. Before: 1414 words in “url.md” After: 2488 words Total: 2488-1414=1074 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-15-1074-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation Overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This is my third contribution to Node.js project and I have translated 1123 words in this submission. Languages I translate Node.js from English to Simplified Chinese. Word Count Before: I have been working on the api folder and have translated 2404 words before this submission. After: The number of words being translated becomes 3527. Total: 3527-2404 = 1123 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-3-1123-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation Overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This is my fourth contribution to Node.js project and I have translated 1072 words in this submission. Languages I translate Node.js from English to Simplified Chinese. Word Count Before: I have been working on the api folder and have translated 3527 words before this submission. After: The number of words being translated becomes 4599. Total: 4599-3527 = 1072 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-4-1072-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation Overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This is my fifth contribution to Node.js project and I have translated 1065 words in this submission. Languages I translate Node.js from English to Simplified Chinese. Word Count Before: I have been working on the api folder and have translated 4607 words before this submission. After: The number of words being translated becomes 5672. Total: 5672-4607 = 1065 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-5-1065-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this contribution, I have been translating Buffer.md. To me, the most interesting part is the discussion about the different ways to allocate a buffer, the potential performance/safety problem associated with it, and the proposed solutions for the problem. There are different ways to allocate a buffer in Node.js, for example, by using “Buffer.allocUnsafe()” means the new allocated buffer won’t be initialized therefore it may contain some sensitive data from old buffer(s). The problem can be fixed by calling “buf.fill(0);” afterwards or by passing a “–zero-fill-buffers” command line argument to Node.js. The alternative solution is to use “Buffer.alloc()” to allocate a buffer and initialize the new buffer immediately, but the performance is affected. In terms of the translation in this submission, because I fully understand the context, getting the accurate translation is not difficult to me. However, since there are lots of long sentences in the source string, my focus was to make my translation fluent and easy to understand by Chinese readers. Therefore, I spend some extra time to double check my translation before submitting. Here are some examples of how my translation has been refined during my “pre-proofreading”: Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my sixth contribution to Node.js project and I have translated 1267 words in this submission. Before: I have been working on the api folder and have translated 6209 words before this submission. After: The number of words being translated becomes 7476. Total: 7476-6209 = 1267 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-6-1267-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, the source string are mainly about Buffer class and the different forms of constructor of it, which can be used to create Buffer instances. For example, Buffer instances can be created from “new Buffer(array)”, “new Buffer(arrayBuffer[, byteOffset [, length]])”, “new Buffer(buffer)”, and “new Buffer(size)” etc. Regarding the translation work, my main focus was still to choose / refine the best words and pay more attention to punctuations to make my translation fluent and easy to understand. Here are a couple of examples I would like to mention: 1) First, the translation of this string: “Copies the passed buffer data onto a new Buffer instance.” Initially, I have translated it to: “将传入 buffer 的数据复制到新的 Buffer 实例。”. When I review my translation, I feel the first version is a bit misleading as the source string shows that it is the buffer itself being passed to the new Buffer instance, not the data passed to buffer’s constructor to be passed to the new Buffer instance. Therefore, it has been refined to: “将传入的 buffer 数据复制到新的 Buffer 实例。” It is very interesting to run the example to help me understand how it works: const buf1 = new Buffer(&apos;buffer&apos;); const buf2 = new Buffer(buf1); buf1[0] = 0x61; console.log(buf1.toString()); console.log(buf2.toString()); The output above confirms what I think - buf2 is a ‘deep’ copy of buf1, e.g. buf2 is not just a reference to buf1. 2) How to punctuate this sentence to make it easy to understand? The source string is Note that the Buffer module pre-allocates an internal Buffer instance ofsize [Buffer.poolSize] that is used as a pool for the fast allocation of new Buffer instances created using [Buffer.allocUnsafe()] and the deprecated new Buffer(size) constructor only when size is less than or equal to Buffer.poolSize &gt;&gt; 1 (floor of [Buffer.poolSize] divided by two).” The source string is very long without any punctuations. I have to add three commas to make my translation fluent, especially this part: “…实例作为快速分配池， 该快速分配池将被用于…”. From this example, we can see word by word translation is not always appropriate - some additional punctuations even additional words need to be added to make the translation easy to follow. My translation is: 请注意，Buffer 模块会预分配一个大小为 [Buffer.poolSize] 的内部 Buffer 实例作为快速分配池， 该快速分配池将被用于使用 [Buffer.allocUnsafe()] 新创建的 Buffer 实例，或者当 size 小于或等于 Buffer.poolSize &gt;&gt; 1（[Buffer.poolSize]除以2后的最大整数值）时，用已弃用的 new Buffer(size) 构造器新创建的 Buffer 实例。 Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my sixth contribution to Node.js project and I have translated 1151 words in this submission. Before: I have been working on the api folder and have translated 6778 words before this submission. After: The number of words being translated becomes 7929. Total: 7929 - 6778 = 1151 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-7-1151-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have been still working on Buffer.md. The context is about how to concat buffers, how to create Buffer instance from Array, how to create Buffer from existing buffer(s), how to compare two buffers, and how to copy a buffer into another at a specific position. I have made extra effort to be consistent with my translation, e.g. even to translate a simple word ‘Example:’ in the source string, I feel it is more appropriate to use ‘示例’ if some demo code follows immediately and use ‘例如’ if not. But it would be better to use the same translation consistently therefore I decided to use ‘例如’ for all translations. Another example is the translation of ‘Class Method’. I used to translate it to ‘Class 方法’，but I changed it to ‘类方法’ because ‘类方法’ is more popular than ‘Class 方法’ for Chinese IT professionals. I have corrected all previous translations and asked language manager to check them again. Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my eighth contribution to Node.js project and I have translated 1124 words in this submission. Before: I have been working on the api folder and have translated 7929 words before this submission. After: The number of words being translated becomes 9053. Total: 9053 - 7929 = 1124 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-8-1124-words/"},{"title":"Simplified Chinese translation of Node.js","text":"RepositoryGithub: https://github.com/nodejs/i18n Crowdin link: https://crowdin.com/project/nodejs Simplified Chinese page: https://crowdin.com/project/nodejs/zh-CN# Project Details Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js is a free, cross-platform, open source server environment to execute JavaScript outside of a browser. Traditionally, JavaScript is used for client side scripting and runs by a JavaScript engine embedded within a browser. With Node.js, JavaScript can be used to write command line programs or server side scripting. By this way, developers only need to learn a single programming language to do both server side and client side programming. Node.js is built on Chrome’s V8 JavaScript execution engine which was initially built for Google Chrome. Instead of interpreting JavaScript in real time, V8 compiles JavaScript code to native binary machine code to improve the performance. Node.js has an event driven architecture which makes it suitable for web applications with many I/O operations. That is why Node.js is very fast compared to similar technologies. libuv is used to handle asynchronous events across operating systems. Contribution SpecificationsI have used Node.js in a few small projects but never got a chance to see a whole picture of this amazing and popular framework. I am very exciting to start translating Node.js and very looking forward to my new learning journey! Translation overview The whole project consists of 1,048,272 words. victory622 has started working on this project. Since this project is extremely large therefore collaborations are required. I will be concentrating on the translation of v8.x folder which has 353,483 words to translate. This submission In this submission, I have been still working on Buffer.md. The context is about how to fill a buffer with existing data and associated issues, how to search within a buffer via includes and indexOf methods, how to get an iterator of a buffer, and how to read data from a specific offset. Regarding the translation, the translation of this string worths mentioning. The source string is “If value contains invalid characters, it is truncated; if no valid fill data remains, no filling is performed:” The source string did not explain clearly if it is after truncation or not, before checking “if no valid fill data remains”. To double check, I tested with the following code: const buf = Buffer.allocUnsafe(5); console.log(buf.fill(&apos;a&apos;)); console.log(buf.fill(&apos;aazz&apos;, &apos;hex&apos;)); console.log(buf.fill(&apos;zz&apos;, &apos;hex&apos;)); The result shows: Therefore, the translation has been changed from: “如果 value 包含无效字符，则会被截断；如果没有有效的填充数据保留，则不进行填充：” to: “如果 value 包含无效字符，则会被截断；如果截断后没有有效的填充数据保留，则不进行填充：” Languages I translate Node.js from English to Simplified Chinese. Word Count Regarding the number of words, this is my eighth contribution to Node.js project and I have translated 1179 words in this submission. Before: I have been working on the api folder and have translated 9053 words before this submission. After: The number of words being translated becomes 10232. Total: 10232 - 9053 = 1179 words Proof of AuthorshipMy translation activities can be viewed in my Crowdin profile: https://crowdin.com/profile/aafeng/activity","link":"/simplified-chinese-translation-of-node-js-9-1179-words/"},{"title":"Snax account","text":"I want to link my Steem account with my account on Snax blockchain using https://snax.onePlease, create Snax account for me!My authentication hash: c6fae847f9ed43e964d63eda7c4af69883c31b8f69a888da5307552010c9f924","link":"/snax-account/"},{"title":"Snowwhite白雪公主圣诞音乐剧","text":"虽然圣诞已经过去了，但一家人还是去看了一场预订好的圣诞音乐剧：Snowwhite白雪公主。这次看的和上次看的睡美人是不同班底的剧目。这次的演出更加精彩，已经计划好2020年的圣诞剧还看他家的。 白雪公主和七个小矮人的故事大家都非常熟悉了。但圣诞剧最大的特点就是在忠于原著的基础上加上了很多插科打诨的成分，让整个表演更加有趣，给你一个不断捧腹大笑的两小时，让你彻底轻松一下！ 首先，整个表演过程中和观众的互动非常多，有时七个小矮人拿着水枪不断“走火”，频频射到观众席上，看到个别经验丰富的观众自带雨伞，每到这个时候，非常淡定的把伞打起来。有时又会向观众席中撒各种糖果，给观众们一个小小的惊喜。当然，语言上的互动就更多了，He’s behind you, Yes it is, Not it isn’t等等等，让众多观众参与其中，乐在其中。 其次，将很多时事有机的插入到表演中，比如：搭上了目前英国最热的时事：英国脱欧，一个主要配角的名字叫做Mr Brexit；而英国的强生首相，美国总统川普更是被演员们不时挂在嘴边。 还有一点，就是整个表演强调家庭氛围，不仅最后会邀请群众小演员上场，而且还会当场宣读来自亲友们的祝福语。 感觉越来越喜欢英国的这种传统表演了。","link":"/snowwhite/"},{"title":"和近年大热运动Soap Hockey的偶遇","text":"今天偶然看见了一群学生在草地上玩Soap Hockey这个近两年大热的运动，也号称最适合夏季的游戏。看了一下，这项运动的facebook页面竟然有1800万的浏览量（facebook页面）。他们应该是大学俱乐部的在吸引新生吧。早先听说过这项运动，今天才近距离围观了一下。 这项运动最早是在2011年的时候起源于瑞典，特别适合朋友之间聚会时候玩。说白了就是在草地上铺上一大块塑料布，然后在塑料布上倒满了肥皂水。这样大家在上面玩曲棍球的时候就会滑倒。我想这项运动的最大趣味性就是大家能够注意力高度集中，精神上能够得到彻底放松。即使是滑倒了，大家哈哈一笑，爬起来可以继续。我在围观的过程中，场地中的球员和围观群众可以说是笑声不断。 下次和朋友聚会的时候我也可以试试。。。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/soap-hockey/"},{"title":"带孩子做科学实验系列之： 用洗涤灵驱动的小船 (Soap powered boat)","text":"今天给大家介绍一个非常简单的实验：用洗涤灵驱动的小船！ 准备一块泡沫塑料，最好薄一些的。 一个水盆中盛满清水 洗涤灵 牙签 开始实验首先，用裁纸刀把泡沫塑料裁成小船形状， 小船长度在4厘米左右。 接下来用牙签蘸着洗涤灵放在小船尾部那个三角形的顶点处。 你就会看到小船会在水中航行！这一滴洗涤灵应该能够维持几秒钟。如果要小船接着走的话，需要把盆中的水倒掉，并清洗干净后再倒入新的清水。 这个实验说明了像洗涤灵这样的活性剂会破坏水分子之间的张力，打破了小船周边的受力平衡，从而产生一个推力促使小船前行。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/soap-powered-boat/"},{"title":"国外经典儿童图书推荐之： Some dogs do (永远不要扼杀孩子们的想象力)","text":"今天给大家推荐这本经典的儿童读物叫做：Some dogs do。这本书的最大特点就是故事中大胆的想象力，一只小狗竟然飞了起来。估计很多人看到这个情节的时候都会觉得很不可思议。因为这太不符合常理了。如果你自己的孩子提出各种奇思怪想的时候，你是否会断然否定呢？这本书最后的反问句可能会引起很多家长的深思吧。 在故事中有一只叫做Sid的小狗有一天突然飞了起来，但当它把它飞到学校的事告诉了自己的同学后，没有人相信它。甚至学校的老师也不相信它。尽管不相信，但学校的老师还是做出了比较公正的决定，让Sid演示给大家。很不幸的是，Sid在学校说什么也飞不起来了。这件事让Sid整天都很郁闷。直到放学回家，它嘴中还在一直嘟囔：Dogs don’t fly。Sid的爸爸看到后，让它闭上了眼睛说告诉它一个秘密，结果等Sid再睁开眼睛的时候，它的爸爸飞起来了。最后书中并没有解释为什么Sid的爸爸会飞起来，只是用一个反问句来结束了整个故事，这个时候如果孩子问到这个问题，你会如何解释呢？ https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/some-dogs-do/"},{"title":"狮子王音乐剧","text":"今天在伦敦西区的 Lyceum Theatre 看了狮子王这部音乐剧。狮子王音乐剧是在迪士尼同名动画片基础上改编而成的。剧中人物以动物装束和人偶的方式表达。 迄今为止已经看过了《狮子王》的很多版本，但这部音乐剧的感觉最好。整个表演无数次高潮。 Posted using Partiko Android","link":"/srkq1ki6/"},{"title":"我的集体活动经历：搭建Sand Castle","text":"最近几年每年单位都会组织活动，给大家一个放松的机会。我们team选择去了海边小镇Scarborough去搭建一个Sand Castle。这个本来是带孩子到海边玩时陪孩子玩的，没有想到这次自己成了主角。。。 毕竟是几个成年人，很快就把这个沙堡搭好了. 搭完了我们又在海边闲逛，顺便玩了一些游戏，这是我收获的小飞机","link":"/staff-festival-sand-castle/"},{"title":"读Steem白皮书有感 - 说说Steem中的带宽","text":"最近参与了Steem白皮书的翻译，也让自己有机会仔细的阅读和思考了一下，感悟还是很多的。今天就先聊一聊Steem中的带宽。 图源：pixabay 其实对于带宽的认识最早源于在加入Steem初期，由于SP太小，时不时会出现带宽不足无法发帖的问题。 首先来说说为什么需要限制带宽？这个原因其实说起来还是很复杂的。绝大多数的区块链网络中进行转账等操作都是需要交手续费的，其实其设计初衷的目的之一是防止黑客的攻击，设想如果没有交易费，则网络很容易受到垃圾信息的攻击。即使只对网络中的交易收取很少的手续费，也足以让对区块链的攻击成本很高。 但收费也带来了很多问题，比如：如果用户在网络中的操作都需要缴纳一定的费用时，则会让用户感到很烦，最终的结果就是影响用户体验，进而导致无法吸引更多用户。毕竟，人们还是期待很多东西都是免费的。再有一个问题就是，假如有土豪想要攻击比特币网络，只要拿出足够的资金，完全可以让比特币网络瘫痪足够长的时间，无法进行正常交易。当然，区块链网络也有应对措施，比如提高交易费，扩容等。不过这又会导致其他的问题。 在Steem中，完全取消了交易费，但为了避免遭受攻击，采用了带宽限制的方式。用户所能使用的带宽和其拥有的SP成正比，而且整个Steem网络的带宽是动态调整的。也就是说，在拥堵时段，每个用户的可用带宽就会相对减少。而在空闲时段，用户可用带宽就会增加。一旦黑客对Steem进行攻击，由于带宽的限制，其操作也会受限。因此攻击可持续的时间会非常短。使用同样的资源，比如资金，对比特币网络的攻击可能导致网络拥堵十几个小时，但对Steem的攻击只能持续30秒。 就先说到这里，欢迎大家指正。","link":"/steem-steem/"},{"title":"为Steem投票！-- Vote for Steem!","text":"看到在Steemit上关注的朋友们在为Steem投票，既然是举手之劳，肯定要支持一下！ 如果大家想参与的话，可以参考 @justyy 的翻译： https://steemit.com/cn/@justyy/steem-steem-netcoins-oracle-d 或者 @oracle-d 的原文: https://steemit.com/steem/@oracle-d/vote-for-steem-to-get-a-free-listing-on-netcoins-and-win-oracle-d-upvotes-contest-8dbe4475bb65cest Steem on!","link":"/steem-vote-for-steem/"},{"title":"读Steem白皮书有感 - 其实你我都是那桶中的螃蟹","text":"最近刚刚完成了Steem白皮书的翻译，也让自己有机会仔细的阅读和思考了一下，感悟还是很多的。给我触动很大的一点就是白皮书中对人性的剖析，可谓针针见血，让人赞叹的同时感到一种无力感。。。 以下文字大意取自白皮书 你可曾胸怀远大，志存高远，期待不断提升自己，超越自我，实现自己的梦想? 但你周边的人和环境会产生一种巨大的阻力，试图把你拖回去以分享共同的命运。这就像螃蟹桶的故事一样： 有很多只装在桶中的螃蟹，每一只都想爬出來，但是很少会有成功的，为什么？ 因为一旦某只螃蟹爬到较高的地方，就会被其他的螃蟹拉下去！ 其实Steem的目标就是创建一个“螃蟹桶”，期待更多的“螃蟹”进入到桶中。可能其中有个别的螃蟹会不老实，想从桶中逃脱，作为Steem网络其实很容易对这些螃蟹进行限制，这就好比给桶盖上了盖子，虽然能够防止个别螃蟹逃走，但也会阻碍让新螃蟹进入桶中。 其实，只要使得墙壁变滑，并给予螃蟹足够的权力来防止其他螃蟹逃脱就足够了。 举一个最简单的例子，在Steem中大家都知道自我点赞的回报率很高。也有很多人讨论过这个问题。甚至有人建议Steem应该取消自我点赞的功能。但Steem并没有这样做，而是借鉴了螃蟹桶的故事，让其他的螃蟹来踩那些过度自我点赞的人。这不是玩笑，如果你有至少几百个SP，每天发很多帖子，只给自己点赞，坚持几个月，相信就会有别的螃蟹来踩你。。。","link":"/steem/"},{"title":"试用SteemCoinpan","text":"看到好多中文区的朋友都在使用SteemCoinpan，也来尝试以下。 首先是登陆，只要用posting key就可以登陆，建议不要使用更高级别的key，因为毕竟在这里只需要发帖权限就可以了。下面是登陆后的界面： 可以看到和Steemit界面非常像，其实应该是从Steemit官方fork过来的吧。。。 发帖界面也是非常的眼熟： 需要注意的是，一定要加上sct标签，这样会获得sct机器人点赞。同时推荐加上sct-cn标签。 sct这个标签适用于区块链方面的文章。","link":"/steemcoinpan/"},{"title":"在Steemit中最火的tags是什么？","text":"Steemit中提升自己文章曝光率的最简单有效的方法就是给自己的文章设定一个好的tag。 其实在Steemit中很容易查看各种文章的统计信息。 首先访问这个页面： https://steemit.com/tags 然后选择按照Payouts排序就也看到那个tag对应的文章效果最好： 由此可见，前三名是life, steemit和steem。没有想到的是introduceyourself也排在了前10。而我们的cn社区排名24，大家还需要努力啊。","link":"/steemit-tags/"},{"title":"Stockeld Park灯展","text":"周末约了几家朋友一起去Stockeld Park玩。这里的主要项目有几个：首先是室内滑冰场，其次是这里的迷宫。最后也是最精彩的是在森林中的灯展。 可能是因为圣诞假期马上就要结束了的缘故，来这里玩的人并不是很多。不像往年，溜冰场上人满为患，不能尽兴。而且这里还很体贴的为小朋友们准备了小雪人和小企鹅，可以用手扶着避免摔跤。 感觉最好玩的还是森林中的灯盏。尤其是当天黑的时候，整座森林就像一个梦幻的世界。里面有着各种动物造型的灯：龙，鹿，企鹅，豹子，狼，等等，同时还有很多童话故事中的角色，比如：美人鱼和独角兽。","link":"/stockeld-park/"},{"title":"社区的Summer Fair","text":"儿子学校和社区共同举行Summer Fair, 整个活动全部都是由学校和社区的志愿者组织。有各种活动，比如在英国很常见的砸椰子游戏，抽奖游戏，钓鱼游戏，Bouncing Castle，Face painting等等，当然，各种夏日美食也不能少，烧烤，热狗，冰激凌，各种英式点心等。 还有一大亮点就是受最近世界杯的影响。英国人似乎都高度兴奋，今天正逢英国对阵瑞典的1/4决赛（现在已经知道结果，英格兰挺进四强，将对阵克罗地亚），所有酒吧都是人满为患! Summer fair为了方便大家娱乐看球两不误，还架起了大屏幕电视。","link":"/summer-fair/"},{"title":"Monkey-fighting","text":"Little monkeys are fighting with each other. ► Watch on DTube► Watch Source (IPFS)","link":"/sx3fa7ji/"},{"title":"感人的英国经典话剧The Secret Garden秘密花园","text":"今晚全家去观看了英国的经典话剧The Secret Garden秘密花园。故事原型取自于英国约克郡，是英国儿童文学的经典代表作之一。虽然说是适合6岁以上孩子，但今晚的观众绝大多数都是成年人，我们全家也是被整场演出深深吸引。在谢幕后观众的掌声更是长达近5分钟。 话剧中叙述了一个出生于富裕家庭的小女孩Mary被家庭的各种条条框框所束缚，生活的并不快乐。同时也日益骄纵，染上了种种坏毛病。后来父母因为地震去世（原著中所述是染上霍乱），于是去投奔了姑父家。在姑父家她结识了很多新的朋友，性格逐渐变的开朗。在一个偶然的机会使得她发现了一个秘密花园，这个花园是她姑姑的最爱，但她姑姑也因为这个花园失去了性命。在朋友们的帮助下，他们渐渐恢复了花园的原貌，于此同时也治好了姑父儿子的病。整个话剧只是一个小制作，演员也不多，但却处处体现出了编剧和演员的专业水准，演出过程中更是高潮不断，给人完美的视听体验。 由于演出过程不让拍照，因此只能在演出结束后拍了一张舞台的照片。","link":"/the-secret-garden/"},{"title":"国外经典儿童图书推荐之： Thank you, little mouse","text":"今天给大家推荐的这本图书是Thank you，little mouse。这本书特别适合3岁以下的小朋友。对于这本书我应该已经给自己的孩子们讲过几十遍了吧，书中的每一页都被动的记在自己的脑海中了。感觉通过这本书中的故事能够教会小朋友如何和人相处。比如如何去帮助别人，要懂得感恩等的基本道理。 图片来源： Amazon 在故事中，小老鼠和自己的爷爷奶奶住在一起。爷爷经常陪小老鼠在花园里玩，奶奶则会给小老鼠做各种好吃的饼干。到了晚上，爷爷奶奶会把小老鼠抱在怀中给他讲睡前故事。小老鼠一直非常感激爷爷奶奶对他的照顾，但又不知道该如何表示。眼看着秋天到了，各种水果都熟透了，这时候小老鼠终于有了一个好主意。它在树林中帮助了松鼠，小兔子，麻雀，还有小熊，而这些好朋友们送给了小老鼠各种不同的水果。于是，小老鼠和它的朋友们为小老鼠的爷爷奶奶举行了一个温馨的感谢party。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/thank-you-little-mouse/"},{"title":"国外经典图书推荐之：小海螺和大鲸鱼The snail and the whale","text":"今天给大家推荐英国著名的插画作家Julia Donaldson的著名故事书”The snail and the whale“，中文书名叫做”小海螺和大鲸鱼”。这本故事书不仅情节非常吸引人，配图更是能抓住小朋友们的眼球，最后的寓意也是非常清晰明了，满满的正能量。非常适合给2-4岁的小朋友们讲。我家中英文版本都买了，给自己的两个孩子讲了也不知道有多少次了。 Image source: pixabay.com 书中主要讲述的是一只小海螺的大梦想，那就是要出海旅行去看看这个美丽的世界。她旁边的小海螺们都嘲笑她这个不切现实的梦想。直到有一天，一条大鲸鱼来到岸边，小海螺爬上了大鲸鱼的尾巴，跟着大鲸鱼一起去远航。一路上小海螺看到了无数的风景，有冰雪皑皑的北极，有炎热无比的热带，还有一路上的种种冒险和考验。小海螺也逐渐成熟了起来。在大鲸鱼不慎搁浅的时候，小海螺想到了一个好办法救了她的朋友。回到自己的家中后，其他的小海螺也在这支小海螺的影响下爬上了大鲸鱼的尾巴，一起再次出海远航。。。 https://steemit.com 首发。非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/the-snail-and-the-whale/"},{"title":"The trip to Monkey Forest + Quiz (5 SBD) &#x2F;  猴山之行 + 5 SBD有奖问答","text":"The first one who answers the following 4 questions correctly will be rewarded 5 SBD, deadline is 10pm 3 Sep 2017 UK time.下面有4个非常有意思的关于猴子的问题。第一位答对所有四个问题的朋友将会获得5 SBD奖励。截至到2017年9月3日英国时间晚10点。 The answer is C, B, B, C答案是：C, B, B, C I had a day trip to Monkey Forest, it was very interesting and lots of funs.早就听说这个Monkey Forest，这次正好和朋友一家结伴游览。 I didn’t expect that the Monkey Forest is so crowded.没有想到这里这么受欢迎，人山人海 We are very lucky to meet the feeding time刚到就正好赶上给猴子喂食 The baby monkey is on mummy’s back all the time.还有这只刚出生不久的小猴，总粘在妈妈的背上： Another little monkey又看到一只小猴 There are quite a few interesting questions:这次猴山之行感觉最有意思的事情之一就是这些有趣的问题： Q1: Where and how do we spend the night? 问题1：猴子晚上在哪里过夜？ The communications看看猴子各种表情所代表的含义，哈哈，原来猴兄也是表情帝 Differences between male and female can be identified by their teeth原来区别公猴和母猴除了可以看屁股外，还可以看它们的牙，有獠牙的是公猴，没有的是母猴。 The behaviours下图中可以看到猴子的各种行为，那个，有点点污。。。 Q2: Why do we groom each other? 问题2：为什么我们互相捉虱子？ Q3: In each group there is a hierarchy with a male at the top. How does a specific male achieve this position?问题3：在猴群中猴王是怎么产生的？ Q4: How does a female achieve the highest rank within the female hierarchy?问题4：在猴群中的母猴中的老大是怎样决定的？ Little monkeys are playing together到了最后，看到了最精彩的一幕：小猴子们在嬉戏打闹： 视频：https://dtube.video/#!/v/aafeng/sx3fa7ji Monkey is not suitable to be a pet猴子是群居动物，因此不适合作为宠物","link":"/the-trip-to-monkey-forest-quiz-5-sbd-5-sbd/"},{"title":"国外经典儿童图书推荐之 - The Very Hungry Caterpillar饥饿的毛毛虫","text":"今天给大家推荐的是这本貌似简单却信息量极大的儿童读物：The Very Hungry Caterpillar (饥饿的毛毛虫)。书中讲述了一只饥饿的毛毛虫在不断的吃各种水果，最终进化成美丽的蝴蝶的故事。这本书已经被翻译成几十种不同的语言，全世界不知道有多少小朋友读过这本书，又有多少小小的手指从被毛毛虫咬过的洞洞中穿过。。。 图源： Amazon 这本书能够给小朋友讲述的东西太多了，以下是我能想到的：数字（水果的数量，毛毛虫有几只眼睛，几条腿等），颜色，各种水果的名字，一周的7天，为什么毛毛虫能长成漂亮的蝴蝶？感觉要想讲好讲透的话，真的不是那么容易。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/the-very-hungry-caterpillar/"},{"title":"我的ThinkPad情节","text":"最近单位给笔记本升级，我再一次毫不犹豫的放弃了MacPro，选择了ThinkPad。其实我的工作环境基本上都是在Linux上，但我宁愿放弃最直接的MacPro系统，而是使用Windows+VM的方式。主要原因有二： 1）我实在是对苹果产品提不起任何兴趣，虽然我经常使用Mac PC，自己也为了安装孩子的教育软件购买了ipad，但那套封闭的系统让我很是厌烦，自然会优先选择其他系统。 2）我的第一台笔记本就是 ThinkPad，自此之后但凡升级笔记本，我的首选都是ThinkPad。 这次我选择的是T480S，经过一段时间的使用，感觉很不错，主要优势有： 性能强悍，我在上面同时跑两个VM，在host上运行其他程序半点都不卡。 超级轻便，本子非常薄，我选的又是14寸屏的，更加轻便好携带。 电池续航能力强，说明书上说的似乎是9个小时，我没测试过，但充满电用过4，5个小时后电量基本还有50%+。 看过网上的评测，这款本的缺点似乎是屏幕黯淡，但我没有任何感觉，可能因为我只用它工作吧。","link":"/thinkpad/"},{"title":"Translation of React from English to Simplified Chinese part 10 - 641 words","text":"Today I translated React project from English to Simplified Chinese. React is a JavaScript library for building user interfaces. Proof of WorkBefore: After: ReportsAs shown in the screen dump below, I suggested 42 translations: The screen dump below shows the number of words I translated: Samples of my translations My Crowdin linkThis link shows my translation activities: https://crowdin.com/project/react/zh-CN/activity Posted on Utopian.io - Rewarding Open Source Contributors","link":"/translation-of-react-from-english-to-simplified-chinese-part-10-641-words/"},{"title":"Translation Challenge with $300 Worth of CET Rewards (Arabic, German, French, Portuguese, Spanish, Vietnamese, and Turkish)","text":"As a CoinEx user, I have received an email, regarding a translation challenge, which I want to share: If you are bilingual in your native language and English, and have a sound knowledge of blockchain, you are now challenged to complete the following task. Reward: Up to $300 worth of CET rewards + CoinEx Merchandise Gifts Time: NOW until 16:00 September 1, 2019 (UTC) Task: Translate about 5,000 English words into your native language in a limited time frame Arabic, German, French, Portuguese, Spanish, Vietnamese, and Turkish preferred Click here to accept the challenge Note: If your application has been successfully accepted, we will contact you via email in 7 business days from your submission.","link":"/translation-challenge-with-usd300-worth-of-cet-rewards-arabic-german-french-portuguese-spanish-vietnamese-and-turkish/"},{"title":"Translation of React from English to Simplified Chinese part 9 - 548 words","text":"Today I translated React project from English to Simplified Chinese. React is a JavaScript library for building user interfaces. Proof of WorkBefore: After: ReportsAs shown in the screen dump below, I suggested 40 translations: The screen dump below shows the number of words I translated: Samples of my translations My Crowdin linkThis link shows my translation activities: https://crowdin.com/project/react/zh-CN/activity Posted on Utopian.io - Rewarding Open Source Contributors","link":"/translation-of-react-from-english-to-simplified-chinese-part-9-548-words/"},{"title":"英国人大爱的Velodrome运动初体验","text":"今天单位组织活动，终于有机会体验了一把大名鼎鼎的Velodrome","link":"/velodrome/"},{"title":"期待Voice这个平台","text":"“而Voice这个平台，获得奖励的是用户，而不是平台。” 期待BM的Voice，到时会给Steemit造成什么冲击呢？ Posted using Partiko Android","link":"/voice-ryu20jb5/"},{"title":"Winauth - Authenticator on Windows","text":"WinauthAuthenticator on Windows Screenshots Hunter’s commentWinAuth is a portable open source Authenticator for Windows users. It can provide time-based authenticators, e.g. Google Authenticator. WinAuth can be used in any sites supporting Google Authenticator, e.g. Bittrex, Coinbase, Kraken etc. With this great tool, you do not have to get your phone when you login to sites requiring two factor authentication. Linkhttps://github.com/winauth/winauth ContributorsHunter: @aafeng This is posted on Steemhunt - A place where you can dig products and earn STEEM.View on Steemhunt.com","link":"/winauth-authenticator-on-windows/"},{"title":"约克Winter Wonderland","text":"圣诞季就要到了，约克这里的Winter Wonderland开园了。里面好玩的东西不少，除了旋转木马，小火车，钓鸭子，见圣诞老人等活动外，这里还有滑冰场。玩累了可以买杯这里只有圣诞期间才有的特色饮品Mulled Wine来暖暖胃。 这个滑冰场一年中只有圣诞期间开放近一个月左右的时间，今天约了朋友来这里一起滑冰。 为了照顾不会滑的小朋友们，这里特意提供了小雪人和小企鹅，小朋友们可以扶着在冰上滑，就不会摔倒了。我家儿子以前只滑过不到三次，但扶着小雪人已经滑的非常快了。","link":"/winter-wonderland/"},{"title":"国外经典儿童读物推荐之 - We&#39;re Going on a Bear Hunt (勇于克服困难)","text":"今天给大家介绍这本有点冒险精神的读物：We’re Going on a Bear Hunt我们要去猎熊。书中讲述了一家人出发去猎熊的故事。它们历经了草地，沼泽，河流，森林，和暴风雪等种种困难，终于见到了熊的时候却是落荒而逃。。。 图源：pixabay.com 在这个故事中最有趣的其实是书中的配图，文字和音乐。比如：We’re going on a bear hunt. We’re going to catch a big one. What a beautiful day! We’re not scared. 一边走一边给自己打气，我们不怕！见到草地的时候会说：Uh-uh! Grass! Long wavy grass. We can’t go over it. We can’t go under it. Oh no! We’ve got to go through it! Swishy swashy! Swishy swashy! Swishy swashy! 书中还有配套的按钮，按下就会有配套的声音，比如在草地这页就会有莎莎莎穿过草地的声音。同时配套音乐非常好听，配套文字也是非常押韵。在这本书中我看到了两点，一是孩子们需要自己面对各种困难并想办法去克服。二是教育孩子有些事情是不能做的，比如真正的猎熊。知道有危险的时候要避开。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/we-re-going-on-a-bear-hunt/"},{"title":"伦敦西区音乐剧之旅","text":"作为英国的文化之都，伦敦西区是和纽约百老汇齐名的世界级看剧圣地。每天在伦敦西区上演的经典舞台剧可以说是数不胜数：《歌剧魅影》，《悲惨世界》，《狮子王》，《猫》，《妈妈咪呀》等等。 今天开启伦敦西区看剧之旅。 首场选择的是《阿拉丁》 Posted using Partiko Android","link":"/wqbv96mv/"},{"title":"哥本哈根步行街","text":"哥本哈根最著名的步行街位于市中心，一端连接市政厅广场，另一端通向丹麦皇宫。 首先偶遇了这里的特色街边小吃， 油炸杏仁。 不得不说， 现炸出来的香甜可口， 卖杏仁的小哥也超级帅！我们买的这一小袋很快被抢光了。 丹麦这里做的各种点心非常好吃，导致我们在酒店的早餐经常会吃多。 途经吉尼斯世界记录博物馆。 街头行为艺术表演 在步行街走累了，就在街边的Wok吃的面，他家既有汤面也有炒面， 吃的还很舒服。 儿子坚持要吃饺子， 结果是油炸的。。。 在哥本哈根的这几天，几乎天天都在这条步行街上暴走，几乎每天步行都是1万步以上。。。","link":"/zkrwx/"},{"title":"国外经典儿童图书推荐之 - Za-Za&#39;s Baby Brother（懂得等待和分享）","text":"自从国内二胎政策放开后，不仅很多家长面临是否要二宝的问题，而且很多小朋友也在想：我还想要一个小弟弟或妹妹吗？今天推荐的这本书就是讲述的这样一个故事。让我们来看看这只小斑马的心路历程吧。 图源：pixabay.com Zaza的妈妈又怀孕了。因为妈妈的肚子很大，所以都没有办法抱Zaza了。很快爸爸就开车带着妈妈就去医院生小baby了，小Baby出生后，很多亲戚都来看望小Baby，夸小Baby可爱，漂亮。而Zaza只能在旁边独自玩耍。而爸爸妈妈也变得更忙碌了，当Zaza想让爸爸妈妈陪它玩时，爸爸妈妈只能充满歉意的让它再等一会儿，因为他们要照顾小Baby。只有等小Baby睡觉了，爸爸妈妈才能给Zaza讲故事。这个略感无奈的故事告诉小朋友们要懂得等待和分享，不仅要分享自己的玩具，还要分享爸爸妈妈的时间。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/za-za-s-baby-brother/"},{"title":"最近开始读《三体》这本书，竟然发现书中所说和我许多年来的疑问和困惑竟然不谋而合","text":"早就听说这本书的大名了，但一直没有机会拜读。最近很偶然的一个机会，朋友推荐这本书，于是借了回来。一旦开始，就感觉停不下来了。虽然只读了十几页，但里面提到的问题一直是我一直在想却得不到答案的。先说一说书里提到的两个假说： “射手”假说：有一名神枪手，在一个靶子上每隔十厘米打一个洞。设想这个靶子的平面上生活着一种二维智能生物，它们中的科学家在对自己的宇宙进行观察后，发现了一个伟大的定律： “宇宙每隔十厘米，必然会有一个洞。”它们把这个神枪手一时兴起的随意行为，看成了自己宇宙中的铁律。 “农场主假说”则有一层令人不安的恐怖色彩：一个农场里有一一群火鸡，农场主每天中午十一点来给它们喂食。火鸡中的一名科学家观察这个现象，一直观察了近一年都没有例外，于是它也发现了自己宇宙中的伟大定律：“每天上午十一点，就有食物降临。”它在感恩节早晨向火鸡们公布了这个定律，但这天上午十一点食物没有降临，农场主进来把它们都捉去杀了。 这两个假设说的其实就是人类社会中普适的物理定律的时间和空间的不对等性。其实，也许地球的一切都只是偶然，秩序都是漫长宇宙中的一小段偶然现象而已，这种偶然会突然被打破，那些像农场主和射手一样的高等生物有一天会结束这种秩序，可能是几千几百年后，也可能，就是明天。 我不是无神论者，但也不确认是否有宗教中的神灵存在。但我一直相信有一个TA在默默关注着这个世界，也许就是射手或农场主吧。也许人类社会太渺小了，TA根本就不在乎。。。期待这本书中的故事。。","link":"/zribs/"},{"title":"长隆野生动物世界游记 &#x2F; My trip to Chimelong Safari Park by @aafeng","text":"This article was written by @aafeng / 本文由 @aafeng 撰写提交 About the authour / 关于作者: 自我介绍 Follow the author @aafeng to find the other great articles from him/her.请关注/追随作者查看他/她的其它优质文章。 Original text/原文如下： 各位Steemit好友们，大家好！我是来自英国约克的 @aafeng。非常感谢 @someone 的努力工作，给我这样的steemit新人一个展示自我的机会，让我认识更多的朋友。 Dear steemitians, I’m @aafeng, hope you are well. Many thanks to @someone for publishing my post on behalf of me. 广州长隆野生动物世界是世界上最大的野生动物主题公园之一。在园区内有超过2万种的各种珍稀动物。在公园内不仅可以观赏各种动物，而且还有专门的动物研究和保护机构。 I visited my relatives in Guangdong when I was in China a couple of months ago. I have spent a good time in Chimelong Safari Park which is one of the largest wild animal theme park in the world. It has over 20,000 rare animals and occupies more than 1,333,340 square meters. 长隆野生动物世界给我的最大印象就是非常原生态，动物们都生活在自己熟悉的环境中，从而能保持非常好的精神状态，而不像很多动物园中的动物那样懒洋洋的样子。其实这里面体现了一个非常好的设计理念，也就是说把动物园设计成一个”动物出没的地方”，而不是展示动物的地方。 The greatest impression Chimelong Safari Park gives me is its original ecology. Animals live in their own familiar environment, therefore they maintain a very good mental health. In fact, this reflects a very good design concept: the zoo is an “animal infested place”, rather than a place to show animals. 火烈鸟 Flamingos 黑熊 Black bears 黑熊绝对是游泳健将 Bears are good swimmers 前面是一个叫做“丛林发现”，里面很有教育意义，能学到很多东西，比如：如何孵化小鸟，如何给动物治病等等。 Jungle Discovery is a very educational place which shows how to hatch the birds, how to treat animals and so on. 保温箱中的小鸟 The birds in the incubator 熟睡中的老虎幼崽 Sleeping tigers cubs 玩耍中的黑猩猩，它们很喜欢给游客们表演 Chimpanzees like to show to visitors 鹦鹉之家 Parrots 儿子和鹦鹉的亲密接触： My son likes parrots 黑头雁和它们的孩子 Black goose and their children 小猴子 Moneys 犀牛 rhinoceros 鸵鸟和这只黑羊的和平共处 The coexistence of the ostrich and the black sheep 很快就走到了著名的花果山剧场。运气不错，稍微等了一下，演出就开始了。整个演出非常精彩，既然是花果山剧场，主角当然就是小猴子了。首先是猴子们的高空特技表演 Soon we went to the famous Huaguoshan Theater. The whole show is very exciting. The protagonist, of course, is monkey. 人猴同台表演，似乎悟空也来了，哈哈 Trainers and monkeys on the same stage. 除了猴子的各种表演外，也还有其他动物的表演，比如：犀鸟的飞行特技表演。同时还有观众参与节目，比如观众可以向空中抛食由犀鸟接住。 In addition to monkeys’ performances, there are other animal performances as well, such as: hornbill flying performances.Visitors are encouraged to participate in the show, e.g. visitors can play a ‘throw and catch’ game with hornbill. 接下来我们乘坐小火车进入了原生态游览区。在这里有着模拟各种动物生存环境的地形地貌，包括非洲草原，亚洲森林，美洲丛林等。在里面可以看到黑熊，狮子，长颈鹿，斑马，羚羊等各种动物就在不远处休息，感觉非常刺激。 Finally, we take a small train into the original ecological resort. Here is a simulation of a variety of animal survival environment including the African grassland, Asian forests, American jungle and so on. In here you can see lots of wild animals such as the black bear, lion, giraffe, zebra, antelope etc, are very close to you. 巨嘴鸟 Toco toucan 袋鼠群 Kangaroos 开屏的孔雀 Peacock 悠闲的骆驼 Camel 貘 Tapirus 雄狮 Lion 长颈鹿，斑马和羚羊和谐共处 Giraffes, zebra and antelope in harmony 翩翩起舞的鸵鸟 Dancing ostrich 在园区内还有一个非常受欢迎的项目就是给动物喂食。当然，不能随便把任何你觉得好吃的东西喂给动物，否则不是爱护而是伤害了。孩子们都很喜欢给大象喂食。 One of the most popular activities in the park is to feed animals. The children are very keen on feeding elephants. 毛茸茸的小象 Hairy small elephant 呆萌的大熊猫在悠闲的啃着竹子，不论游客们怎们拍照，大熊猫们都十分淡定，自顾自的啃着竹子。 No matter how tourists take pictures, the giant pandas are very calm, just self-serving gnawing bamboo. 这里有世界上唯一的大熊猫三胞胎—萌帅酷。 There are the world’s only giant panda triplets - Meng, Shuai and Ku. Please follow me @aafeng , Thanks! 请大家关注我 @aafeng ，谢谢！ Author @aafeng, Posted By @someone","link":"/--my-trip-to-chimelong-safari-park-by-aafeng/"},{"title":"The trip to Snowdonia 威尔士最美国家公园雪敦山公园之旅 by @aafeng","text":"This article was written by @aafeng / 本文由 @aafeng 撰写提交 About the authour / 关于作者: 自我介绍 Follow the author @aafeng to find the other great articles from him/her.请关注/追随作者查看他/她的其它优质文章。 Original text/原文如下： To celebrate my marriage anniversary, we had a trip to Snowdonia, the second largest national park in the UK. 为了庆祝和媳妇 @leir 的结婚结婚纪念日，全家去威尔士Snowdonia国家公园度假，下面和大家分享这次游记。 As suggested by our Hotel host Paul, we set off from Llandudno via Betws-y-Coed. 根据酒店房东Paul的建议，临时改变了路线，改由途经风景非常好的Betws-y-Coed绕道去Snowdon。Betws-y-Coed贝兹考德位于雪敦山国家公园东侧，是重要登山口和旅游胜地。 We had a short break in Swallow Fall - have no idea why it is called Swallow Fall. Here is the explanation from WIKI：“It is thought that the English name arose from a mis-hearing of the Welsh word ewynnol (foaming) as the similar-sounding y wennol (swallow).” 这是途经的燕子瀑布（Swallow Fall）。不是很明白为什么叫做燕子瀑布。于是查了一下WIKI，才知到原来是以讹传讹啊，原来威尔士语中的ewynnol (对应英语中的foaming) 被误听做了wennol (也就是swallow，燕子)，因此才被叫做燕子瀑布。这个瀑布在周边算是最大的了。可以和世界范围内那些有名瀑布一比的话，这个可能就太小儿科了。 Upon arrival, we visited National Slate Museum。 到达后我们首先参观了著名的板岩博物馆。 The slate industry has been very important in Wales history.板岩工业在威尔士的历史中非常重要。板岩可以说是威尔士这里的一个特色，它塑造了威尔士这里独特的地貌，也造就了这里独特的历史。 墙的围栏是板岩做的： In Slate Museum, you can see the works’ hard life in early years.在威尔士板岩博物馆中，可以体验早期工匠们和他们家庭的艰辛生活。博物馆内的很多机器仍旧保留着其原始状态。 A playground is situated within the museum.博物馆内还有孩子们的小游乐场 Lots of names are on the wall of Museum博物馆外墙上刻着很多人的名字，无语。。。 Right, after visiting Slate Museum, it’s time for the mountain train! According to railways’s website, it has been 1.2 million people has ridden the mountain train.由于家中有两个小孩，还有个“没长腿”的小公主，自己登山不太现实，登顶的火车自然是唯一选择。票价真心贵！一家人将近100英镑！如果订那个蒸汽火车的话会更贵。据说从1896年开始，共有1200万人成做过这里的小火车。小火车往返共两个小时，在峰顶停留半个小时的时间。Image credit to Snowdon mountain railway People in railway station火车站等待上车的人： The train track is very special可以看到小火车的轨道也是非常特殊，中间有带锯齿的轨道，想来是给小火车借力登上的吧。 Beautiful views:乘坐小火车沿途美景： Hikers around从火车中会不时看到很多上山下山的人： It is very foggy since halfway of the journey.火车单程近一小时的车程过半后，我们发现山顶云雾缭绕，当时心就凉了！果然，火车快登顶的时候，已经是在云雾中行驶了！儿子说我们在天上了！到达海拔一千多米的山顶后，能见度极低，风极大，气温极低，别说欣赏美景了，简直就是上了“诛仙台”。 Text in the summit:山顶上的文字： Here you are nearer to heaven这里离天堂更近了： Mountain bikes in the summit在1000多米的山顶上还有骑行者的自行车，不得不说，自行车运动的确是英国人的真爱。。。 People in summit俩娃刚下火车不适应这样严酷的天气，情绪都不太好。过了一会儿竟然兴高采烈地爬楼梯登上了雪敦山的最高点(雪敦山是英格兰和威尔士最高山)。 I put a photo from Daily Mail as we cannot didn’t have a clean view:很遗憾我们没法看清远处，这里是网上的一个图片Image credit to Daily Mail Back to the ground, we went to Lawton’s Cafe Grill, which is the top 1 restaurant by reviewers in Tripadvisor. I have to say, the restaurant definitely deserves that ranking!事先订了一家在TripAdvisor上评价非常高的餐厅。吃过后不得不说，他家菜的味道和餐厅的服务我都给满分。这家小餐厅长期位于TripAdvisor排名第一果然是有道理的。 We order a chicken liver paste as starter, super nice!点了一道Starter，是鸡肝酱配面包，超级好吃 My wife ordered lamb shank as the main course老婆点的这里的著名盐沼羊腿，肉炖的非常软，也非常入味。孩子们都能咬动。 I ordered the steak burger, which is the best burger I had in my life!我点的的加量的Steak Burger，可以说这是我吃过最美味的牛肉Burger。里面的肉质鲜嫩多汁，配有的洋葱和其他调味品更加重了肉的鲜味，而且不像有的Burger里面的肉都有点糊了，如果满分十分，我给十一分，额外的一分是因为它的好吃程度超过了我的预期。。。 My children had fish &amp; chips and spaghetti bolognese孩子们要的是Fish &amp; Chips和意大利面，女儿没吃完的意大利面我也尝了尝，感觉味道非常独特，配套酱汁香味浓郁，面也非常软，同样也是完胜以前吃过的所有意面。难怪小女儿几乎全都吃完。 Snowdon larger is a must try here到了这里自然要尝一尝当地啤酒：Snowdon larger。这个啤酒感觉就没有太多特色了，味道不错，略苦。但到了这里，自然要喝本地啤酒了。 Also nice desserts餐后甜点 It’s a bit shame that we didn’t have a clear view from Snowdon summit, apart from that, it’s a perfect trip and we definitely will come back!整个行程虽然因为山顶有雾不能看清远处景色，有些小遗憾。但整体感觉非常棒，下次一定再来！ Author @aafeng, Posted By @someone","link":"/the-trip-to-snowdonia--by-aafeng/"},{"title":"The marvelous experience in The World of Wedgwood - 美轮美奂的英国瓷都之旅 by @aafeng","text":"This article was written by @aafeng / 本文由 @aafeng 撰写提交 About the authour / 关于作者: 自我介绍 Follow the author @aafeng to find the other great articles from him/her.请关注/追随作者查看他/她的其它优质文章。 Original text/原文如下： I have recently visited The World of Wedgwood, it is a feast for my eyes. I would like to share my experience. 最近参观了英国著名瓷器品牌Wedgwood的体验中心The World of Wedgwood, 被里面精美绝伦的瓷器所震撼，绝对是一次眼睛的盛宴。参观之后才知道，Wedgwood的创世人Josiah Wedgwood竟是如此惊才绝艳的一位人物，他不仅号称英国陶瓷之父，还是英国顶级中的顶级社团月光社的成员之一。下面和大家分享一下这次经历： The entrance非常期待这次参观，终于到了： “Teaware” made by sticks:广场非常整洁漂亮，这里有用树枝做的各种茶具，孩子们非常喜欢在这里奔跑玩耍： Josiah Wedgwood holding his most famed production, the Portland Vase.这位就是Wedgwood的创始人，大牛Josiah Wedgwood，怀中抱着的是他的成名作品：Portland花瓶 Water in front of the museum:在广场前还有一个小喷泉，孩子们在这里就玩了近一个小时： Lots of visitors here来之前以为英国瓷器应该是比较小众的，到了这里才发现这里的游客竟然非常多，游客中有很多从日本和其他亚洲国家，也会偶尔听到有人在讲熟悉的中文。 本来纠结了一番是否要参加工厂的tour，但最后还是参加了。好来感觉这个tour还是很有意思的，绝对涨姿势！在参观的过程中你会被这里带带相传的工艺，以及敬业的工作人员所折服。The factory tour is absolutely worth it - you will be inspired by the craftsmanship and skills passed through the generations. The models在没有进入工厂前，可以看到各种模具 A typical clay item shrinks by approximately 13% when fired in the biscuit kiln.茶具在烧制后会缩小约13%： All chinaware are fired at temperatures over 1000 degree.所有瓷器都要在超过1000度的高温下烧制. It is a shame that photos are strictly prohibited within the factory.非常遗憾的是，工厂内部严禁照相，只能把自己能记住的和大家说说了，里面主要介绍瓷器制作的各个步骤，从最开始的陶土，如何通过模具制作各种造型，再如何烧制和上色等。 The shop entrance is very beautiful平时出去玩对纪念品店很少会感兴趣，可这次的经历却截然不同，里面的各种精美瓷器和丰富的色彩绝对是一个视觉上的享受。纪念品店入口处就很漂亮： Very posh inside:我感觉店内可定是由专业设计师来设计的，内部非常典雅大气： A lion made by chinaware由各种瓷器做成的一个动物，我觉得是狮子： Teawares:自然还有五颜六色的各种精美茶具: Vera Wang has been working with Wedgwood号称婚纱女王的著名华裔设计师Vera Wang王薇薇和Wedgwood曾经多次跨界合作，设计除了Gilded Leaf 金色年华，Gilded Weave 金色霓赏等系列精品。 The stylish central bar在商店中心的吧台也非常有设计感： The tearoom is elegant and graceful这里的茶室非常的典雅漂亮，不过价格也不菲，每人16英镑，似乎比Betty’s的还要贵。本来打算体验一下的，但赶上有旅游团来，位置竟然被订满了。只能把这个遗憾留着，下次再来吧。 The museum is absolutely fantastic and you should not miss it. Lots of things to see in the museum, I would suggest to leave at least two hours there.根据官网的说法，博物馆内可看的东西很多，建议至少留两个小时的时间。进去之后感觉确实如此，我只是被精美的瓷器所震撼，如果是真正的瓷器爱好者的话，估计可以在里面待上半天。 The entrance:这里是博物馆入口处，还有Josiah的卡通画 Trails for kids这里还非常体贴的给孩子们提供了trail，让孩子们不会觉得太枯燥： Elegant corridor典雅的走廊墙壁上挂着他家的一些作品照片： Wedgwood： The manual process in early years:曾经带孩子体验过几次手工制作瓷器，都是使用那个能够不停转的机器。真心没有想到，连制模这个步骤过去都可以设计出简单的手工操作工具，伟大的人类！ Fine teaware:里面有着让人眼花缭乱的精美茶具，我这个外行只能看看颜色和样式了： Josiah’s workbench哈哈，没有想到，在Josiah的书桌上竟然有着类似文房四宝的东东，我管它叫做文房四宝之英国版： Stirrup cup in the form of a hare’s head; hand-painted in under-glaze blue.这是瓷器兔头，我觉得是源于过去的英国狩猎文化 Jug enamelled in polychrome with exotic birds.配有花鸟的瓷器： Egypt style chinaware埃及风格瓷器： Bone china下图是著名的英国骨瓷。曾经有人说：“当遇见骨瓷的那一刻，她骨子里蕴藏的贵族气质便在不经意间表露无遗。”，的确，真心的高大上，其实骨瓷不仅非常漂亮大气，还超级坚固，四个杯子就能撑起一座汽车的重量！ Wedgwood画像Josiah Wedgwood Sarah Wedgwood他夫人的画像 Wedgwood was a member of lunar societyWedgwood还是著名的月光社成员，这个月光社可以说是精英中的精英，人数从未超过14。生物学家达尔文，蒸汽机发明者瓦特等都是月光社的成员。 Big vase大花瓶： 最后带着孩子们体验了一下瓷器的制作过程。如果只是体验不带走的话只要两镑，如果需要成品的话15镑。 Author @aafeng, Posted By @someone","link":"/the-marvelous-experience-in-the-world-of-wedgwood----by-aafeng/"},{"title":"成都网红妖娆拉面哥","text":"最近去成都黄龙溪古镇游玩，见到了著名的网红妖娆拉面哥。小哥表演的非常卖力，一边跟着音乐律动旋转跳跃，紧闭着双眼，一边拉动着手中的面，同时小眼神也风骚的很。。。 这家面馆号称“一根面”，意思是说整碗面只有一根，足显拉面小哥的功夫非常过硬。 My video is at DLive","link":"/5f617220-3e8e-11e8-bfed-63766378c43c/"},{"title":"真的吃到了西游记中的人参果","text":"请原谅我的孤陋寡闻，最近在国内一家超市中第一次见到了人参果这种奇异的水果。价格也不贵，8.8元。买了两个尝了一下，味道很不错，清清淡淡非常爽口。 毋庸置疑水果的形状肯定是通过模具造出来的，但我非常好奇人参果的本来面目应该是什么样子的。于是百度了一下，看到的图片基本都是带花纹的人参果，而这种纯绿色的搜不到。谁见过这种人参果的本来面目？","link":"/6y8efb/"},{"title":"英格兰国庆日童子军大游行","text":"今天是圣乔治日，也是英格兰的国庆日，全英国的很多地方都举行了盛大的游行。我家孩子参加的童子军也参加了这次游行。 英国的Scouts是针对年龄为6-25岁青少年的一个组织。在他们的各种活动中，年轻人可以获取各种经历，甚至是冒险。在个各种活动中可以锻炼孩子们的能力，比如：团队协作，时间管理，领导力，创造力，计划能力，沟通能力。 长期参加这项活动的孩子在升学就业中可以获得更多优势。","link":"/nqrst/"},{"title":"Panda fighting video &#x2F; 两只大熊猫在秋千上打闹的精彩表演","text":"Why are pandas so cute? Watch this panda fighting video, you will know why! 这次去成都大熊猫基地，看到了两只大熊猫在秋千上打闹的精彩表演。两只熊猫争抢了近半个小时，最后两只熊猫双双滚下了秋千，萌翻了所有游客。 My video is at DLive","link":"/bef2df30-3f33-11e8-bfed-63766378c43c/"},{"title":"哥本哈根之行 - Day 1 万圣节主题酒店The Square Hotel + 市政厅广场","text":"这次在哥本哈根入住在The Square这个四星级酒店，除了感觉作为一家酒店应有的整洁干净外，给我最大的惊喜就是酒店在临近万圣节时对整个酒店的装饰，让客人仿佛感觉不是入住酒店，而是来参加一个万圣节Party。 酒店大厅正中的南瓜池 各种万圣节的装饰和道具 就连楼层也有南瓜装饰 我们预定了一个家庭房，房内空间不是特别大。酒店提供个upgrade的option，但想了想这里高昂的物价，还是省了吧。 最早以为丹麦人很喜欢苏格兰人，后来和本地人聊天才知道主要原因是在早期很多苏格兰人移民到了丹麦，自然也就有了当地的苏格兰人社区和酒吧。超市里也有很多苏格兰黄油饼干卖。 在酒店稍作休整后就来到市政厅广场。广场距今已有800多年历史，是哥本哈根最热闹的地方。市政厅广场的建筑体现了传统的丹麦建筑风格和意大利文艺复兴风格的融合。略有点遗憾的是正赶上市政厅广场这里修建地铁， 因此这里也成了施工现场， 因此无法看到市政厅广场原貌。 在市政厅广场有一些雕像。所谓靠海吃海，就连这些雕像一看都是水里的。。。 在广场的一角就是丹麦的国宝级人物安徒生的铜像Hans Christian Andersen Statue。据说安徒生未了的心愿就是想去一次游乐场，而如今他可以一直遥看对街的TIVOLI乐园，听着孩子们的欢声笑语。也算了却了他的这番心愿。 非常感谢阅读，欢迎Follow, resteem和upvote @aafeng 激励我创作更多更好的内容。","link":"/day-1-the-square-hotel/"},{"title":"每天进步一点点-在React中使用Chart.js","text":"最近尝试开始使用React，发现真的非常好用。这次尝试了在一个单一的页面中使用React+Chart.js来生成基本的报表。这里并没有创建一个完整的React项目。其原因在于，在现有的一个基于Java(后端)+JQuery(前端)的项目中只需要添加一个页面，只在该页面中使用React。下面把步骤记录一下： 创建HTML页面首先创建一个非常简单的HTML页面，但需要引用相关的js库，比如react, react-dom, babel, chart.js等 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Statistics&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/react@16/umd/react.development.js&quot; crossorigin&gt;&lt;/script&gt; &lt;script src=&quot;https://unpkg.com/react-dom@16/umd/react-dom.development.js&quot; crossorigin&gt;&lt;/script&gt; &lt;script src=&quot;https://unpkg.com/babel-standalone@6/babel.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id = &quot;my_statistics&quot;&gt; &lt;/div&gt; &lt;script type=&quot;text/jsx&quot; src=&quot;statistics.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 在Javascript中使用React和Chart.js接下来需要定义一个组件，比如叫做：BarGraph 1234567891011121314151617181920212223242526272829303132class BarGraph extends React.Component { chartRef = React.createRef(); componentDidMount() { const myChartRef = this.chartRef.current.getContext(&quot;2d&quot;); new Chart(myChartRef, { type: &quot;bar&quot;, data: { labels: [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;], datasets: [ { label: &quot;Sales&quot;, data: [61, 134, 83, 77, 49, 61, 90, 33, 54, 94, 93, 62], } ] }, options: { } }); } render() { return ( &lt;div&gt; &lt;canvas id=&quot;myChart&quot; ref={this.chartRef} /&gt; &lt;/div&gt; ) }} 接下来，需要引用这个组件 12345'use strict';const e = React.createElement;const domContainer = document.querySelector('#my_statistics');ReactDOM.render(e(BarGraph), domContainer); 至此，就能看到如下效果了： 但需要注意的是：1）在测试这个页面的时候，需要将其放置在web服务器的目录下通过http的方式来访问。2）这里使用固定的数据来画图，但在真正使用时一般都是通过对API的调用动态获取数据的。","link":"/react-chart-js/"},{"title":"The beautiful town Llandudno (英格兰美丽海边小镇Llandudno)","text":"Photo was taken by @aafeng in Great Orme, Llandudno照片有 @aafeng 于2017年8月21日拍摄于Llandudno欧姆山上 We went to Snowdonia for your family holiday and stayed in Llandudno for three nights. Llandudno was a very beautiful and one of most famous coastal town in Britain. The Royal family and lots of celebrities have been here. 去威尔士Snowdonia国家公园度假时，在Llandudno住了三天。感觉这个小镇非常漂亮，事先没有意识到，后来Google了一下才知道Llandudno竟然这么有名。它是艾丽丝漫游仙境中爱丽丝的原型曾经住过的城堡，也是英国传统的度假圣地，英国和欧洲很多皇室成员都曾经来这里渡过假。很多世界名人，比如：披头士乐队，达尔文，丘吉尔等都曾经到过这里。这里和大家分享一下小镇美景。 We stayed in The Grafton, which has achived 9.6 in customer reivews in booking.com. 我们住在The Grafton这家酒店。酒店老板是一对Couple，人非常好，有什么旅游相关的问题都会耐心解答。酒店在booking.com上的客户评分非常高，300多条点评，分数高达9.6。 The street is full of hotels酒店所在街道可以说是酒店一条街，街边房子觉得大多数都是酒店： We have a couple room and a twin room这是我们订的房间，有一间双人床房，一个twin-room： It’s very nice and cosy inside.酒店内部也很温馨： The host told us that we can see starts while lying down at night老板娘说晚上睡觉时可以透过这个天窗看星星： The hotel is very friendly and pay attention to small things, here are juice for kids知道有孩子入住，很体贴的给准备了果汁： The town is a bit like a tropical town, but the temperature reminds us we are still in the UK!两个宝贝兴奋地在床上又蹦又跳，女儿表示她很喜欢这个家庭套房。这座小城的感觉有些像欧洲国家风格，尤其是街边的棕榈树让人似乎置身热带岛屿，但凉飕飕的温度又在提醒你还在英国。 We had a walk along the beach在酒店稍作休息，一家人沿着海边散步到今晚预订好的餐馆。出门后正好雨过天晴，天空还出现了一道彩虹！ Kids are very exciting吹着海风，听着海鸥的鸣叫，看着孩子们追逐嬉戏打闹，真的好惬意！ Somebody has put stones in a nice pattern还有人在海边用石子摆了这个漂亮的图案，赞一个！ Pier这是码头： We drove up the great orme, here is the toll在房东的推荐下开车上欧姆山欣赏一下山下分光。交了3镑后可以开车上山，这是收费站： beautiful views:沿途美景： We saw this super cool SUV偶遇的超酷越野车： We had our dinner in the tops restaurant晚餐在Tops这家中餐吃的。感觉他家的老板应该是香港人，粤菜做的不错 Ducks in plum sauce这是服务员推荐的烧鸭 seamed cod我们点的清蒸鳕鱼 Shaomai给孩子们要的烧卖 Noddles with veg and prawn炒面很实在，有不少虾仁，里面的菜也很多 Sichuan chicken老婆喜欢吃辣的，点了一个四川鸡，嗯，没错，就是叫四川鸡，不是辣子鸡丁之类的名字。感觉怪怪的，其实味道也还OK，但和媳妇心心念的川菜差了十万八千里。但好处就是量很大，里面的菜也很多，我还是很喜欢的。","link":"/the-beautiful-town-llandudno-llandudno/"},{"title":"Part 6 - Build Steem blockchain application with Vue.js - input forms and handling REST API calls","text":"RepositoryVue.js: https://github.com/vuejs/vue What Will I Learn? How to implement input form in Vue.js How to handle REST API calls in Vue.js Requirements A Node.js environment (Ubuntu 18 + Node.js is used in this tutorial) Basic HTML/CSS/Javascript knowledge DifficultyBasic level Tutorial contentsIn last tutorial, passing information between components, state management in Vuex, and vuex-persist were discussed. In this tutorial, various aspects to implement an input form in Vue.js will be discussed. In addition, how to handle REST API calls in Vue.js will be demonstrated. Implement input forms in Vue.jsIn this section, a new form to post content to Steem blockchain will be added and the underlying features, e.g. data binding, validation check and event handling will be implemented in the Vue.js way. Add basic HTML formFirst, add a new component, e.g. components/NewPost.vue. Within this component, add the following into the “template” section: &lt;template&gt; &lt;div class=&quot;post_form&quot;&gt; &lt;h4&gt;New post&lt;/h4&gt; &lt;div class=&quot;row post_field&quot;&gt; &lt;div class=&quot;col-sm-3 col-xs-12&quot;&gt; Username &lt;/div&gt; &lt;div class=&quot;col-sm-9 col-xs-12&quot;&gt; **Username** &lt;/div&gt; &lt;/div&gt; &lt;br/&gt; &lt;div class=&quot;row post_field&quot;&gt; &lt;div class=&quot;col-sm-3 col-xs-12&quot;&gt; Posting key &lt;/div&gt; &lt;div class=&quot;col-sm-9 col-xs-12&quot;&gt; &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;postingKey&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;br/&gt; &lt;div class=&quot;row post_field&quot;&gt; &lt;div class=&quot;col-sm-3 col-xs-12&quot;&gt; Title &lt;/div&gt; &lt;div class=&quot;col-sm-9 col-xs-12&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;postTitle&quot; placeholder=&quot;Enter post title&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;br/&gt; &lt;div class=&quot;row post_field&quot;&gt; &lt;div class=&quot;col-sm-3 col-xs-12&quot;&gt; Content &lt;/div&gt; &lt;div class=&quot;col-sm-9 col-xs-12&quot;&gt; &lt;textarea class=&quot;form-control&quot; id=&quot;postContent&quot; row=&quot;10&quot;&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;/div&gt; &lt;br/&gt; &lt;div class=&quot;row post_field&quot;&gt; &lt;div class=&quot;col-sm-3 col-xs-12&quot;&gt; Category &lt;/div&gt; &lt;div class=&quot;col-sm-9 col-xs-12&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;category&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;br/&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-sm-12 col-xs-12&quot;&gt; &lt;button&gt;Submit&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;br/&gt; &lt;/div&gt; &lt;/template&gt; The form should look like: Add data attributes and link them to HTML elementsusername As discussed in previous tutorials, username is defined/managed in ‘User’ mixin, so ‘User’ mixin needs to be imported into this component, e.g. import User from &apos;./mixins/user&apos; And the component should be defined like: export default { name: &apos;NewPost&apos;, mixins: [User] ...... } So the username part in the template can be changed to: &lt;div class=&quot;col-sm-9 col-xs-12&quot;&gt; {{username}} &lt;/div&gt; Other data attributes and link them to HTML elements To match with the fields defined in the template, the following data attributes need to be defined in the component code: data () { return { posting_key: &apos;&apos;, title: &apos;&apos;, content: &apos;&apos;, category: &apos;&apos; } }, In the above code, ‘posting_key’, ‘title’, ‘content’, and ‘category’ link to the HTML tags in the template. By using ‘v-model’, the HTML tags in the template can be refactored to: &lt;input v-model=&quot;posting_key&quot; type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;postingKey&quot;&gt; ...... &lt;input v-model=&quot;title&quot; type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;postTitle&quot; placeholder=&quot;Enter post title&quot;&gt; ...... &lt;textarea v-model=&quot;content&quot; class=&quot;form-control&quot; id=&quot;postContent&quot; row=&quot;10&quot;&gt;&lt;/textarea&gt; ...... &lt;input v-model=&quot;category&quot; type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;category&quot;&gt; The above code means, as long as user entered data in the HTML fields, the associated data attributes will be updated automatically. Data validationTo validate the form inputs, a data attribute needs to be added first, e.g. data () { return { ...... errors: [] } }, Then, ‘v-on:click’ can be used to register an event handler, e.g. “submit” function to handle the click events: &lt;button v-on:click=&quot;submit&quot;&gt;Submit&lt;/button&gt; The implementation of ‘submit’ method is as shown below: methods: { submit () { let valid = true if (!this.username) { this.errors.push(&apos;Username required.&apos;) valid = false } if (!this.posting_key) { this.errors.push(&apos;Posting key required.&apos;) valid = false } if (!this.title) { this.errors.push(&apos;Title required.&apos;) valid = false } if (!this.content) { this.errors.push(&apos;Content required.&apos;) valid = false } if (valid === false) { return } } } From the code above, whenever an invalid input value is found, an error message is pushed into the array. Now it is the time to display the error message. Add the following code into the template: &lt;div v-if=&quot;errors.length&quot; class=&quot;row error_field&quot;&gt; &lt;div class=&quot;col-sm-12 col-xs-12&quot;&gt; &lt;b&gt;Please correct the following error(s):&lt;/b&gt; &lt;ul&gt; &lt;li v-for=&quot;error in errors&quot; :key=&quot;error&quot;&gt;{{ error }}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; The above code checks if there is any messages in the data attribute “errors”. If any messages exist, use ‘v-for’ to show all messages in an unordered list. If any required fields are missing, the page should look like: This example demonstrate one of the fundamental feature of Vue.js: developers do not need to update DOM - they just need to manipulate the data. Post to Steem blockchainOnce the data validation is passed, it is the time to post to Steem blockchain. For demo purpose, this application only provides very basic functionalities, e.g. only main category is supported. More fancy features can be added later. The following code can be added to post an article to Steem blockchain: steem.broadcast.comment( this.posting_key, &apos;&apos;, this.category, this.username, new Date().toISOString().replace(/[^a-zA-Z0-9]+/g, &apos;&apos;).toLowerCase(), this.title, this.content, { tags: [this.category], app: &apos;utopian-test/aafeng&apos; }, function (err, result) { if (err) { alert(&apos;Failure! &apos; + err) } else { alert(&apos;Success!&apos;) } } ) Once the post is published, a popup window confirms that the post operation has been successfully, as shown below: Steemd.com can be used to check if the post properties have been submitted properly, e.g. for the demo post: Add ‘New post’ button in Posts componentA ‘New post’ button needs to be added to navigate users to the new post form. To do so, first add the button to template part of components/Posts.vue: &lt;div class=&quot;row post_new&quot;&gt; &lt;button v-on:click=&quot;newPost&quot;&gt;New post&lt;/button&gt; &lt;/div&gt; In the newPost method, the route needs to be updated, as shown in the following code: newPost () { // Update Vue.js route this.$router.push({ path: &apos;/@&apos; + this.username + &apos;/new_post&apos; }) } By this way, users are able to use the ‘NewPost’ component: Handling REST APIs with axiosNowadays, it is very common to have a pure client side application working with RESTful APIs. How to use axios to make calls to REST APIs, and how to handle responses in Vue.js will be discussed in this section. Poloniex’s price ticker API will be used for demonstration. Install axiosThe installation of axios is very easy, just run this command: npm install --save axios Create SteemPrice componentAdd a new file, e.g. components/SteemPrice.vue which will make REST API calls via axios and display current STEEM/SBD price pairs within the component. &lt;script&gt; let axios = require(&apos;axios&apos;) export default { name: &apos;SteemPrice&apos;, data () { return { info: &apos;&apos; } } } &lt;/script&gt; In the above code, a data attribute, e.g. ‘info’ is used to store the price pairs. Send request to poloniex REST APIPoloniex REST API will be used in the demo application. The poloniex REST API endpoint is: https://poloniex.com/public?command=returnTicker. Open a browser and enter the above URL in the address bar then hit ‘Enter’, the result will be presented with JSON format: While the SteemPrice component is loaded, some additional work needs to be done to make the REST API call and parse the returned JSON data and store it in the data attribute ‘info’. The code is shown as follows: mounted () { let priceComponent = this // Make poloniex REST API call axios.get(&apos;https://poloniex.com/public?command=returnTicker&apos;) .then(function (response) { for (let p in response[&apos;data&apos;]) { // only store STEEM/SBD price pairs if (p.endsWith(&apos;_STEEM&apos;) || p.endsWith(&apos;_SBD&apos;)) { priceComponent.prices = priceComponent.prices + p + &apos;: &apos; + response[&apos;data&apos;][p][&apos;last&apos;] + &apos;/&apos; } } }) .catch(function (error) { console.log(error) }) } In this application, only ‘STEEM’ and ‘SBD’ price pairs will be displayed, so some processing logic has been added into the above code. To display the returned price pairs, add the following code to the template: &lt;div class=&quot;row&quot; v-for=&quot;p in prices.split(&apos;/&apos;)&quot; :key=&quot;p&quot;&gt; &lt;div class=&quot;col-sm-12&quot;&gt; {{p}} &lt;/div&gt; &lt;/div&gt; The page looks like: To make other REST API calls, please read axios documentation for more information. CurriculumThis is the 6th tutorial. Previous tutorialsPart 1 - Build Steem blockchain application with Vue.js: installation and first demoPart 2 - Build Steem blockchain application with Vue.js: components, computed properties and build/deployment processPart 3 - Build Steem blockchain application with Vue.js: using Bootstrap, nav component, mixins, and first iteration of Posts componentPart 4 - Build Steem blockchain application with Vue.js: dynamic route, and event handlingPart 5 - Build Steem blockchain application with Vue.js: Passing data among components, state management via Vuex, and data persistent in Vue.js Proof of Work DoneSource code for this tutorial: https://github.com/aa-feng/VuejsTutorial/tree/t06 Master branch of the source code (will be updated with ongoing tutorials): https://github.com/aa-feng/VuejsTutorial The live demo of latest iteration: https://vuetutorials.aafeng.top","link":"/part-6-build-steem-blockchain-application-with-vue-js-input-forms-and-handling-rest-api-calls/"},{"title":"Part 7 - Build Steem blockchain application with Vue.js - element-ui, Vue.js devtools and debugging","text":"RepositoryVue.js: https://github.com/vuejs/vue What Will I Learn? Use element-ui in Vue.js application Use Vue.js devtools Debug Vue.js application Requirements A Node.js environment (Ubuntu 18 + Node.js is used in this tutorial) Basic HTML/CSS/Javascript knowledge DifficultyBasic level Tutorial contentsIn last tutorial, how to implement an input form and make calls to REST APIs in Vue.js were discussed. In this tutorial, element-ui will be used to build Vue.js UI. Also, a browser plugin called Vue.js devtools will be introduced to help developers’ development and debugging process. Last, a demonstration is given to show how to debug Vue.js components. Use element-ui in Vue.jsAll HTML tags can be used in Vue.js templates, but building a complex UI from scratch is not a good idea as there are plenty of well tested frameworks can be used to speed up the development process. There is no need to reinvent the wheel. In this section, a popular Vue.js component called ‘element-ui’ will be introduced. As a demonstration, Comments component will be implemented by using element-ui. By the end of this section, the application will be able to show user’s comments as shown below: Online demo: https://vuetutorials.aafeng.top/@aafeng/comments Install element-uiFirst, install element-ui package by running the following command within the project folder: npm install element-ui --save Import element-ui in main.jsOpen main.js and add the import statement to declare that ‘element-ui’ will be used in the project: import elementUI from &apos;element-ui&apos; Also, declare that ‘elementUI’ will be used by Vue components: Vue.use(elementUI) A default theme, e.g. ‘theme-chalk’ will be used in the project: import &apos;element-ui/lib/theme-chalk/index.css&apos; Use ‘element-ui’ in Comments componentTo use ‘element-ui’ in the template of Comments component, add the following data attribute in the component code, e.g. in components/Comments.vue: data () { return { comments: [] // user&apos;s comments } } Also, add ‘user’ mixin since its attribute, e.g. username will be used later: import User from &apos;./mixins/user&apos; // use user mixin in Posts component And declare that ‘user’ mixin will be used: mixins: [User] Load data from Steem blockchainBefore using ‘element-ui’ to build the template, a call to Steem blockchain needs to be made first to retrieve user’s comments. First declare that Steem JS will be used: let steem = require(&apos;steem&apos;) Add the following ‘created’ method to Comments component: created () { // Store current component (Comments) to commentsComponent let commentsComponent = this // Make call to Steem blockchain to load user’s comments steem.api.getDiscussionsByComments({&apos;start_author&apos;: this.username, &apos;limit&apos;: this.$store.getters.default_number_of_posts}, function (err, result) { if (err) { console.log(err.stack) } // save user&apos;s comments to &apos;comments&apos; attribute commentsComponent.comments = result }) } In the above code, as a demonstration, only a fixed number of comments will be retrieved and saved into comments attribute. Similarly to Posts component, an infinite loading feature can be implemented here as well. Now, it is ready to use element-ui components in the template. In this case, ‘el-table’ will be used to display user’s comments: &lt;el-table v-loading=&quot;loading2&quot; element-loading-text=&quot;Loading&quot; element-loading-spinner=&quot;el-icon-loading&quot; element-loading-background=&quot;rgba(0, 0, 0, 0.8)&quot; empty-text=&quot;No data&quot; :data=&quot;comments&quot; style=&quot;width: 100%&quot;&gt; In the above code, apart from setting default attributes for ‘el-table’, ‘:data’ attribute is used to link the ‘el-table’ element with ‘comments’ data attribute. Now it is the time to let ‘el-table’ know what data should be displayed in each column. In here, as a demo, the creation time of the comments, parent author, the post title, and the comment text will be displayed. In addition, the creation time and parent author will be sortable. If more fields needs to be displayed, check Steem JS documentation, or find out all attributes from browser’s development tool. In the last section of this tutorial, how to debug Vue.js will be discussed and Comments component will be used as an example. The code is shown as follows: &lt;el-table-column prop=&quot;created&quot; label=&quot;Date&quot; sortable width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;parent_author&quot; label=&quot;Parent author&quot; sortable width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;root_title&quot; label=&quot;Post&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;body&quot; label=&quot;Comment&quot;&gt; &lt;/el-table-column&gt; From the above code, ‘prop’ property is used to link a column to a particular data attribute returned by Steem JS. So the current application runs like: Vue.js devtoolsIt is the time to introduce Vue.js devtools, which makes developers’ life much easier. Vue.js devtoolsVue.js devtools is available for both Chrome and Firefox browser. The download URLs are: Chrome plugin Firefox Add-on Once installed, run Vue.js application the the development mode. (NB: this tool won’t be available for production mode) Open browser and access Vue.js application. Right click and choose ‘inspect’: Switch to ‘Vue’ tab and the page looks like: Within Vue.js devtool, ‘Components’, ‘Vuex’ and ‘Events’ tabs will be available: Click ‘Profile’ component, data attributes and computed attributes will shown as follows: Click ‘userdata’ under ‘Profile’ component, userdata from user mixin will be shown: A full list of user’s comment attributes can be found by Comments data attribute: As discussed in previous tutorial, a state e.g. ‘default_number_of_posts’ has been stored by using Vuex. In here, the devtool can be a helper to check if the state has been set correctly: A full demonstration of how to use Vue.js devtool plugin is shown in the GIF image: Debugging Vue.js applicationAnother way to debug Vue.js code is to use browsers’ development tool. Like debugging in IDEs, breakpoints can be set to control the execution flow and gives developer a chance to check the current execution states. First open developer tool, Choose ‘Sources’ tab, then scroll down to ‘webpack://‘ and click Comments.vue. Add a breakpoint in line 52, e.g. the line with “if” statement: Reload the page, the JavaScript code will break in the “if” statement, so the Comments component won’t display any data, as shown below: In the developer tool console, some checks can be performed, e.g. check if a correct result is returned after calling Steem API: After debugging, the breakpoints can be easily removed by click this icon: CurriculumThis is the 7th tutorial. Previous tutorialsPart 1 - Build Steem blockchain application with Vue.js: installation and first demoPart 2 - Build Steem blockchain application with Vue.js: components, computed properties and build/deployment processPart 3 - Build Steem blockchain application with Vue.js: using Bootstrap, nav component, mixins, and first iteration of Posts componentPart 4 - Build Steem blockchain application with Vue.js: dynamic route, and event handlingPart 5 - Build Steem blockchain application with Vue.js: Passing data among components, state management via Vuex, and data persistent in Vue.jsPart 6 - Build Steem blockchain application with Vue.js: input forms and handling REST API calls Proof of Work DoneSource code for this tutorial: https://github.com/aa-feng/VuejsTutorial/tree/t07 Master branch of the source code (will be updated with ongoing tutorials): https://github.com/aa-feng/VuejsTutorial The live demo of latest iteration: https://vuetutorials.aafeng.top","link":"/part-7-build-steem-blockchain-application-with-vue-js-element-ui-vue-js-devtools-and-debugging/"}],"tags":[{"name":"未分类","slug":"未分类","link":"/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"}],"categories":[{"name":"未分类","slug":"未分类","link":"/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"}]}