<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aafeng</title>
  <icon>https://www.gravatar.com/avatar/a176a52d9d4ac7d9f90a5204a7d87bcd</icon>
  <subtitle>aafeng&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.aafeng.uk/"/>
  <updated>2020-07-14T21:57:10.731Z</updated>
  <id>https://www.aafeng.uk/</id>
  
  <author>
    <name>aafeng</name>
    <email>aafenguk@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>智能家居时代？</title>
    <link href="https://www.aafeng.uk/smart-home/"/>
    <id>https://www.aafeng.uk/smart-home/</id>
    <published>2020-07-14T21:57:10.731Z</published>
    <updated>2020-07-14T21:57:10.731Z</updated>
    
    <content type="html"><![CDATA[<p>最近由于打算更换家中的热水器，听朋友说他家的热水器是用Google的Nest来控制的。于是考虑，现在真的有必要把家中的电器都连上网，变得智能吗？</p><p><img src="/images/life/smart-home.jpg" alt><br>图源：Pixabay</p><a id="more"></a><p>首先说说今年儿子生日给他买的Google Home Hub。这应该是Google智能产品系列中的入门级产品吧。最初开始使用时，确实感觉非常便利。一旦有什么问题，可以立刻问Google，绝大多数情况下都能立刻得到准确的答案。但儿子似乎对它有些上瘾。每天只要有时间就会一直在Google Home Hub旁边，同时也由早期问各种问题，变成了在Youtube上看各种视频。我们不得不对他的使用时间做出限制。</p><p>目前最为吸引我的是通过语音对灯光的控制。如果可以避免去开关处就能控制灯光，会方便很多。同时，如果外出度假时，还可以远程控制家中的灯光，达到一种主人在家的感觉。这样会更加安全。如果要想实现这样的功能，可以购买智能开关，也可以购买智能灯泡。只不过似乎旧的电路不能支持智能开关，需要重新走线才可以。相对而言，购买智能灯泡就会简单的多。</p><p>接下来是对家中Boiler的控制。我比较看重的是其智能温度控制和远程控制功能。如果在度假的时候，自动把家中的暖气关掉，应该会省不少电/气吧。如果在快要度假回来的时候自动打开暖气，也就不会在度假结束后家中还是冷冰冰的了。要实现这样的功能，可以选择Google Nest，同时在热水器上要配有智能开关才行。</p><p>前一段在朋友家冰箱上看到了一个比较”智能“的功能。冰箱可以根据目前的”库存量“来自动提示主人家中是否缺某种食材。这种功能貌似很有用。但前提是每次购物回来后需要把买入的食材名称，到期日输入冰箱配套的电脑中才可以。看样子这并没有那么智能啊。</p><p>因此，整体感觉现在智能家居似乎还没有到普及的阶段。看样子我只需要买几个智能开关就应该足够了。</p>]]></content>
    
    <summary type="html">
    
      智能家居时代？
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>生活中的仪式感</title>
    <link href="https://www.aafeng.uk/ritual-sense/"/>
    <id>https://www.aafeng.uk/ritual-sense/</id>
    <published>2020-07-13T21:58:56.083Z</published>
    <updated>2020-07-13T21:58:56.083Z</updated>
    
    <content type="html"><![CDATA[<p>最近两个孩子给我上了一课。前一段时间妈妈过生日的当天。孩子们头一天就悄悄的和我说要给妈妈一个惊喜：breadkfast in bed。第二天一大早，两个小家伙就忙碌起来，做了一顿很“丰盛”的早餐：面包，煎蛋，牛油果，蓝莓，配红茶。而且在女儿的坚持下，我们又去花园中摘了几朵野花（家中种的花还没有开）插在瓶中，把他们亲手做的生日卡放在餐盘后面。等到所有东西都摆放整齐后，才把餐盘端到妈妈床边。</p><a id="more"></a> <p>毫无疑问，妈妈非常感动，或者说，通过这种仪式感，这顿很普通的早餐变得很不一样了。我相信以后孩子们长大了，他们仍会记得给妈妈做过的早餐。当然，他们的妈妈更加会记得这暖心的”Breakfast in bed“。</p><p>尼采曾经说过一句话：</p><blockquote><p>每一个不曾起舞的日子，都是对生命的辜负。</p></blockquote><p><img src="/images/life/ritual.jpg" alt><br>图源：Pixabay</p><p>那么，什么是仪式感呢？其实就是使某一天和其他日子不同，或者使某一个时刻和别的时刻不同。其实在生活中，仪式感是无处不在的。</p><p>大自然通过日出和日落给了我们一天开始和结束的仪式感。</p><p>通过举办婚礼，使一对新人和他们的至亲都会永远记住他们结婚的那一天。</p><p>通过参加毕业典礼，让你能够在记忆中珍藏最终毕业的日子。</p><p>母亲节的一束鲜花，生日时的蛋糕，蜡烛，以及许下的愿望，都是一种能够让人铭记的仪式感。</p><p>很多米其林星级餐厅不仅菜的味道做的好，同时摆盘也十分讲究，服务更是非常到位。这就是为什么米其林星级餐厅定价贵的原因：他们可以给众多食客特殊的仪式感。</p><p>其实，仪式感是一种对生活的态度，或者说是一种对生活的重视。一个人的早餐可以是随便糊弄着吃一下，也可以早起半个小时，把早餐摆放的恰到好处，从从容容的享受早餐，心情愉悦的开始新的一天。</p><p>仪式感表示了对彼此的重视和用心程度。如果生活中没有了这些仪式感，生活就会变得索然无味。</p><p>那么，你今天的仪式感从哪里开始呢？烛光晚餐？或是一个简单的拥抱？</p>]]></content>
    
    <summary type="html">
    
      生活中的仪式感
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>病来如山倒，病去如抽丝 - 英国疫情更新</title>
    <link href="https://www.aafeng.uk/covid19-20200711/"/>
    <id>https://www.aafeng.uk/covid19-20200711/</id>
    <published>2020-07-11T22:16:46.166Z</published>
    <updated>2020-07-11T22:16:46.166Z</updated>
    
    <content type="html"><![CDATA[<p>英国近期疫情有所好转，但正所谓病来如山倒，病去如抽丝。在几个月前疫情最严重的时候，由于封城的政策，很多企业被迫暂停营业。在过去的几个月中，很多企业都没有撑下来。现在政府斥资300亿英镑，出台了一系列的政策来刺激经济，降低失业率。</p><p><img src="/images/life/covid19/20200711-1.jpg" alt></p><a id="more"></a><p>首先是针对房产市场的政策。为了刺激目前低迷的英国房地产，英国政府将土地印花税的起征点由12.5万英镑调整到了50万英镑。呵呵，如果考虑在英国投资房产的化，现在这个机会真的不错。</p><p>其次是对娱乐业和旅游业的政策扶持。首先开放了户外游泳池，足球，篮球等运动场所。同时恢复了各种户外的音乐表演。但是对这条政策，个人感觉有些不靠谱，游泳池这种公共场所，如果有一人感染，估计整个泳池中的人都会遭殃。</p><p><img src="/images/life/covid19/20200711-2.jpg" alt></p><p>再有就是酒吧，餐厅的重新开放。甚至为了刺激消费，在周一至周三，所有在餐厅中就餐的费用会打对折，每人最高折10英镑。今天是近几个月来第一次去吃麦当劳。整个过程感觉还是很安全的。首先只限外卖，同时所有麦当劳员工都是口罩，手套全副武装，所有顾客进门时要求必须用消毒液消毒，严格保持两米社交距离。只支持用银行卡付款。</p><p><img src="/images/life/covid19/20200711-3.jpg" alt></p><p>最近英国首相带头，倡议在所有公共场所佩戴口罩。在公交系统上如果不戴口罩，还有可能会被罚款。</p><p>整体感觉，这一系列的政策还是比较靠谱的。整个英国经济正在重启中，人们在慢慢适应和病毒并存。</p>]]></content>
    
    <summary type="html">
    
      病来如山倒，病去如抽丝 - 英国疫情更新
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>扩建工程记录</title>
    <link href="https://www.aafeng.uk/house-extension-log/"/>
    <id>https://www.aafeng.uk/house-extension-log/</id>
    <published>2020-07-11T15:34:12.621Z</published>
    <updated>2020-07-11T15:34:12.621Z</updated>
    
    <content type="html"><![CDATA[<p>最近家中进行扩建，主要是往花园中新建一间房，和现有厨房，客厅打通，连成一体。 下面把整个过程记录一下。</p><a id="more"></a><h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><p>房屋扩建从6月8日开始，第一周主要的打了地基，灌浇了混凝土，把影响地基的树墙砍掉了一部分。</p><p>扩建前的样子：<br><img src="/images/life/house-extension/1.jpg" alt></p><p>开始动工了：<br><img src="/images/life/house-extension/2.jpg" alt></p><p>第一周成果：<br><img src="/images/life/house-extension/3.jpg" alt></p><h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><p>进一步完成地基部分，把管道重新铺了一下：</p><p><img src="/images/life/house-extension/w2-1.jpg" alt></p><p>开始砌砖，准备保暖层：</p><p><img src="/images/life/house-extension/w2-2.jpg" alt></p><p>在地基上铺满石块，整个扩建出来的区域可以确定了：</p><p><img src="/images/life/house-extension/w2-3.jpg" alt></p><h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><p>应该是在做隔湿层，黑塑料布下面，石块上面的是很厚的一层泡沫塑料。</p><p><img src="/images/life/house-extension/w3-1.jpg" alt></p><p>接下来在泡沫塑料上浇筑了一层混凝土。至此，地面高度已经和现在房子的裸地基一样了。</p><p>同时外墙已经增高了不少，一侧已经需要脚手架才能干活了：</p><p><img src="/images/life/house-extension/w3-2.jpg" alt></p><h2 id="第四周"><a href="#第四周" class="headerlink" title="第四周"></a>第四周</h2><p>这周下雨两天，所以只干了三天。主要就是把两边的墙垒高，在两层墙之间假装保暖层。</p><p><img src="/images/life/house-extension/w4.jpg" alt></p><h2 id="第五周"><a href="#第五周" class="headerlink" title="第五周"></a>第五周</h2><p>把门框和窗框上的钢梁架好：</p><p><img src="/images/life/house-extension/w5-1.jpg" alt></p><p>开始搭建房梁：</p><p><img src="/images/life/house-extension/w5-2.jpg" alt></p><p><img src="/images/life/house-extension/w5-3.jpg" alt></p><p>铺设很薄的一层防水层之后，开始铺瓦了：</p><p><img src="/images/life/house-extension/w5-4.jpg" alt></p><h2 id="第六周"><a href="#第六周" class="headerlink" title="第六周"></a>第六周</h2><p>这周Builder只工作一天，因为他们还有一个未完成的工程，需要消失一周。</p>]]></content>
    
    <summary type="html">
    
      扩建工程记录
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>英国的学徒制apprenticeship</title>
    <link href="https://www.aafeng.uk/apprenticeship/"/>
    <id>https://www.aafeng.uk/apprenticeship/</id>
    <published>2020-07-11T15:21:49.568Z</published>
    <updated>2020-07-11T15:21:49.568Z</updated>
    
    <content type="html"><![CDATA[<p>最近在家中干活的建筑工人是一个很小的团队，也是英国这里众多建筑工人普遍采用的一个经典组合：一位经验丰富的老师傅带着两位学徒：一个是有些经验的小伙子，另一个学徒则是只有16岁的少年。</p><p><img src="/images/life/apprenticeship.jpg" alt></p><a id="more"></a><p>这三个人的分工是这样的。老师傅所有的活都会参与。尤其是一些关键步骤，比如：房子的边边角角，一般都是由老师傅来亲手操作。同时，老师傅还兼任项目经理的角色，负责和水暖工，电工等的沟通，和我们协商建房细节，同时还负责采购建材等。另外一个有些经验的小伙子除了一些最关键的部分之外，几乎可以干所有的活。而那位16岁的少年则只能充当小工的角色，只是打打下手。</p><p>其实学徒制在英国，甚至欧洲各国的历史都非常悠久。在英国，学徒制源于中世纪，后来经过立法规定了学徒的工作条件，工作环境，学徒休息时间等，保障了学徒的基本权益。就这样一直发展到19世纪末期，英国的学徒制由早期的艺术工匠发展到了各种行业，比如水暖工，电工，建筑工人，甚至造船师和各种其他工程师。</p><p>自从1997年开始，英国的学徒制慢慢走向了所谓的现代学徒制。参与学习的学徒不仅需要跟着有经验的师傅学习实践技能，同时还需要学习理论知识。这样通过学徒制学习的各种学徒们的整体水平不断提高，也成为很多高中毕业生的选择。</p><p>很多英国的高中生在毕业后并不是很想继续读大学，而是选择通过这种学徒制培训直接边工作边学习。他们做出这种选择的原因也比较现实。毕竟，很多工种，比如水暖工，电工的收入非常高，通过学徒制在这些行业就业，照样能够获得不错的收入，享受生活，为什么还要去读大学呢？</p><p>英国的学徒制有点类似于国内的职业教育，但又不尽相同。在英国，主导学徒制的不是政府和学校，而是各家企业。很多大型企业都提供各种学徒制的岗位，比如：奔驰，雀巢，BBC，Sky，空客等在英国甚至欧洲都提供学徒制的工作机会。</p><p>其实，客观的讲，这种学徒制还是有其优势的，毕竟，有着经验丰富的老师傅在旁边指点，还能能够很快入行的。尤其对于那些实践性很强的行业，这些经验往往比书本上学到的知识更难得。</p>]]></content>
    
    <summary type="html">
    
      英国的学徒制apprenticeship
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>少儿Scratch编程</title>
    <link href="https://www.aafeng.uk/scratch/"/>
    <id>https://www.aafeng.uk/scratch/</id>
    <published>2020-07-09T19:55:56.745Z</published>
    <updated>2020-07-09T19:55:56.745Z</updated>
    
    <content type="html"><![CDATA[<p>前一段时间开始教两个孩子学习Python编程。但在学习的过程中，感觉老大学的还不错，但老二似乎年龄有些小，5岁学Python确实有些难为她了。搞得每次上课的时候只能按照老大的进度来，女儿彻底成了打酱油的了。想了想，为了不浇灭孩子学习编程的热情，决定再为女儿开启一门课程，Scratch编程。</p><p><img src="/images/kids/scratch.png" alt><br><a id="more"></a></p><p>当初考虑学习Python的原因很明确：反正孩子迟早要学的，还不如一步到位。但现在意识到这个问题。学习是一个循序渐进的过程，路要一步一步的走，饭要一口一口的吃。先通过Scratch建立起基本的编程概念来也不错。等到女儿年龄再大些，学Python的时候就会事半功倍。</p><p>最早对Scratch有些偏见，感觉Scratch有些幼稚，只适合低龄儿童学，但真正带着孩子学习后，才发现，Scratch如今这么流行，还是有其特点的。它不仅适合孩子学习编程，而且适合成年人设计一些简单的游戏。单位今年的Staff Festival中有一项活动就是使用Scratch编写一个游戏。</p><p>从我的角度来看，Scratch编程有以下优点：</p><ul><li>统一的编程环境。不像其他语言，需要安装配置软件运行环境，Scratch完全可以在网页中进行。只要有浏览器，能上网，就能编程。</li><li>直观易懂。由于Scratch完全通过图形化的各种积木来拼装程序，无需了解编程语句，非常简洁易懂，适合小朋友。</li><li>内置的各种角色，背景，道具等非常吸引眼球。尤其是小朋友们，把Scratch当成了一种游戏，在游戏中就掌握了编程的概念。</li></ul><p>女儿自从开始接触Scratch之后，非常感兴趣。每天都追着我问是否可以上编程课。同时还和她的好朋友们分享她编写的小游戏。其实就算对于年龄大一些的小朋友，照样可以尝试用Scratch编写一些更为复杂些的游戏。</p>]]></content>
    
    <summary type="html">
    
      少儿Scratch编程
    
    </summary>
    
      <category term="育儿" scheme="https://www.aafeng.uk/categories/%E8%82%B2%E5%84%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>试用Gitpod在线IDE</title>
    <link href="https://www.aafeng.uk/gitpod/"/>
    <id>https://www.aafeng.uk/gitpod/</id>
    <published>2020-07-09T11:04:35.467Z</published>
    <updated>2020-07-09T11:04:35.467Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Github的时候一直感觉其在线代码编辑功能有所欠缺。要使用Github上的源代码，只能clone到本地，用本地IDE编辑后再提交/推送到Github。这就导致我在写代码的时候严重依赖于自己的本地开发环境。在越来越多应用程序网页化的趋势下，有没有一个这样的APP，可以在网页中同时编辑代码，调试，提交呢？答案是肯定的，Gitpod就是这样一个工具。</p><p><img src="/images/technology/gitpod/gitpod.png" alt></p><a id="more"></a><p>Gitpod可以很智能的根据你提供的源码仓库地址来创建Docker镜像并启动相应的环境。这些运行环境是在基于Google云架构的多个Kubernetes集群中运行的。如果需要的化，你也可以自定义docker镜像。一般只需要等待几秒钟的时间，Gitpod就会把在线开发环境创建好，包括云端的Linux容器和在线IDE。</p><p>Gitpod的智能化还体现在，它可以根据URL来启动Gitpod工作区。比如：从GH issue启动Gitpod将会自动创建分支，从PR启动Gitpod则会自动切换为Code review模式。</p><p>Gitpod对开源软件完全免费，但有每月50个小时的限制。不过这对于自己业余时间的项目是足够用了。如果全职工作想用这个平台，有多种付费选项：</p><p><img src="/images/technology/gitpod/gitpod2.png" alt></p><p>下面看一看如何使用gitpod。</p><p>首先需要通过OAuth在Github授权Gitpod访问你的Github账号。</p><p>对于任何一个Github项目，只需要在前面添加：</p><pre><code>https://gitpod.io#</code></pre><p>就可以在gitpod中打开该项目。比如：在gitpod打开我Fork过来的HiveAccountRecovery工具:</p><pre><code>https://gitpod.io/#https://github.com/aafenguk/HiveAccountRecovery</code></pre><p>如果把Chrome全屏的话，界面和VS Code非常相似：</p><p><img src="/images/technology/gitpod/gitpod3.png" alt></p><p>如果安装了Chrome扩展，当你访问Github项目时，就会看到对应的Gitpod按钮：</p><p><img src="/images/technology/gitpod/gitpod4.png" alt></p><p>如果想要在浏览器中看看这个基于HTML/JS页面的效果，可以在终端窗口运行：</p><pre><code>gp preview file://$GITPOD_REPO_ROOT/index.html</code></pre><p>或者在命令行窗口运行如下命令，则会热加载代码：</p><pre><code>npx browser-sync start -s -w</code></pre><p>也可以创建.gitpod.yml文件，并加入上面的命令：</p><pre><code>tasks:  - init: &apos;echo &quot;TODO: Replace with init/build command&quot;&apos;    command: &apos;npx browser-sync start -s -w&apos;</code></pre><p>这样，在每次加载Gitpod的时候，就会自动运行这个应用。</p><p>这里只是介绍了如何配置/使用一个基于HTML/JS的简单项目。如果需要更多的定制化配置，可以参考Gitpod建议的开发步骤：</p><p><img src="/images/technology/gitpod/gitpod5.png" alt></p>]]></content>
    
    <summary type="html">
    
      试用Gitpod在线IDE
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具" scheme="https://www.aafeng.uk/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>盖房和编码真的是同一工种啊</title>
    <link href="https://www.aafeng.uk/coding-vs-building/"/>
    <id>https://www.aafeng.uk/coding-vs-building/</id>
    <published>2020-07-08T21:46:33.529Z</published>
    <updated>2020-07-08T21:46:33.529Z</updated>
    
    <content type="html"><![CDATA[<p>最近尽管一直独自在家工作，但丝毫不感觉寂寞。因为家中房屋扩建的原因，室外的建筑工人在一砖一瓦的搭建房屋，室内的我在一行一行的堆代码。这是一种很奇妙的感觉。让我不禁在想，这分明就是同一个工种啊！</p><p><img src="/images/life/builder2.jpg" alt><br>图源：Pixabay</p><a id="more"></a><p>先来说说房屋扩建工程。由于现有房屋不能满足我的需求，因此在现有基础上需要扩建。这不就像极了软件系统中添加的新功能吗？当一个软件系统无法满足用户的某些需求的时候，程序员需要做的就是在现有软件中添加新的功能，再和现有软件有机的结合在一起。两个工种完美匹配！</p><p>在扩建工程初期，需要打下坚实的地基。建筑工人花费了好几天的时间，用挖掘机掘地三尺，然后浇筑了水泥。同时还有防潮层，第二层的混凝土等。这样做的目的就是为后续的房屋搭建一个坚实的基础。在软件开发的工程中，也是如此啊！在真正的写代码之前，对系统架构的设计，底层存储层，数据通讯协议，采用的软件框架等等，都要先于软件的实现。这正是一个软件系统的地基啊。再次匹配！</p><p>在施工的过程中，建筑工人在一砖一瓦的搭建房屋，在搭建的过程中，他们会不断的用水平尺等工具检验自己搭建的一砖一瓦是否正确无误。而在软件开发的过程中，我们不也是这样吗？在写完代码之后，我们需要进行测试以保证代码的正确性。完美匹配！</p><p>在修建房屋的工程中，工头需要不断的和我们沟通，比如：门窗的尺寸和位置如何选择，暖气的位置，选择地板的种类等等。而在软件开发的过程中，我们同样需要和客户不断沟通，以避免误解了用户需求。匹配！</p><p>在房屋最终交付后，如果出现任何的问题，我们都需要和施工方沟通，协商解决。而在软件开发过程中，同样存在维护阶段。在该阶段中，用户如果发现问题，需要和程序员沟通，协商解决。匹配！</p><p>鉴定完毕：程序员真的和建筑工人是一个工种！</p>]]></content>
    
    <summary type="html">
    
      盖房和编码真的是同一工种啊
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>在英国没有酒吧的日子真的不能忍，终于酒吧开张了，然后。。。</title>
    <link href="https://www.aafeng.uk/pub-reopening/"/>
    <id>https://www.aafeng.uk/pub-reopening/</id>
    <published>2020-07-08T21:13:44.618Z</published>
    <updated>2020-07-08T21:13:44.618Z</updated>
    
    <content type="html"><![CDATA[<p>上个周六，是英国举国欢腾的日子，因为众多酒吧，餐厅重新开业了！宅家多日的人们终于可以走出家门，重新造访酒吧。于是各个酒吧人满为患。尽管酒吧门口都提示注意社交距离，开始时人们也还比较注意，但喝嗨了之后就不不记得社交距离这回事了。</p><p><img src="/images/life/pub.jpg" alt><br>图源：Pixabay</p><a id="more"></a><p>可以说是乐极生悲吧，转过来的这周新冠人数暴增，很多去酒吧的人都被检测出新冠。于是多家酒吧被迫再次关闭。</p><p>酒吧可以说是英国文化的精髓之一，几乎人人都喜欢酒吧，这就像中国人的聚会吃饭一样，没有了酒吧似乎没法活。我的英国同事们也是如此，新同事来了，有同事离职了，圣诞了，过生日了，周五了，等等各种场合都要去酒吧喝上几杯。</p><p>和同事们去酒吧次数多了之后，也慢慢了解他们的习惯了。一般要一起出去吃饭的话，肯定在饭前先找上一家酒吧去喝上几杯开开胃，在正式吃饭的时候酒照样不能少。饭后还会再选一家酒吧继续喝。如果没有喝尽兴的话，还有可能会换酒吧。更有甚者，在和大家见面之前，先去超市买些酒自己喝上一些，预热一下，毕竟超市的酒要比酒吧的便宜不少。。。</p><p>之所以这么喜欢到酒吧喝酒，主要是因为酒吧是一种社交场所，到了这里，人们就会非常放松，哪怕在排队买酒的时候也能和周边的人聊上几句。聊天的话题往往离不开足球，时政等。</p><p>我的同事们酒量一般都很大，但喝到最后经常会喝高。记得有一位同事说过一个笑话，喝高后打车找到家，但进家后说什么也找不到床，于是就在地板上睡了一夜。其实这还算好的。如果晚些时候去市中心的酒吧区，经常会看到一些喝高的人在马路边倒头就睡的。</p><p>希望疫情早日过去，大家能够真正的到酒吧彻底放松一下。</p>]]></content>
    
    <summary type="html">
    
      在英国没有酒吧的日子真的不能忍，终于酒吧开张了，然后。。。
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>尝试在Google Cloud平台创建免费VM</title>
    <link href="https://www.aafeng.uk/google-cloud-vm/"/>
    <id>https://www.aafeng.uk/google-cloud-vm/</id>
    <published>2020-07-07T08:13:15.519Z</published>
    <updated>2020-07-07T08:13:15.519Z</updated>
    
    <content type="html"><![CDATA[<p>可能是由于和Amzon AWS竞争吧，Google的云服务平台对于新建账户提供价值300美元的账户余额，可以用于Google的各种计算资源。最为吸引我的是在Google云平台上，可以创建配置相对较高的VM，直到你的免费余额用完为止。而且在免费余额用完后，不会自动从你的信用卡扣钱。只有人工确认后才会转为收费账户。下面就在Google云平台创建一个1 vCPU, 3.75GB RAM的VM为例介绍一下整个过程。</p><a id="more"></a><p>首先登录这个页面：<a href="https://console.cloud.google.com/freetrial/signup/tos?pli=1" rel="external nofollow noopener noreferrer" target="_blank">https://console.cloud.google.com/freetrial/signup/tos?pli=1</a></p><p><img src="/images/technology/googlecloud/vm1.jpg" alt></p><p>第二步，输入基本信息：</p><p><img src="/images/technology/googlecloud/vm2.jpg" alt></p><p>只不过需要输入信用卡信息。不过在上一页中说的很清楚：试用期满之后，除非你人工确认想要继续付费，否则不会从信用卡扣钱。</p><p><img src="/images/technology/googlecloud/vm3.jpg" alt></p><p>验证成功后，可以看到用户面板：</p><p><img src="/images/technology/googlecloud/vm4.jpg" alt></p><p>首先进入“Billing”，可以看到，账户余额转换为英镑后为：243英镑，可以在一年内使用。</p><p><img src="/images/technology/googlecloud/vm5.jpg" alt></p><p>接下来创建一个项目：</p><p><img src="/images/technology/googlecloud/vm6.jpg" alt></p><p>访问：<a href="https://console.cloud.google.com/apis/library/compute.googleapis.com" rel="external nofollow noopener noreferrer" target="_blank">https://console.cloud.google.com/apis/library/compute.googleapis.com</a></p><p>单击“ENABLE”来激活”Compute Engine API”。这个操作比较慢，需要等一小会。</p><p>然后访问：<a href="https://console.cloud.google.com/compute/instances" rel="external nofollow noopener noreferrer" target="_blank">https://console.cloud.google.com/compute/instances</a></p><p><img src="/images/technology/googlecloud/vm7.jpg" alt></p><p>首先是要决定选择什么类型的VM，我只想创建一个在给定的免费余额范围内(243英镑，也就是大约每个月20英镑）配置最高的VM。访问这个页面可以计算各种VM的费用：</p><p><a href="https://cloud.google.com/products/calculator" rel="external nofollow noopener noreferrer" target="_blank">https://cloud.google.com/products/calculator</a></p><p>这里我选择Ubuntu, 1 vCPU, 3.75GB RAM，位于伦敦的VM。如果一周7天，一天24小时都在用的话，每月大约25.31英镑。这样，免费提供的243英镑余额可以用9个多月。</p><p><img src="/images/technology/googlecloud/vm8.jpg" alt></p><p>如果把使用时间降低为每天12个小时，费用明显降了下来。这样Google提供的免费余额可以使用1年：</p><p><img src="/images/technology/googlecloud/vm9.jpg" alt></p><p>既然选好了，下面就开始创建VM了。可以看到，还可以选择Docker image来创建自己的VM。</p><p><img src="/images/technology/googlecloud/vm10.jpg" alt></p><p>都选好之后，单击”Create“按钮，就开始创建VM了，整个过程需要等待一小会。</p><p>创建成功了：</p><p><img src="/images/technology/googlecloud/vm11.jpg" alt></p><p>可以在浏览器中打开SSH窗口：</p><p><img src="/images/technology/googlecloud/vm12.jpg" alt></p><p>如果不能sudo，需要在以下页面中添加你的SSH KEY就可以了：</p><p><a href="https://console.cloud.google.com/compute/metadata/sshKeys" rel="external nofollow noopener noreferrer" target="_blank">https://console.cloud.google.com/compute/metadata/sshKeys</a></p><p><img src="/images/technology/googlecloud/vm13.jpg" alt></p><p>至此，VM已经可以使用了。</p>]]></content>
    
    <summary type="html">
    
      尝试在Google Cloud平台创建免费VM
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>断舍离 - 扭扭车</title>
    <link href="https://www.aafeng.uk/swing-swiggle-car/"/>
    <id>https://www.aafeng.uk/swing-swiggle-car/</id>
    <published>2020-07-06T20:57:51.911Z</published>
    <updated>2020-07-06T20:57:51.911Z</updated>
    
    <content type="html"><![CDATA[<p>今天在收拾车库的时候看到了这辆扭扭车。它已经闲置在车库中有一段时间了。感觉应该给它找个更好的归宿了。</p><p><img src="/images/kids/swing-wiggle-car-1.jpg" alt></p><a id="more"></a><p>说起来这辆扭扭车是家中利用率最高的玩具之一。两个孩子都对它爱不释手。老大玩了两年后，老二接着玩。每当有别人家小朋友来的时候，这辆扭扭车可以说是小朋友们必争的玩具。</p><p>其实就算有些家长，包括我在内也对它很感兴趣。呵呵，当然不是坐着玩，而是对其原理非常感兴趣。整个小车不需要电池，也不需要充电，只需要用手在方向盘那里扭来扭去，小车就会不断前行，真的很佩服其设计的精巧。</p><p>查了一下百度，是这样说的：</p><blockquote><p>扭扭车操作简单，无需动力装置，充分利用了离心力原理和人体运动中的惯性原理，仅靠左右转动方向盘，就可随意前后行驶。</p></blockquote><p>第一次看到扭扭车是在一位朋友家。儿子试玩后一直就想要一辆，但当时在英国并没有看到类似的产品。于是从国内买了一辆，放在行李箱中背了过来。还好一路顺利，并没有受到任何损伤，顺顺利利的到了英国。</p><p>处于好奇，在英国亚马逊上搜了一下，现在居然能够找到类似产品了。看样子扭扭车已经走出国门了😃</p><p><img src="/images/kids/swing-wiggle-car-2.jpg" alt></p><p>但孩子们慢慢长大，现在更喜欢一家人骑车远行，这辆扭扭车就有些受了冷落。但这毕竟是一辆非常好玩的玩具车。希望尽快给它找到一个好的归宿，继续发挥作用。</p>]]></content>
    
    <summary type="html">
    
      断舍离 - 扭扭车
    
    </summary>
    
      <category term="育儿" scheme="https://www.aafeng.uk/categories/%E8%82%B2%E5%84%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>经过了种种教训，我终于彻底相信了，一分价钱一分货</title>
    <link href="https://www.aafeng.uk/you-get-what-you-paid/"/>
    <id>https://www.aafeng.uk/you-get-what-you-paid/</id>
    <published>2020-07-04T22:10:33.018Z</published>
    <updated>2020-07-04T22:10:33.018Z</updated>
    
    <content type="html"><![CDATA[<p>最近在家中的扩建工程中遇到了一件闹心事，整个工程的建筑设计师似乎不太靠谱。让我们对他设计的房屋受力不是很放心。还好有个朋友是个专业的工程师，让朋友帮助把关了一下才把心放了下来。</p><p><img src="/images/life/product.jpg" alt></p><a id="more"></a><p>其实这位建筑师也是朋友推荐的，只不过是其中报价最便宜的一位。和别的建筑师相比，选择这位建筑师能省大约几百英镑，因此就选择了他。但在工程的推进过程中，不仅负责施工的工头发现了设计图纸中的问题，就连我这个外行也看出了一些欠妥之处。比如：把非承重墙画成了承重墙。在搭建钢梁的位置并没有把额外的支柱画出来。让我们越来越担心他的计算是否正确。让我甚至萌生了再找一个建筑师彻底重新计算的冲动。好在工头非常有经验，一眼就指出了欠妥之处。另外经过朋友的把关，最终的受力计算终于没有问题了。</p><p>另外一个教训就是家中的冰箱。最早用的是一款三星的冰箱，当时选择的是在同等配置中价位相对较高的一款。但用了五年之后的一天，突然停止工作了。在购买新冰箱的时候就在想，既然多花钱买到的冰箱照样会出问题，那么还不如省些钱，买一个中低档的冰箱吧。于是就选择了一个在英国非常常见的品牌，但价位偏低的冰箱。但事实证明，真的是一分价钱一分货。冰箱从未出现过大问题，但底层储物壳中会时不时的积水。</p><p>中国有句古话：一分价钱一分货。英国这里也有类似的话：You get what you paid。在有了几次不愉快的经历后，我彻底相信了，也慢慢养成了一个习惯，无论买什么实体产品，都不买最便宜的那个。</p><p>其实这些古话的背后还是很有道理的。去除了欺诈因素，不同厂家在做同样的产品时，如果每一个步骤都精益求精，追求极致，其各个方面的人力，物力成本必然会提升，导致其价格不可能会太低。</p><p>在一些服务行业也是类似的。如果顾客拼命把价格压低，羊毛毕竟是出在羊身上的。服务的提供者肯定会在各个方面削减开支，最终导致的结果就是服务质量的降低。</p>]]></content>
    
    <summary type="html">
    
      经过了种种教训，我终于彻底相信了，一分价钱一分货
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>直播带货，自带流量成了CEO的必备技能？</title>
    <link href="https://www.aafeng.uk/broadcast-sale/"/>
    <id>https://www.aafeng.uk/broadcast-sale/</id>
    <published>2020-07-04T20:42:40.263Z</published>
    <updated>2020-07-04T20:42:40.263Z</updated>
    
    <content type="html"><![CDATA[<p>这两年似乎又兴起了一种新的销售模式：直播带货。从而也催生了很多新生代网红：号称“淘宝第一主播”的薇娅，“口红一哥”李佳琦等在去年双十一的销售额竟然能过亿。</p><p><img src="/images/work/media.jpg" alt><br>图源：Pixabay</p><a id="more"></a><p>由于女儿喜欢一个叫做LOL的玩具而看了Youtube上的一些小网红直播各种玩具的拆箱过程。出于好奇心，Google了一下他们的收入，真的很吓人，最火的小网红能拿到近千万美元的年收入。</p><p>今天读了一篇罗永浩的访谈，感觉讲的很好。最早老罗开始直播的时候，周边人似乎都不能理解，似乎觉得不上档次。但现在这种方式被普遍接受，似乎成为了众多CEO的必备技能之一。</p><p>通过超强的表达能力，自带流量，似乎成为众多CEO的核心竞争力。众多CEO纷纷上场，除了老罗之外，格力的董明珠，小米的雷军等纷纷都成了流量王，在直播间玩的不亦乐乎，同时也在享受着直播带来的巨大利润。</p><p>不可否认，现在无论做什么事，都需要人气和流量。而最迎合现代人的快生活节奏的就是短视频。这么说直播带货成为一种标准营销方式就不足为奇了。</p><p>做直播带货的目的其实主要就是卖货，或者做品牌。前面提到的薇娅，李佳琦就是通过自己的超人气流量卖货。对于众多的CEO来说，似乎主要是在做品牌。其实在币圈中，孙老板可以说是营销高手，通过一次次炒作，吸引流量，只不过他带的货，是币罢了。</p><p>其实，对于众多草根创业者，一边干事，一边做UP主，走的也是同一套逻辑。无论做什么事情，都需要营销，让众人知道。</p><p>但不得不说，这种直播真的不是一般人能扛得住的，一般口才好的人，搞个几次也许还行，但要源源不断的找到好的素材，并通过吸引人的方式表述出来，不是一件简单的事，需要背后团队的共同努力才能做到。</p><p>话说回来，在隔壁的S链，有孙老板站台，个人估计在合适的时机肯定会炒一把。那么Hive这里谁来做这件事呢？也许我并不是很了解，感觉排名最靠前的见证人似乎都是技术大牛。似乎缺少一个能讲故事的人。</p>]]></content>
    
    <summary type="html">
    
      直播带货，自带流量成了CEO的必备技能？
    
    </summary>
    
      <category term="工作" scheme="https://www.aafeng.uk/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>如何将Streamlit应用免费部署到Heroku</title>
    <link href="https://www.aafeng.uk/streamlit-to-heroku/"/>
    <id>https://www.aafeng.uk/streamlit-to-heroku/</id>
    <published>2020-07-04T09:30:08.706Z</published>
    <updated>2020-07-04T09:30:08.706Z</updated>
    
    <content type="html"><![CDATA[<p>前面介绍了Streamlit这数据分析和可视化的利器。 下面说说如何将你的Streamlit应用程序部署到免费的Heroku账号，这样任何人都可以访问你的应用了。</p><p><img src="/images/technology/streamlit/heroku-logo.png" alt></p><a id="more"></a><p>还是以前面介绍的简单程序为例：</p><p>首先创建一个文件夹比如叫做ml，然后进入该文件夹，创建程序文件stats.py，其源码为：</p><pre><code>import streamlit as stimport pandas as pd st.write(&quot;&quot;&quot;## Download statistics### Line chart&quot;&quot;&quot;)# select DATE_FORMAT(date, &apos;%Y-%m-%d&apos;) as d, count(id) as count from posts group by d;dictionary = {&apos;2020-06-25&apos;:34, &apos;2020-06-26&apos;: 39, &apos;2020-06-27&apos;: 40, &apos;2020-06-28&apos;: 40, &apos;2020-06-29&apos;: 42, &apos;2020-06-30&apos;: 36}series = pd.Series(dictionary)st.line_chart(series)st.write(&quot;&quot;&quot;### Bar chart&quot;&quot;&quot;)st.bar_chart(series)</code></pre><p>在当前目录下运行如下命令来安装pipreqs包，并创建依赖库的文件:</p><pre><code>pip install pipreqspipreqs .</code></pre><p>可以看到，在当前目录下生成了requirements.txt，其内容为：</p><pre><code>streamlit==0.58.0pandas==1.0.3</code></pre><p>创建setup.sh:</p><pre><code>mkdir -p ~/.streamlit/echo &quot;\[general]\n\email = \&quot;YOUR_EMAIL_ADDRESS\&quot;\n\&quot; &gt; ~/.streamlit/credentials.tomlecho &quot;\[server]\n\headless = true\n\enableCORS=false\n\port = $PORT\n\&quot; &gt; ~/.streamlit/config.toml    </code></pre><p>创建Procfile：</p><pre><code>web: sh setup.sh &amp;&amp; streamlit run stats.py        </code></pre><p>创建本地git库</p><pre><code>git initgit add --allgit commit -m &quot;init&quot;</code></pre><p>配置并部署到Heroku:</p><pre><code>heroku loginheroku creategit push heroku masterheroku ps:scale web=1</code></pre><p>按照命令行输出的URL就可以访问你的应用了。    </p><p>查看Heroku日志：</p><pre><code>heroku logs --tail</code></pre><p>要想使用自己域名，需要先通过Heroku验证。然后运行：</p><pre><code>heroku domains:add hivecnstats.aafeng.uk</code></pre>]]></content>
    
    <summary type="html">
    
      如何将Streamlit程序免费部署到Heroku
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Heroku" scheme="https://www.aafeng.uk/tags/Heroku/"/>
    
  </entry>
  
  <entry>
    <title>biu biu biu英国经济复苏计划</title>
    <link href="https://www.aafeng.uk/uk-recovery/"/>
    <id>https://www.aafeng.uk/uk-recovery/</id>
    <published>2020-07-02T21:40:17.821Z</published>
    <updated>2020-07-02T21:40:17.821Z</updated>
    
    <content type="html"><![CDATA[<p>最近英国首相鲍里斯宣布英国后新冠疫情时期的经济恢复计划： Build back better，build back greener，build back faster。这三连Build让我不小心听成了biu biu biu。。。</p><p><img src="/images/life/solar-power.jpg" alt></p><a id="more"></a><p>不过讲真，这可以说是一个雄心勃勃的计划，如果真能实现了，哪怕只是部分实现，已经相当了不起了。</p><p>首先，通过这次疫情，政府意识到了基础设施的不足和缺陷。因此狂砸50亿英镑投资基础建设，包括对NHS，交通干线，和教育系统的投资。</p><p>比如拨专款给”Shovel ready”工程，也就是说那些除了钱不到位，其他都到位的工程。另外，在后疫情阶段，虽然很多学校都开始复课，但由于需要保持社交距离，学校的空间有些捉襟见肘，因此这次会拨教育专款改善学校设施。</p><p>其次是对环保的强调。最近北极升温，局部暴雨，森林大火等自然灾害让人不禁为人类的未来担心。而英国政府提倡的“Green recovery”可以说把环保放在了至关重要的地位。</p><p>英国政府曾经承诺将于<a href="https://www.theguardian.com/environment/2020/feb/06/johnson-urged-to-set-out-firm-plans-for-uks-net-zero-carbon-target" rel="external nofollow noopener noreferrer" target="_blank">2050年实现净碳排放量为零</a>。与此相关，首次听说了一个听起来很魔幻的技术，叫做：Direct Air Capture，直译作“直接空气捕捉”，也就是说直接把空气中的二氧化碳捕捉到，从而达到降低碳排放量的目的。听起来是不是很神奇？</p><p>话说，最近几天教育部长声称，9月所有中小学将会全面复课，拒绝将孩子送回学校的家长还将面临罚款。同时收到了学校的邮件，将会有专款给因为疫情落下功课的孩子们找私教补课。</p><p>种种迹象表明，由于疫情对经济的重创，已经对很多行业造成了毁灭性打击。英国政府似乎非常坚定的要重启经济。希望这个计划能够顺利的<del>biu biu biu</del>build build build。</p>]]></content>
    
    <summary type="html">
    
      biu biu biu英国经济复苏计划
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>试用Streamlit进行数据可视化</title>
    <link href="https://www.aafeng.uk/streamlit/"/>
    <id>https://www.aafeng.uk/streamlit/</id>
    <published>2020-07-01T15:53:46.557Z</published>
    <updated>2020-07-01T15:53:46.557Z</updated>
    
    <content type="html"><![CDATA[<p>早就听说Streamlit是数据分析和机器学习的利器，但一直没有机会尝试。最近花了些时间试用了一下，还真的非常好用！最主要的是其设计思路非常独特：开发者只需要关注于数据及服务器端编码就可以了，那些复杂的客户端交互，响应式设计等等全部由Streamlit这个框架来搞定！这让我想起了过去曾经用过的一个框架：GWT (Google Web Toolkit)，其设计思路可以说和Streamlit是完全一样啊！不同之处是GWT中没有对数据分析和机器学习的支持。</p><a id="more"></a><p>下面通过一个简单的程序来演示Streamlit是如何工作的。</p><p>首先需要安装streamlit及下面需要的pandas:</p><pre><code>pip install streamlitpip install pandas</code></pre><p>接下来写一个对下载数据可视化的程序：</p><pre><code>import streamlit as stimport pandas as pd st.write(&quot;&quot;&quot;## Download statistics### Line chart&quot;&quot;&quot;)# select DATE_FORMAT(date, &apos;%Y-%m-%d&apos;) as d, count(id) as count from posts group by d;dictionary = {&apos;2020-06-25&apos;:34, &apos;2020-06-26&apos;: 39, &apos;2020-06-27&apos;: 40, &apos;2020-06-28&apos;: 40, &apos;2020-06-29&apos;: 42, &apos;2020-06-30&apos;: 36}series = pd.Series(dictionary)st.line_chart(series)st.write(&quot;&quot;&quot;### Bar chart&quot;&quot;&quot;)st.bar_chart(series)</code></pre><p>在上面程序中，演示了Streamlit的几个特点：</p><p><strong>对Markdown的支持</strong>：在st.write中，可以直接使用markdown的语法。<br><strong>客户端统计图形的生成</strong>: 可以看到，这里只需要调用line_chart和bar_chart方法，而无需担心如何将数据传送到客户端，客户端又是如何渲染这些统计图的。</p><p>其运行后的界面如下图所示：</p><p><img src="/images/technology/streamlit/demo.jpg" alt></p><p>可以看到，Streamlit还帮我们生成了保存为PNG, SVG等功能。</p>]]></content>
    
    <summary type="html">
    
      试用Streamlit进行数据可视化
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="https://www.aafeng.uk/tags/Python/"/>
    
      <category term="Streamlit" scheme="https://www.aafeng.uk/tags/Streamlit/"/>
    
  </entry>
  
  <entry>
    <title>Hive Dapp介绍 - rewarding.app</title>
    <link href="https://www.aafeng.uk/rewarding-app/"/>
    <id>https://www.aafeng.uk/rewarding-app/</id>
    <published>2020-06-30T21:18:33.624Z</published>
    <updated>2020-06-30T21:18:33.624Z</updated>
    
    <content type="html"><![CDATA[<p>试用了一下<a href="https://rewarding.app/" rel="external nofollow noopener noreferrer" target="_blank">rewarding.app</a>这个dapp，感觉其功能还是非常强大的。简而言之，这个dapp可以非常灵活的定义各种点赞规则，之后这个dapp就会按照你定义的规则来进行点赞。</p><a id="more"></a><p>登录后可以看到如下界面：</p><p><img src="/images/blockchain/hive/rewarding.app.1.png" alt></p><p>首先需要使用hivesigner对其进行授权。授权成功后，在hiveblocks上可以看到rewarding这个dapp出现在你的Posting授权列表中：</p><p><img src="/images/blockchain/hive/rewarding.app.2.png" alt></p><p>接下来就可以定义点赞规则了。首先看一下第一组参数：</p><p><img src="/images/blockchain/hive/rewarding.app.3.png" alt></p><p>比如：给哪个作者点赞，点赞比例，点赞时段（比如：5分钟到120分钟之间）。</p><p>再来看一下第二组参数：</p><p><img src="/images/blockchain/hive/rewarding.app.4.png" alt></p><p>首先是vote_sbd，这个选项只有在vote_weight为0的时候，rewarding.app会自动换算，比如你想给作者点赞的价值为$0.1，这个dapp会自动帮你计算你需要的点赞比例。接下来的每天最大点赞数，每周最大点赞数，以及最小的VP值等。</p><p>再来看第三组参数：</p><p><img src="/images/blockchain/hive/rewarding.app.5.png" alt></p><p>比如，文章中必须包含某个标记，或者必须不包含某个标记，以及文章中最小的字数。</p><p>至此，感觉这些参数已经足够灵活了，可以定义各种点赞规则。其实除此之外，还有好多参数可以选择。都定义完之后保存规则，会看到这样的一个规则列表：</p><p><img src="/images/blockchain/hive/rewarding.app.6.png" alt></p><p>这界面，实在是太需要改进了。。。</p><p>不过不得不说，这个dapp的功能还是非常强大的，除了自动点赞规则的设计，还有跟赞，跟踩的功能。个人感觉，如果能够适应它的界面，这个工具还是有其可取之处的。</p>]]></content>
    
    <summary type="html">
    
      Hive Dapp介绍 - rewarding.app
    
    </summary>
    
      <category term="区块链" scheme="https://www.aafeng.uk/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>Get新技能 - 整体厨房的选购</title>
    <link href="https://www.aafeng.uk/kitchen/"/>
    <id>https://www.aafeng.uk/kitchen/</id>
    <published>2020-06-29T21:52:31.296Z</published>
    <updated>2020-06-29T21:52:31.296Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始了一项艰巨的任务：选购整体厨房。最近可以说是把英国的主流整体厨房的品牌，像Magnet, Wren, Howdens等通过线上/线下的预约，已经都看了一遍。总算对整体厨房需要注意的地方有了一个基本的概念。</p><p><img src="/images/life/kitchen2.jpg" alt></p><p>图源：Pixabay</p><a id="more"></a><p>首先说说整体设计。前面提过，在英国这里主流的厨房都是开放式的，厨房，餐厅，客厅都是连在一起的。同时，如果空间允许的话，一般会在厨房的操作台附近再添加一个岛台，把厨房的功能分区，同时还能增加储物空间。因此在选择厨房品牌的时候要考虑其整体设计，以及岛台的设计是否合理。</p><p>在厨房台面的选择上，主要有花岗岩(Granite)，石英石(Quartz)，木制，复合板(Laminate)等多种选择。大理石？在这边的几大品牌中，似乎都不提供。选择用石材作为厨房台面，其特点就是美观大气，经久耐用，但造价较高。目前设计师主推的是复合板材质的台面，其特点是各种样式，颜色的选择很多，造价相对便宜。如果过个几年不想要了，可以很方便的更换新的台面。</p><p>最近在整体比较的过程中有一项新的(可能也不新，但对我而言是新的)设计让我非常喜欢，那就是Handless，也就是说，橱柜，抽屉等都没有把手，这样的厨房感觉非常现代。因此我们在选择的过程中，把这种没有把手的设计作为必须考虑的设计要素之一。</p><p>在灶台的选择上，又有电炉，电磁炉，燃气三种选择。如果喜欢中餐中的爆炒，那么只能选择燃气灶。但在电炉和电磁炉之间，我们有些犹豫。目前越来越多的人选择电磁炉。但我似乎听过电磁炉有辐射，更倾向于电炉。最近在朋友家还看到了一个很奇葩的灶台，四个电磁炉灶口，外加一个燃气灶。把两者的优点结合在了一起。</p><p>面对这么多的选择，刚开始的时候我确实有些无所适从，但随着和各家品牌销售人员的沟通，慢慢的心理有了数。</p>]]></content>
    
    <summary type="html">
    
      Get新技能 - 整体厨房的选购
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>泡泡小组 - 孩子们重返校园</title>
    <link href="https://www.aafeng.uk/bubble-group/"/>
    <id>https://www.aafeng.uk/bubble-group/</id>
    <published>2020-06-29T20:42:26.880Z</published>
    <updated>2020-06-29T20:42:26.880Z</updated>
    
    <content type="html"><![CDATA[<p>经过反复考虑，决定从这周开始，送孩子回学校上学。尽管目前疫情仍不容乐观。但我们所住的小城还是相对安全的。同时考虑到孩子的社交需求，心理健康等因素后，还是把他们送回了学校。</p><p><img src="/images/life/covid19/bubble.jpg" alt></p><p>图源：Pixabay</p><a id="more"></a><p>学校采用了一种叫做泡泡小组(Bubble Group)的方式。我觉得这个比喻非常形象，就像孩子们吹的泡泡一样，不同泡泡的内部之间是完全隔离，彼此不接触的。在学校的每个小组中有15个学生，同处于一个教室，但需要保持社交距离。不同的小组之间没有任何接触。同时学校在每周三关闭，进行深度清洁。一旦有一个小组中的任何人感染病毒，整个小组成员都需要隔离。</p><p>其实算起来已经宅家三个月了。距离学校放暑假也就还有四周多的时间，如果选择不送学校完全能坚持到正式放暑假。但我们考虑到孩子们的社交需求和心理健康因素，毕竟他们需要和别的小朋友们互动。最近英国逐步解封的过程中，发生了很多暴力事件。据说很多起是由于个别人隔离时间过长，引发了很多心理疾病，甚至暴力倾向所致的。</p><p>说的现实一点，可能很多人宅在家中三个月已经到了强弩之末，心理上已经不能再承受更长时间的隔离了。孩子们也是一样的，也许隔离三个月没有问题，甚至再过一个月，以及暑假都没有问题。但是如果等到九月份开学的时候仍旧需要隔离怎么办？甚至是第二波疫情爆发怎么办？我感觉在现在疫情稍微缓和的时候，送孩子回学校四周，孩子和家长从心理上能稍作调整，以应对接下来可能的进一步隔离。</p><p>还有另外一个原因。就像两个月前就有科学家预测，人类将会与新冠病毒长期共存。无论疫情如何，生活仍将继续。和别人的接触似乎无法避免。只能说在各个方面尽最大程度的保护自己吧。</p><p><img src="/images/life/covid19/happy-face.jpg" alt><br>图源：Pixabay</p><p>在今天把孩子从学校接回来的时候，感觉他们明显的比前一段时间更加活跃，话也明显的多。希望这份简单的快乐能够持续下去吧。</p>]]></content>
    
    <summary type="html">
    
      泡泡小组 - 孩子们重返校园
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>英中文化差异 - 开放式厨房</title>
    <link href="https://www.aafeng.uk/open-plan-kitchen/"/>
    <id>https://www.aafeng.uk/open-plan-kitchen/</id>
    <published>2020-06-29T16:25:37.809Z</published>
    <updated>2020-06-29T16:25:37.809Z</updated>
    
    <content type="html"><![CDATA[<p>在家中的扩建工程中，最近开始考虑新厨房和客厅的布局了。在现有的布局中，厨房和客厅是分开的。但在新厨房和客厅的设计中，我们遵循了英国这里的主流设计理念：将厨房和客厅彻底打通，形成一个整体的活动区域(Open Plan)。</p><p><img src="/images/life/kitchen.jpg" alt></p><p>图源：Pixabay</p><a id="more"></a><p>记得在国内的时候，似乎不论房子大小，能够分配给厨房的空间都不会很大。因为大家觉得厨房就是做饭的地方，而客厅才是主要的活动空间。因此应该把主要空间留给客厅。有的人家甚至把厨房挪到了阳台上，以节省出更多的空间来。记得在扩建工程还没有启动的时候，曾经咨询过一个曾经做过设计师的朋友，他强烈建议我们不要Open Plan，而是把厨房的空间缩小，增大客厅空间。</p><p>和国内不同，英国这里的主流观念是更喜欢厨房客厅一体化的设计，也叫做Open Plan Kitchen。关于这点，和英国这里的设计师咨询过，应该是因为英国这边的家庭观念似乎更强。而在全家的活动空间中，厨房和客厅同样重要，使用率也同样高。这也是为什么主流设计理念中，基本上都是开放式厨房。</p><p>我想另外一个原因可能和英国人的烹饪习惯有关吧。毕竟他们在做饭的时候以烤箱和煮锅为主，很少炒菜。至于大火爆炒，更是闻所未闻。因此他们不需要考虑油烟的问题。</p><p>我们在英国生活多年，烹饪习惯也改变了不少。虽然仍爱吃中餐，但从不大火爆炒，应该不会产生大量的油烟。选择这种一体式厨房应该没有问题。所以最终也决定选择这种Open Plan的设计。不过话说回来，有时候在看国内电视剧的时候，似乎有很多剧中的厨房都是开放式的厨房！</p>]]></content>
    
    <summary type="html">
    
      英中文化差异 - 开放式厨房
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
</feed>
