<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aafeng</title>
  <icon>https://www.gravatar.com/avatar/a176a52d9d4ac7d9f90a5204a7d87bcd</icon>
  <subtitle>aafeng&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aafenguk.github.io/"/>
  <updated>2020-04-13T21:54:55.553Z</updated>
  <id>https://aafenguk.github.io/</id>
  
  <author>
    <name>aafeng</name>
    <email>aafenguk@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将Hive文章备份到静态站点</title>
    <link href="https://aafenguk.github.io/hive-backup/"/>
    <id>https://aafenguk.github.io/hive-backup/</id>
    <published>2020-04-13T20:49:03.000Z</published>
    <updated>2020-04-13T21:54:55.553Z</updated>
    
    <content type="html"><![CDATA[<p>这两天做了一件工作：将Hive/Steem上自己发的文章进行了整理，并备份到自己的静态站点上： <a href="https://aafenguk.github.io">https://aafenguk.github.io</a></p><p><img src="/images/blockchain/hive-backup-1.jpg" alt="Hive文章备份"></p><a id="more"></a><p>之所以这样做的原因是因为已经在Steem/Hive链上坚持把自己生活中的一些琐事记录在区块链上。初始时不觉得，最近越来越觉得对自己来说是件很有纪念意义的事。毕竟上面记录了自己生活中的点点滴滴。万一有一天其依托的区块链挂了，我这些信息怎么办？？？</p><p>我选择了自己最熟悉的 <a href="https://github.com/hexojs/hexo" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>来生成静态站点。主题则选择了 <a href="https://github.com/ppoffice/hexo-theme-icarus" rel="external nofollow noopener noreferrer" target="_blank">Icarus</a>。</p><p>对于我个人而言，使用这个静态站点更为便捷。首先是其分类非常清晰，我自己在每个分类中的文章数一目了然。</p><p><img src="/images/blockchain/hive-backup-2.jpg" alt="Hive文章备份"></p><p>其归档功能也让我能迅速的定位到某个时段的文章。</p><p><img src="/images/blockchain/hive-backup-3.jpg" alt="Hive文章备份"></p><p>同时还有一个时间线：</p><p><img src="/images/blockchain/hive-backup-4.jpg" alt="Hive文章备份"></p><p>这样，无论以后进行浏览还是查找，都非常方便了。更为重要的是，我把自己的数据和图片都备份到了本地（备份图片时还真的有些坑。。。）。万一链真的断了，我也不怕了。当然，还是希望链越做越大的。</p>]]></content>
    
    <summary type="html">
    
      将Hive文章备份到静态站点
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="Hexo" scheme="https://aafenguk.github.io/tags/Hexo/"/>
    
      <category term="Icarus" scheme="https://aafenguk.github.io/tags/Icarus/"/>
    
  </entry>
  
  <entry>
    <title>断舍离</title>
    <link href="https://aafenguk.github.io/5w3nes/"/>
    <id>https://aafenguk.github.io/5w3nes/</id>
    <published>2020-04-13T04:50:00.000Z</published>
    <updated>2020-04-13T12:55:57.575Z</updated>
    
    <content type="html"><![CDATA[<p>最近一直宅在家中。由于时时刻刻都生活/工作在这个小空间，因此更加觉得家中有些杂乱，很多不必要的东西可以扔掉。正好单位在复活节期间多放了两天假，加上本来的复活节大周末，总共六天的时间。于是和媳妇决定对家中进行大刀阔斧的整理。</p><p><img src="/images/downloaded/5w3nes_0.jpg" alt="image.png"><br>图源：pixabay</p><a id="more"></a><p>首先进行整顿的是家中的书架，架子上摆放着一家人的书。其中很多是针对新生儿的育儿书籍。这些书当年都是从国内人肉扛回来的。现在肯定不需要了，于是进行了分类：破损的直接回收扔掉，好一些的送给朋友和捐助给一些慈善店。</p><p>对于有些书，比如一些经典儿童绘本，媳妇总是有一些舍不得。这个时候我就劝她，好好想一想，过去一年，甚至几年内，是否用过，如果没有的话，说明就不需要这本书了。那么，它就应该把位置让出来。这样我们就能把当前更需要的书摆上书架。</p><p>其实对于一本你真正需要，或者喜欢的书，你经常会情不自禁的去读它。比如，我最喜欢的图书之一：《极简宇宙史》。迄今已经读过两遍了。我在书架中给它留了一个最好的位置，因为我知道我还会再读一遍的。</p><p>经过这一番整理，原本杂乱臃肿的书架顿时清爽了，感觉似乎心头的一块大石头被搬走，自己的心情也好了很多。</p>]]></content>
    
    <summary type="html">
    
      断舍离
    
    </summary>
    
      <category term="生活" scheme="https://aafenguk.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="断舍离" scheme="https://aafenguk.github.io/tags/%E6%96%AD%E8%88%8D%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>复活节花园寻宝</title>
    <link href="https://aafenguk.github.io/6da9hx/"/>
    <id>https://aafenguk.github.io/6da9hx/</id>
    <published>2020-04-12T04:03:24.000Z</published>
    <updated>2020-04-13T12:57:10.794Z</updated>
    
    <content type="html"><![CDATA[<p>复活节如期而至，其实每年都选择在复活节假期回国和家人团聚。但今年因疫情被迫取消了航班，第一次带着孩子在英国度过复活节。</p><p><img src="/images/downloaded/6da9hx_0.jpg" alt="image.png"><br>图源：pixabay</p><p>不过凡事都尽量往好处想，孩子们一直喜欢复活节时在花园中寻找复活节彩蛋这个游戏，但由于每年的复活节都在中国，因此一直没能满足他们的这个心愿。今年正好满足一下他们的这个小小愿望。</p><a id="more"></a><p>由于疫情，现在复活节彩蛋都限购，只买到一点点的彩蛋。但孩子们更喜欢的是这个游戏本身，彩蛋的多少应该不是最重要的。</p><p><img src="/images/downloaded/6da9hx_1.jpg" alt="image.png"></p><p>其实，在寻找复活节彩蛋游戏中，还有一个主角，就是复活节小兔子。在传说中，复活节小兔子将彩蛋藏起来。之所以是兔子，可能是因为它们强大的生育能力吧，毕竟复活节意味着新生命的诞生。</p><p>我自然就成了客串小兔子的角色，将彩蛋藏在了花园中。</p><p>藏在了苹果树的树枝上：<br><img src="/images/downloaded/6da9hx_2.jpg" alt="image.png"></p><p>梨树上：<br><img src="/images/downloaded/6da9hx_3.jpg" alt="image.png"></p><p>孩子们做游戏的小房子这里：</p><p><img src="/images/downloaded/6da9hx_4.jpg" alt="image.png"></p><p>浇水用的小水壶中：<br><img src="/images/downloaded/6da9hx_5.jpg" alt="image.png"></p><p>很快，这些彩蛋就都被找到了。彩蛋内部一般都是空的，象征着耶稣复活后空空的坟墓。其实时至今日，复活节的宗教色彩已经慢慢淡化了，成了很多家庭度假的热门时段。期待早日恢复正常，把错过的假期补上。</p>]]></content>
    
    <summary type="html">
    
      复活节花园寻宝
    
    </summary>
    
      <category term="育儿" scheme="https://aafenguk.github.io/categories/%E8%82%B2%E5%84%BF/"/>
    
    
      <category term="复活节" scheme="https://aafenguk.github.io/tags/%E5%A4%8D%E6%B4%BB%E8%8A%82/"/>
    
      <category term="彩蛋" scheme="https://aafenguk.github.io/tags/%E5%BD%A9%E8%9B%8B/"/>
    
  </entry>
  
  <entry>
    <title>实时推送Hive区块链信息到Telegram客户端（2）</title>
    <link href="https://aafenguk.github.io/hive-telegram-2/"/>
    <id>https://aafenguk.github.io/hive-telegram-2/</id>
    <published>2020-04-11T07:44:45.000Z</published>
    <updated>2020-04-13T19:28:31.026Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="/hive-105017/@aafeng/hive-telegram-1">上一篇文章</a>中讲到了整个程序的思路，以及如何读取Hive区块链信息，并回溯N个区块。在这篇文章中讲讲如何在区块信息中过滤信息，并根据自己定义的规则生成待发送的信息。</p><p><img src="/images/hive/hive-telegram-2.jpg" alt="image.png"><br>图源：pixabay</p><a id="more"></a><p>首先，需要定义一些用于筛选信息的规则。这里的一个基本原则就是所定义的规则一定要和程序代码分离，这样最终的程序才容易维护。任何时候想要更改规则的话，只需要修改定义规则的配置文件，而无需修改程序代码。比如：</p><pre><code>rules:  votes:    any_to_aafeng:      from:       &quot;*&quot;      to:         aafeng      exclude:    aafeng,aafeng.test      min_weight: 20</code></pre><p>上面定义了一组规则：除去’aafeng’和’aafeng.test’之外的任何用户对’aafeng’这个用户的点赞，如果点赞额度&gt;=20%，则符合这个规则。</p><p>再举一个关于转账的规则：</p><pre><code>transfers:  any_to_aafeng:    from:        &quot;*&quot;    to:          aafeng    min_account: 1            aafeng_to_any:    from:        aafeng    to:          &quot;*&quot;    min_account: 0 </code></pre><p>上面规则定义了：任何向’aafeng’转入的金额&gt;=1，符合规则。任何从’aafeng’转出的金额&gt;=0，符合规则。这条规则对于监测账号的资金变化非常有用。</p><p>除了上述的两类关于点赞和转账的规则，你还可以定义很多规则，比如：留言，发帖，提到你等等。道理都非常类似，这里就不一一例举了。</p><p>规则都定义了好了之后，我们需要考虑在程序中如何支持这样的规则，下面是对点赞规则的实现：</p><pre><code>HIVE_BASE_URL = &apos;\https://hive.blog/&apos;# check if there is a matched vote ruledef get_vote_message(vote_rules, transaction):  messages   = &apos;&apos;  try:    t_voter    = transaction[&quot;voter&quot;]     t_author   = transaction[&quot;author&quot;]    t_weight   = transaction[&apos;weight&apos;]/100.00    t_permlink = transaction[&apos;permlink&apos;]    for vr in vote_rules:      # check exclude       if t_voter in vote_rules[vr][&quot;exclude&quot;].split(&quot;,&quot;):        continue      # check if voting weight matches      if t_weight&gt;0 and t_weight &lt; vote_rules[vr][&quot;min_weight&quot;]:        continue      # check voter and votee matches      if (t_voter==vote_rules[vr][&quot;from&quot;] and t_author==vote_rules[vr][&quot;to&quot;]) or \         (&apos;*&apos;==vote_rules[vr][&quot;from&quot;]     and t_author==vote_rules[vr][&quot;to&quot;]) or \         (t_voter==vote_rules[vr][&quot;from&quot;] and &apos;*&apos;==vote_rules[vr][&quot;to&quot;]):        messages = messages + &quot;VOTE: %s --&gt; %s [%.2f]: %s/@%s/%s\n\n&quot; % (t_voter,t_author,t_weight,HIVE_BASE_URL,t_author,t_permlink)  except Exception as e:    traceback.print_exc()    return None  if messages!=&apos;&apos;:    return messages  else:    return None        </code></pre><p>通过上面的程序，就可以从区块链信息中过滤出自己感兴趣的点赞信息了。下一篇讲讲如何配置Telegram。</p>]]></content>
    
    <summary type="html">
    
      实时推送Hive区块链信息到Telegram客户端（2）
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="Telegram" scheme="https://aafenguk.github.io/tags/Telegram/"/>
    
  </entry>
  
  <entry>
    <title>出门放风</title>
    <link href="https://aafenguk.github.io/6x7r52/"/>
    <id>https://aafenguk.github.io/6x7r52/</id>
    <published>2020-04-10T07:44:15.000Z</published>
    <updated>2020-04-13T13:53:24.816Z</updated>
    
    <content type="html"><![CDATA[<p>算一算已经宅在家中两周多了。在这两周中，除了我自己出门去了一趟超市外，全家人都老老实实的在家闭关，该上班的上班，该学习的学习。孩子们每天上下午固定两次在花园中活动一下，蹦床成了他们最爱的项目。</p><a id="more"></a><p>最近在网上看了一个张文宏教授的在线访谈，知道了在地广人稀的地方，只要多加注意，是可以去散散步的。想一想我家似乎这两个条件都满足啊，我们住的远离市中心，可以说在一个小村落里。同时这两天的天气实在是太好了，处处都能嗅到春天的气息。因此决定全家出动，就在家附近去散散步，不要辜负这大好春光。</p><p><img src="/images/downloaded/6x7r52_0.jpg" alt="image.png"></p><p>本来村里的人就不多，现在更是都宅在家中，因此出门几乎没见到几个人。路上都是空空况况的。零星遇到的行人之间也都很有默契的彼此保持至少三米以上的距离。</p><p><img src="/images/downloaded/6x7r52_1.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_2.jpg" alt="image.png"></p><p>与这冷冷清清的街道相比，一簇簇的水仙花还有各种知名的，不知名的小花已经完全盛开，将路边点缀的生机盎然。</p><p><img src="/images/downloaded/6x7r52_3.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_4.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_5.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_6.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_7.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_8.jpg" alt="image.png"></p><p><img src="/images/downloaded/6x7r52_9.jpg" alt="image.png"></p><p>同时趁着现在路上几乎没有车，让孩子们骑车正式上路，顺便给他们讲了讲各种需要注意的交通规则。</p><p>虽然活动半径距离住处都没超过200米，但一家人走走停停，回家时已经是一个多小时之后了，感觉浑身舒畅。希望生活能够早日回归正常，和众多亲友们再次相聚。</p>]]></content>
    
    <summary type="html">
    
      出门放风
    
    </summary>
    
      <category term="生活" scheme="https://aafenguk.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://aafenguk.github.io/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="照片" scheme="https://aafenguk.github.io/tags/%E7%85%A7%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Hive和Steem都已经分家了，绝大多数账户的恢复账户还都是Steem意味着什么？</title>
    <link href="https://aafenguk.github.io/hive-steem-steem/"/>
    <id>https://aafenguk.github.io/hive-steem-steem/</id>
    <published>2020-04-09T07:39:03.000Z</published>
    <updated>2020-04-13T19:30:04.482Z</updated>
    
    <content type="html"><![CDATA[<p>Hive从Steem硬分叉之后，发生了很多事情。其中有一点就是，所有的Steem账户都在Hive上有了一个”分身”，用户名相同，密码相同，所有的设置都相同。其中重要的一点就是：绝大多数账户的恢复账户(Recovery account)是steem这个账户。究其原因，这取决于账户的创建方式。如果是通过Steemit官网创建的，那么默认恢复账号就是’steem’，如果是通过别的账户创建的，那么，恢复账号就是其父账号。</p><p><img src="/images/downloaded/hive-steem-steem_0.jpg" alt="image.png"></p><a id="more"></a><p>那么，这意味着什么呢？如果你的Hive密码丢失了，那么你所设置的Recovery account是可以帮你找回密码的。过去在Steem网络中，steem属于’官方’账号，在丢失密码时可以向其寻求帮助来找回密码。但是，在Hive中，steem这个账号似乎没有这个义务来帮助用户恢复密码了。</p><p>那么，对于众多Hive用户来说，建议更换Recovery账号，这样万一不幸丢失密码，可以多一层保险。推荐设置为自己家人或者好友的账号作为恢复账号。甚至，设置一个小号作为恢复账号都可以。</p><p>如果打算修改系统恢复账号，可以有以下几种方式：</p><p>首先，可以通过peakd.com来进行恢复。在首页中单击”ACTIONS”-&gt;”Keys &amp; Permissions”，</p><p><img src="/images/downloaded/hive-steem-steem_1.jpg" alt="image.png"></p><p>然后选择：”Recovery account”</p><p><img src="/images/downloaded/hive-steem-steem_2.jpg" alt="image.png"></p><p>然后按照提示进行操作就可以。在操作过程中需要提供Owner Key。</p><p>第二种方式：写一段简短的代码来实现这个操作。我是信任peakd.com这个网站的，但还是不想提供自己的Owner key给第三方。这时，可以通过Beem库实现这个操作。毕竟这是开源软件，可以读一下源代码明白是怎么运作的。具体更改恢复账号操作的源代码如下：</p><pre><code>import beemusername = &apos;aafeng.test&apos;wif = {  &quot;owner&quot;: “YOUR_OWNER_KEY”}hive = beem.Steem(nodes=[&apos;https://api.hive.blog&apos;], keys=wif)account = beem.account.Account(username, steem_instance=hive)account.change_recovery_account(new_recovery_account=&apos;aafeng&apos;)</code></pre><p>运行这段程序，可以看到，我测试账号的恢复账号更改操作已经提交。</p><p><img src="/images/downloaded/hive-steem-steem_4.jpg" alt="image.png"></p><p>需要注意的是，出于账户安全的考虑，这个操作需要30天才能完成。</p><p>关于更多恢复账号的讨论，可以参阅这篇英文文章：<a href="https://peakd.com/witness-update/@engrave/review-your-recovery-account-if-you-dont-want-to-lose-your-assets" rel="external nofollow noopener noreferrer" target="_blank">https://peakd.com/witness-update/@engrave/review-your-recovery-account-if-you-dont-want-to-lose-your-assets</a></p>]]></content>
    
    <summary type="html">
    
      Hive和Steem都已经分家了，绝大多数账户的恢复账户还都是Steem意味着什么？
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="Steem" scheme="https://aafenguk.github.io/tags/Steem/"/>
    
      <category term="账户" scheme="https://aafenguk.github.io/tags/%E8%B4%A6%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>实时推送Hive区块链信息到Telegram客户端（1）</title>
    <link href="https://aafenguk.github.io/hive-telegram-1/"/>
    <id>https://aafenguk.github.io/hive-telegram-1/</id>
    <published>2020-04-08T05:49:03.000Z</published>
    <updated>2020-04-13T19:28:11.923Z</updated>
    
    <content type="html"><![CDATA[<p>Hive的网页客户端有一个消息通知功能（Notificaitons），每次登录Hive之后，就会看到和你账户相关的信息，比如：谁给你点赞，留言，转发，提到你等等信息。</p><p><img src="/images/downloaded/hive-telegram-1_0.jpg" alt="image.png"></p><p>但是，通过这种方式来查看各种通知的体验并不好。首先需要打开hive/peakd的页面，然后需要从菜单中选择查看通知才能够看到。而且，我们不可能总去刷Hive的网页吧。因此，更为便捷和方便的方式就是通过读取Hive区块链的信息，进行分析，找出自己感兴趣的信息，然后发送给自己的Telegram客户端/其他客户端。</p><a id="more"></a><p>要实现这个功能，需要考虑以下这些因素：</p><p>1）区块链信息的读取。这部分可以通过调用Hivepy库中的相关功能来实现。<br>2）定义你感兴趣的规则。比如：所有给你点赞的信息你都想得到通知，某位大鲸发的所有贴子你都想得到通知，任何和你账户相关的转账操作。等等等等。<br>3）配置一个Telegram机器人，一旦第二步中有符合条件的消息，发送给Telegram客户端。当然，这里非常灵活，你可以配置自己喜欢的客户端，比如Slack，Discord等等，道理都是类似的。</p><p>这篇文章主要来说一说如何检测Hive区块链的信息。</p><p>基本思路就是：首先获取当前区块，然后检测当前块中是否有自己感兴趣的信息，如果有的话，存储到一个变量中以便后面发送/处理。之后向前回溯上一个区块，再做同样的检测，如此进行下去，一直检测到指定数目的区块后停止。</p><p>这里就涉及一个基本的问题：究竟该向前回溯多少个区块呢？这就取决于你这个程序被执行的频率了。举个例子，如果你这个程序每三秒运行一次，而Hive区块链每三秒生成一个块(印象中Steem区块链是每三秒一块，Hive应该没有变)，那么你的程序就不需要进行回溯了。如果你的程序每一分钟运行一次的话，那么你的程序需要回溯60/3 - 1次。</p><p>下面先看看如何读取当前区块：</p><pre><code>from hive import Hivefrom hive.blockchain import Blockchainhblocks = Hive()b       = Blockchain()cb      = b.get_current_block()print(cb)</code></pre><p>运行上面程序，可以看到其输出结果为：</p><pre><code>{&apos;block_id&apos;: &apos;0285ea9524d0cc9609991b4e15f52dfbae4663a5&apos;, &apos;signing_key&apos;: &apos;STM6ZHuTjdyS2vPLsaTyd1bsguGo28jsNcKKASFFTbckBWNKpFqdo&apos;, &apos;timestamp&apos;: &apos;2020-04-07T11:07:54&apos;, &apos;extensions&apos;: [], &apos;transaction_merkle_root&apos;: &apos;ce9c9aea30054f975f69be2bbf852b1804c2eee1&apos;, &apos;transaction_ids&apos;: [&apos;e2134800e3a04dd519d43242d33b938d446508b1&apos;, &apos;e5a979e66d092b5c4c2936bbdc68fa9287a244d9&apos;, &apos;c2cf361839450ab9f3a0176135edeb6d81b9bd90&apos;], &apos;witness&apos;: &apos;blocktrades&apos;, &apos;witness_signature&apos;: &apos;1fd20adda3b1f85adcb864661fef0d696a626b3eb9f4301b0381e69bd3aded604f4d77bfa409554ba4c0a42e43fe368ff992360039f2714e28f5b2fdb20356ad0d&apos;, &apos;previous&apos;: &apos;0285ea94c52b1aeda5ed28063a7c64fb5b881f31&apos;, &apos;transactions&apos;: [{&apos;block_num&apos;: 42330773, &apos;ref_block_prefix&apos;: 4010214059, &apos;transaction_num&apos;: 0, &apos;signatures&apos;: [&apos;1f116bb1406e8479fd0644e7e8288510f4ea61d65bd1614e03fd67e204c0c2fa0f1a4ebb3d0632131005b0c44f5191b75bec768e96b08c6fc983e049c5d1c61864&apos;], &apos;extensions&apos;: [], &apos;transaction_id&apos;: &apos;e2134800e3a04dd519d43242d33b938d446508b1&apos;, &apos;expiration&apos;: &apos;2020-04-07T11:17:45&apos;, &apos;ref_block_num&apos;: 60034, &apos;operations&apos;: [[&apos;vote&apos;, {&apos;weight&apos;: 10000, &apos;voter&apos;: &apos;news-steem&apos;, &apos;permlink&apos;: &apos;20200407t104855949z-post&apos;, &apos;author&apos;: &apos;minimalpris&apos;}]]}, {&apos;block_num&apos;: 42330773, &apos;ref_block_prefix&apos;: 3413890307, &apos;transaction_num&apos;: 1, &apos;signatures&apos;: [&apos;205471fe218b0b09b9a0a2ad860286b0a110ebb6d7ef3df6b624b976506054fc645f1cfe2e371a236cd79bb97d7a7a8682ffa00994d3fefd18bf62289ebc3a3e63&apos;], &apos;extensions&apos;: [], &apos;transaction_id&apos;: &apos;e5a979e66d092b5c4c2936bbdc68fa9287a244d9&apos;, &apos;expiration&apos;: &apos;2020-04-07T11:08:21&apos;, &apos;ref_block_num&apos;: 60051, &apos;operations&apos;: [[&apos;vote&apos;, {&apos;weight&apos;: 4000, &apos;voter&apos;: &apos;retinox&apos;, &apos;permlink&apos;: &apos;it-was-all-about-green-a-restful-pleasant-color&apos;, &apos;author&apos;: &apos;priyanarc&apos;}]]}, {&apos;block_num&apos;: 42330773, &apos;ref_block_prefix&apos;: 3519458629, &apos;transaction_num&apos;: 2, &apos;signatures&apos;: [&apos;204064b9720aa2aa1a8380e7b81bdb0f332a628608db586fd4a9abf1ddd03fa4137d7db804973b639032a0683f1108a1a1ed0b71c1ec4c8dd0df59fd8a6b192cfe&apos;], &apos;extensions&apos;: [], &apos;transaction_id&apos;: &apos;c2cf361839450ab9f3a0176135edeb6d81b9bd90&apos;, &apos;expiration&apos;: &apos;2020-04-07T11:17:48&apos;, &apos;ref_block_num&apos;: 60035, &apos;operations&apos;: [[&apos;vote&apos;, {&apos;weight&apos;: 600, &apos;voter&apos;: &apos;ctime&apos;, &apos;permlink&apos;: &apos;it-was-all-about-green-a-restful-pleasant-color&apos;, &apos;author&apos;: &apos;priyanarc&apos;}]]}]}</code></pre><p>如果向前回溯一次，共读取两个块的代码如下：</p><pre><code>NUMBER_OF_BLOCKS_TO_CHECK = 2 for i in range(NUMBER_OF_BLOCKS_TO_CHECK):    print(&quot;block id: %s&quot; % cb[&quot;block_id&quot;])    print(&quot;==========================&quot;)    for transaction in cb[&quot;transactions&quot;]:        for operation in transaction[&quot;operations&quot;]:            print(operation[0])                                                                                                            previousid = int(cb[&quot;previous&quot;][:8], base=16)    cb = b.hive.get_block(previousid)</code></pre><p>其运行结果如下：</p><pre><code>block id: 0285eb1b051eb25a0475e4867499303f48d7d77e==========================transfervotecustom_jsonvotevoteblock id: 0285eb1aff2e699579bdd7136493f3a5ea4dedbf==========================votevotevotevotevotevotevotevotevotevotevotevote</code></pre><p>至此，我们已经可以读取块中的信息，下一篇文章会说说怎么定义感兴趣的规则。</p>]]></content>
    
    <summary type="html">
    
      实时推送Hive区块链信息到Telegram客户端（1）
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="Telegram" scheme="https://aafenguk.github.io/tags/Telegram/"/>
    
  </entry>
  
  <entry>
    <title>作为用户，看好Hive链生态系统，加仓HIVE</title>
    <link href="https://aafenguk.github.io/hive-hive/"/>
    <id>https://aafenguk.github.io/hive-hive/</id>
    <published>2020-04-07T04:34:51.000Z</published>
    <updated>2020-04-13T19:30:39.841Z</updated>
    
    <content type="html"><![CDATA[<p>自从上周六STEEM发生0.22.8888软分叉，冻结众多前见证人资产之后，昨天HIVE币价暴跌，最低时被腰斩。</p><p><img src="/images/downloaded/hive-hive_0.jpg" alt="image.png"></p><a id="more"></a><p>关于HIVE和STEEM的硬分叉，双方可以说是各执一词，我就不在这里做过多评论了。但作为STEEM/HIVE用户，就目前而言，我更看好HIVE的生态系统。毕竟大多数的Dapp都迁移到Hive网络上了。包括这两天众多Dapp都要使用的基础服务Steemconnect也已经声明将于六月停止在Steem上的服务，在Hive上的hivesigner则可以正常使用。</p><p>由于HIVE有着一个完善的生态系统，因此我相信HIVE的币价会回归正常。在B网加仓了HIVE：</p><p><img src="/images/downloaded/hive-hive_1.jpg" alt="image.png"></p><p><strong>郑重声明，这只是我的个人行为，不能作为你的投资建议，风险自负。</strong></p><p>作为一个普通用户，我更赞同早期Steem的宣传口号：Money talks，哪边把用户量做上去，把币价抬起来，哪边就能吸引更多的用户。目前我看到的是硬分叉前Steem中的大多数Dapp都迁移到了Hive网络，这样就会携带其大量用户进入Hive。当然，也期待孙老板能把Steem的蛋糕做大，币价也能做上去。</p>]]></content>
    
    <summary type="html">
    
      作为用户，看好Hive链生态系统，加仓HIVE
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
  </entry>
  
  <entry>
    <title>我的第一次烘培经历</title>
    <link href="https://aafenguk.github.io/5wpl8/"/>
    <id>https://aafenguk.github.io/5wpl8/</id>
    <published>2020-04-05T09:36:24.000Z</published>
    <updated>2020-04-13T14:43:37.445Z</updated>
    
    <content type="html"><![CDATA[<p>媳妇前两天过生日。在现在疫情下考虑还是不去买生日蛋糕了。何况英国超市中的生日蛋糕上面都是厚厚的一层糖霜，想想就够了。于是决定，自己动手给媳妇做一个生日蛋糕。先上个成品图吧：</p><p><img src="/images/downloaded/5wpl8_0.jpg" alt="image.png"></p><a id="more"></a><p>其实，媳妇绝对是一个烘培高手，一般孩子们和我的生日蛋糕都是她来做。各种糕点都是轻松搞定，什么戚风蛋糕，中式月饼，Brownie等等，迄今为止还没有失败的记录。做出来的糕点不仅我们自己喜欢吃，单位同事，朋友们也都是赞不绝口。但是，总不能让媳妇自己给自己做生日蛋糕吧。</p><p>何况，现在成天宅在家中，这也算带着孩子们的一项活动。于是立刻开始动手啦。</p><p>从网上查找了一下菜谱，选择了一款最为简单的海绵蛋糕作为我有生以来的第一次烘培尝试。</p><p>首先用打蛋器将鸡蛋打好，菜谱上说要打的非常起泡才好。但我用打蛋器只能打成这个程度，随它去吧。</p><p><img src="/images/downloaded/5wpl8_1.jpg" alt="image.png"></p><p>然后在蛋液中混入食用油，糖，牛奶，再用打蛋器打好。</p><p><img src="/images/downloaded/5wpl8_2.jpg" alt="image.png"></p><p>接下来将面粉放入蛋液中并搅匀。在这个步骤中比例是很关键的。按照教程上说的，蛋/糖/面粉的比例是2:1:1，最佳状态是最终的食材混合物能够达到粘在搅拌器上不掉下来的程度。但我按照这个比例配出来的太稀了，根本达不到这个效果。可能是我中间按照自己的感觉加入了牛奶和食用油的原因吧。于是就不停的加入面粉。最终根本就不管这个比例了，完全跟着感觉走。后来和媳妇请教时才知道，她每次都是严格按照比例，用厨房秤称出每一项食材的重量的。哎，看样子，做任何事情都是有规矩的，不能像我这样随意来。也许，只有达到高手境界才能随意发挥吧。</p><p>也不知道加了多少面粉之后，食材的混合物终于可以挂在搅拌器上了。我迫不及待的将其导入烘培盘中，然后在事先预热的烤箱中烤了共25分钟。</p><p>蛋糕终于烤好了！尽管没有媳妇烤的蛋糕松软，但是似乎味道还很不错。我这第一次的尝试也算成功了吧。。。</p>]]></content>
    
    <summary type="html">
    
      我的第一次烘培经历
    
    </summary>
    
      <category term="美食" scheme="https://aafenguk.github.io/categories/%E7%BE%8E%E9%A3%9F/"/>
    
    
      <category term="生日" scheme="https://aafenguk.github.io/tags/%E7%94%9F%E6%97%A5/"/>
    
      <category term="蛋糕" scheme="https://aafenguk.github.io/tags/%E8%9B%8B%E7%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>通过程序自动获得Hive免费账号</title>
    <link href="https://aafenguk.github.io/autoclaim-hive-account/"/>
    <id>https://aafenguk.github.io/autoclaim-hive-account/</id>
    <published>2020-04-04T09:40:15.000Z</published>
    <updated>2020-04-13T19:31:11.969Z</updated>
    
    <content type="html"><![CDATA[<p>前几天写了<a href="/@aafeng/hive">一篇文章</a>总结了如何使用第三方工具获得免费账号。但作为一个懒人，肯定还是想要通过程序自动实现的好。下面介绍一个完整的步骤。</p><p><img src="/images/downloaded/autoclaim-hive-account_0.jpg" alt="image.png"></p><a id="more"></a><p>首先说一说前提条件。你的账户需要足够的HP才可以，我现在有5000多的HP，满血时只能获得两个免费账号。同时需要事先安装好<a href="https://github.com/holgern/beem" rel="external nofollow noopener noreferrer" target="_blank">Beem</a>。</p><p>程序的基本思路就是根据目前Resource Credits的百分比来决定是否要领取免费账号（Claim account）。比如：可以设置为如果RC &gt;= 80%，就进行领取。</p><p>至于目前RC百分比的判断，可以采用如下的代码：</p><pre><code>from beem.account import Accountcreator = Account(&apos;aafeng&apos;)current_rc = float(creator.get_rc()[&apos;rc_manabar&apos;][&apos;current_mana&apos;])max_rc = float(creator.get_rc()[&apos;max_rc&apos;])print(100 * current_rc / max_rc)</code></pre><p>其输出结果为：</p><pre><code>76.26412538197629</code></pre><p>这个数字就是目前RC的百分比。接下来需要定义一个RC_THRESHOLD,再用上面的百分比和RC_THRESHOLD进行比较，从而决定是否要Claim account。使用Beem claim account的代码片段如下：</p><pre><code>RC_THRESHOLD = 75hive = Steem(node=&quot;https://anyx.io&quot;, keys=[active_key])if 100* current_rc / max_rc &gt; RC_THRESHOLD:    hive.claim_account(‘aafeng’)</code></pre><p>把上面的代码放在一起：</p><pre><code>from sys import argvfrom beem import Steemfrom beem.account import AccountRC_THRESHOLD = 75if __name__ == &quot;__main__&quot;:    user       = argv[1]    active_key = argv[2]    hive = Steem(node=&quot;https://anyx.io&quot;, keys=[active_key])                                                                                creator = Account(user)    current_rc = float(creator.get_rc()[&apos;rc_manabar&apos;][&apos;current_mana&apos;])    max_rc = float(creator.get_rc()[&apos;max_rc&apos;])    if 100* current_rc / max_rc &gt; RC_THRESHOLD:        hive.claim_account(creator)                                                                                                              print(&quot;Claimed an account&quot;)    else:        print(&quot;Below RC threshold&quot;)</code></pre><p>运行这个程序：</p><pre><code>python autoca.py aafeng YOUR_ACTIVE_KEY</code></pre><p>已经成功的Claim了一个账号。再把这个程序加入Cron job，就可以完全不用管它了。。。</p><p>当然，对于HP值很大的账号来说，可以在程序中多次Claim账号，这就需要把上面的程序稍作修改，每次Claim完之后再检测一下当前的RC百分比，然后再次进行判断来决定是否继续Claim。这里需要注意每次Claim账号之后，需要在程序中停顿几秒，等待节点信息更新后，否则可能获取不到最新的RC百分比。</p>]]></content>
    
    <summary type="html">
    
      通过程序自动获得Hive免费账号
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="免费账号" scheme="https://aafenguk.github.io/tags/%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>注册赞赏公民，支持Steem中文社区 + 使用经验分享</title>
    <link href="https://aafenguk.github.io/6sxpjo/"/>
    <id>https://aafenguk.github.io/6sxpjo/</id>
    <published>2020-04-03T04:56:33.000Z</published>
    <updated>2020-04-13T19:27:23.295Z</updated>
    
    <content type="html"><![CDATA[<p>受 @ericet 影响，最近尝试使用 like 的赞赏功能。感觉非常好用，就交付了每月5美元的赞赏公民(CIVIC LIKER)月费。这样我的赞赏能量就更大了。同时昨天在 @ericet 提供的核心代码基础上进行了修改，写了一段代码，对 <a href="https://steem.buzz/" rel="external nofollow noopener noreferrer" target="_blank">https://steem.buzz/</a> 上所有配置了赞赏功能的 CN 区用户自动进行了赞赏。</p><p><img src="/images/downloaded/6sxpjo_1.jpg" alt="image.png"></p><a id="more"></a><p>下面总结一下自己的体会，完全是自己的理解，如有偏差，欢迎大家指正。</p><p>首先，什么是赞赏公民？赞赏公民类似于Steem/Hive上的大鲸，其赞赏(点赞)的权重较大。但Steem/Hive上的大鲸的点赞力度也根据SP/HP值而有所区分。赞赏公民只有每月5美元这一种选项，因此点赞权重应该一样。</p><p>其次，在Steem/Hive中有Voting Power的概念，满血时点赞产生的收益最大，随着点赞次数增加，点赞产生的收益逐步递减。当VP为0时，点赞不产生任何收益。但在like网络中似乎并没有VP的概念，似乎可以无数次点赞。但是，根据我目前测试，针对同一个用户的多篇文章点赞，其产生的收益并不相同，似乎也在递减。我目前看到的是前两篇一样，第三篇的收益会降低。再往后目前还没有尝试。但具体细节怎样，由于找不到相关文档，我目前也不清楚。</p><p>关于Steem/Hive网络和赞赏功能的集成。目前似乎只有 @ericet 在 <a href="https://steem.buzz/" rel="external nofollow noopener noreferrer" target="_blank">https://steem.buzz/</a> 上将赞赏功能和Steem集成到了一起。目前我还没有看到将赞赏功能和Hive整合的网站。</p><p>其实，like网络已经提供了很多方式和你的自媒体进行整合，比如有Wordpress插件，Medium集成等。对于其它系统搭建的网站，都不难整合的。细节请看到这里：<a href="https://github.com/likecoin/likecoin-button" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/likecoin/likecoin-button</a></p><p><img src="/images/downloaded/6sxpjo_4.jpg" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      注册赞赏公民，支持Steem中文社区 + 使用经验分享
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Steem" scheme="https://aafenguk.github.io/tags/Steem/"/>
    
      <category term="赞赏公民" scheme="https://aafenguk.github.io/tags/%E8%B5%9E%E8%B5%8F%E5%85%AC%E6%B0%91/"/>
    
      <category term="Likecoin" scheme="https://aafenguk.github.io/tags/Likecoin/"/>
    
  </entry>
  
  <entry>
    <title>疫情期间团结互助，共度难关</title>
    <link href="https://aafenguk.github.io/3a72oh/"/>
    <id>https://aafenguk.github.io/3a72oh/</id>
    <published>2020-04-01T12:36:30.000Z</published>
    <updated>2020-04-13T14:48:22.070Z</updated>
    
    <content type="html"><![CDATA[<p>英国疫情发展至今，大家纷纷在家工作，为了保持心理健康，比平时多加了很多虚拟社交场景。比如：虚拟生日party，虚拟酒吧聚会，虚拟tea break等等。就连有的同事离职，也没法去见上一面，只能在网上道别。在这种种“奇怪”的虚拟场景之外，我也听到，看到了很多感人的小事，闪烁着人性的光辉。</p><p><img src="/images/downloaded/3a72oh_0.jpg" alt="image.png"><br>图源：pixabay</p><a id="more"></a><p>首先是对周边一些老人的关注。在冠状病毒面前，他们是抵抗力最弱的群体。按照政府要求，他们需要在家中尽量不要外出。因此，很多人纷纷帮助身边的一些老年人购买生活必需品，主动送至家们口，让众多老人感受到社区的关心。</p><p>其次是对那些自雇人群的照顾。我家孩子上的一些课外班，比如芭蕾舞，学费已经交过了，但是目前情况下已经无法继续开班。老师已经发邮件给家长们同意将学费退还。但很多家长提出现在疫情下老师相当失去了收入，倡议大家不再要求老师退还学费了。家长们无一例外的同意，非常愉快的就达成了共识。</p><p>还有就是对周边一些小店铺的照顾。由于这些店铺本身客源就少，疫情可能会将它们压垮，因此，如果需要购买生活必备品时，优先考虑一些周边的店铺，能帮的话尽量帮一把。</p><p>也有一些周边的人在网络上组织了一些公益性质的免费课程。参与者象征性的缴纳一些费用，该费用会被捐赠给NHS。</p><p>诸如此类的事情还有很多，虽然都很小，但却让人非常感动。让我们感受到在此艰难时刻，大家在想着彼此，给了彼此前进的动力。</p>]]></content>
    
    <summary type="html">
    
      疫情期间团结互助，共度难关
    
    </summary>
    
      <category term="生活" scheme="https://aafenguk.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://aafenguk.github.io/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>全副武装去了趟超市</title>
    <link href="https://aafenguk.github.io/4vss8x/"/>
    <id>https://aafenguk.github.io/4vss8x/</id>
    <published>2020-03-30T19:55:51.000Z</published>
    <updated>2020-04-13T14:50:07.169Z</updated>
    
    <content type="html"><![CDATA[<p>最近英国的疫情越来越严重，在家中已经宅了近两个星期。但今天家中的蔬菜水果快吃光了，决定去超市补充一些生活必需品。</p><p><img src="/images/downloaded/4vss8x_0.jpg" alt="image.png"><br>图源：pixabay</p><a id="more"></a><p>出发前做好了充足的准备，一次性手套，口罩，墨镜一应俱全。嗯，没错，是墨镜。因为没有买到护目镜，所以用墨镜来替代。</p><p>开车到了超市后，发现超市门口已经有很多人在排队了。大家都非常注意，彼此之间保持了两米以上的距离。感觉气氛有些压抑，没有人说话交谈，只是跟着队伍在默默的往前移动。</p><p><img src="/images/downloaded/4vss8x_1.jpg" alt="image.png"><br>图源：pixabay</p><p>超市门口有员工在控制人数，等了快半个小时后终于轮到我了。进去以后，超市里的人很少。这主要是要保证”social distance“吧。相比较于两周前大家纷纷拥堵在超市中囤积生活必需品时，区别简直太大了。超市的物品非常全，可以说是堆积如山。就连两周前的紧俏商品-卫生纸也有很多。由于继续囤积了一些生活必备品，因此，这次消费的金额差不多是平时购物时的两倍。</p><p>到家后并没有对所有物品进行消毒处理，而是把物品全部先放置到了车库中。打算放上三天后再开始使用。对于一些需要在冰箱中保存的物品进行了消毒处理后放在了家中。之后按照专家的推荐边洗手边唱了两遍生日歌。。。</p><p>这次购物应该足够全家人吃上两个礼拜了。下面打算尽量选择网购，老老实实在家中宅上几个星期再说吧。。。</p>]]></content>
    
    <summary type="html">
    
      全副武装去了趟超市
    
    </summary>
    
      <category term="生活" scheme="https://aafenguk.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://aafenguk.github.io/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="超市" scheme="https://aafenguk.github.io/tags/%E8%B6%85%E5%B8%82/"/>
    
  </entry>
  
  <entry>
    <title>在Hive下尝试免费账号的创建</title>
    <link href="https://aafenguk.github.io/hive/"/>
    <id>https://aafenguk.github.io/hive/</id>
    <published>2020-03-29T09:43:21.000Z</published>
    <updated>2020-04-13T19:31:31.441Z</updated>
    
    <content type="html"><![CDATA[<p>尽管用Resource Credit创建账号已经被很多人讨论过，但自己一直没有尝试。今天在Hive下进行了尝试。下面的操作只是针对那些对编写代码不是很熟悉的朋友们的。对于众多的程序猿们，完全可以自己写一个很简单的程序来实现这个功能。</p><a id="more"></a><p>首先声明，以下操作是针对一个第三方工具进行的。在操作过程中需要提供自己账户的Active Key，因此建议大家<strong>在操作完成后更改自己的密码</strong>。</p><p>首先访问如下网址：<br><a href="https://www.reazuliqbal.com/AccountCreate/" rel="external nofollow noopener noreferrer" target="_blank">https://www.reazuliqbal.com/AccountCreate/</a></p><p>其源代码在这里：<a href="https://github.com/CodeBull/AccountCreate" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/CodeBull/AccountCreate</a></p><p>至于这个操作需要多少RC,可以在这里查询：<a href="https://beempy.com/resource_costs" rel="external nofollow noopener noreferrer" target="_blank">https://beempy.com/resource_costs</a></p><p>接下来输入自己的用户名和Active Key</p><p><img src="/images/downloaded/hive_3.jpg" alt="image.png"></p><p>然后单击“Claim Account”，界面上就会提示“You have successfully claimed a discounted account!”</p><p>在Hiveblocks上查看操作记录，可以看到已经创建成功；<br><img src="/images/downloaded/hive_4.jpg" alt="image.png"></p><p>同时可以看到我的Resource Credit只剩下一半了。当然，HP越多，消耗的RC百分比越少。HP太少了，甚至无法进行如下的操作。<br><img src="/images/downloaded/hive_5.jpg" alt="image.png"></p><p>接下来就可以创建账户了。输入待创建账号的用户名和密码，以及自己的Active Key，单击“Create Account”，就可以创建账号了：<br><img src="/images/downloaded/hive_6.jpg" alt="image.png"></p><p>在hiveblocks上查看，可以看到新账号已经被创建：<br><img src="/images/downloaded/hive_7.jpg" alt="image.png"></p><p>感觉RC空着也是空着，不如先领取一些”discounted account“，如果真的需要创建账号时就很方便了。</p>]]></content>
    
    <summary type="html">
    
      在Hive下尝试免费账号的创建
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="账号" scheme="https://aafenguk.github.io/tags/%E8%B4%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>英国日益严重的疫情下，记录一下那些暖心的瞬间</title>
    <link href="https://aafenguk.github.io/6fbtgr/"/>
    <id>https://aafenguk.github.io/6fbtgr/</id>
    <published>2020-03-27T16:44:33.000Z</published>
    <updated>2020-04-13T14:53:17.800Z</updated>
    
    <content type="html"><![CDATA[<p>英国的疫情进一步恶化，最近两天查尔斯王子，Johnson首相，还有卫生大臣先后被检测出新冠状病毒阳性。这也让众多英国民众更加担心接下来几周的英国疫情。</p><p><img src="https://images.hive.blog/DQmSKP2SKMN2JaH53bU8wMhwFBz5Tq2oUMHHLYPZCwcq6SE/image.png" alt="image.png"></p><p>但就在这样的疫情下，依然有着很多温暖人心的瞬间，让大家相信我们是在一起和病毒作斗争。</p><a id="more"></a><p>首先是昨晚8点钟的时候，众多家庭纷纷走出家门，站在门口和阳台上，为众多在前线工作的NHS医生，护士，及相关工作人员鼓掌加油。尽管，那些医护人员可能听不到这些掌声，但相信他们可以感受到大家对他们的尊重和鼓励。We are together!</p><p><img src="https://images.hive.blog/DQmeEtFbgcq3fUSfz2SVM3N2NUzCsDttZZuboBFyUffhsL8/image.png" alt="image.png"></p><p>还有就是针对前一段时间民众恐慌引发囤积食物而造成的食品短缺，众大超市发表联合声明，确保全部民众的生活必需品，因为这对他们而言，已经不仅仅是他们的工作了，而是一种应尽的责任。而且，很多超市还专门开辟了特殊时段，为众多在一线奋斗的人员提供优先购物通道，让他们在劳作后不用担心买不到生活必需品。</p><p><img src="https://images.hive.blog/DQmR8aW9sM4XBTxTZqXGBMKn4s6bXwP1yqpoFLmt862wbQv/image.png" alt="image.png"></p><p>由于医院的压力越来越大，因此要招募一定数量的志愿者，让人感动的是，众多民众首先想到的是如何共同努力，共度难关，而不是个人的安全，在非常短的时间内报名人数就远远超过所需人数。</p><p>这样温暖的瞬间还有很多很多，让我感受到整个人类在一起和病毒作斗争，相信终有一天我们会彻底战胜病毒。</p>]]></content>
    
    <summary type="html">
    
      英国日益严重的疫情下，记录一下那些暖心的瞬间
    
    </summary>
    
      <category term="生活" scheme="https://aafenguk.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://aafenguk.github.io/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>如何将Liker按钮集成到Hexo</title>
    <link href="https://aafenguk.github.io/liker-hexo/"/>
    <id>https://aafenguk.github.io/liker-hexo/</id>
    <published>2020-03-26T11:44:06.000Z</published>
    <updated>2020-04-13T16:44:07.392Z</updated>
    
    <content type="html"><![CDATA[<p>自从朋友将Hexo推荐给我以来，它就是我非常喜欢的静态网站生成工具了。下面把Liker按钮集成到Hexo中的步骤总结一下，让众多的Hexo网站可以通过点赞获得收益。以下以Hueman主题为例进行说明：</p><p><img src="https://images.hive.blog/DQmZN4mTS22HviH4syk66A8TBCaWbgNSJg11QqkpUcsW9Y9/image.png" alt="image.png"></p><a id="more"></a><p>首先，从官方github获取对应的css并将其转换为styl格式，为了大家方便，我直接把转换好的贴到这里：</p><pre><code>.lc-page-header    display none    height 0px.likecoin-button    position relative    width 100%    max-width 485px    max-height 240px    margin 0 auto    &amp; &gt; div        padding-top 49.48454%    &amp; &gt; iframe        position absolute        top 0        left 0        width 100%        height 100%</code></pre><p>将上面文件保存至：themes/hueman/source/css/liker.styl</p><p>第二步，打开 themes/hueman/source/css/style.styl 文件，并添加如下行：</p><pre><code>@import &quot;liker&quot;</code></pre><p>第三步，打开themes/hueman/layout/common/article.ejs，将如下代码添加到想要的位置（<strong>注意替换成你自己的liker ID</strong>）：</p><pre><code>&lt;div class=&quot;likecoin-embed likecoin-button&quot;&gt;  &lt;div&gt;&lt;/div&gt;    &lt;iframe scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;https://button.like.co/in/embed/aafeng17936/button?referrer=&lt;%- encodeURIComponent(post.permalink) %&gt;&quot;&gt;&lt;/iframe&gt;                               &lt;/div&gt;</code></pre><p>接下来重新生成网站并发布到服务器就可以了。</p>]]></content>
    
    <summary type="html">
    
      如何将Liker按钮集成到Hexo
    
    </summary>
    
      <category term="技术" scheme="https://aafenguk.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Likecoin" scheme="https://aafenguk.github.io/tags/Likecoin/"/>
    
      <category term="Hexo" scheme="https://aafenguk.github.io/tags/Hexo/"/>
    
      <category term="Liker" scheme="https://aafenguk.github.io/tags/Liker/"/>
    
  </entry>
  
  <entry>
    <title>Hive Wallet迟迟不能用，如果想要转移资产该怎么办？</title>
    <link href="https://aafenguk.github.io/hive-wallet/"/>
    <id>https://aafenguk.github.io/hive-wallet/</id>
    <published>2020-03-24T21:15:51.000Z</published>
    <updated>2020-04-13T19:31:56.801Z</updated>
    
    <content type="html"><![CDATA[<p>Hive已经推出好几天了，但其钱包功能一直不能用，每次点击“Wallet”时，都会给出一个很不友好的出错页面：</p><p><img src="https://images.hive.blog/DQmSGE1StLryGD95kbt5ddFepxtswaWAze7EwYKkpr7Av3g/image.png" alt="image.png"></p><a id="more"></a><p>那么，如果真的需要将自己持有的Hive / HBD等转移到其他账号，或者交易所的话，该如何做呢？其实也很简单，只需要写几行Python代码就可以实现这样的功能。我这里使用的是<a href="https://github.com/pharesim/hive-python/" rel="external nofollow noopener noreferrer" target="_blank">hive-python</a>，但里面有个坑需要填。具体请看这篇文章：<a href="/@aafeng/hive-hivepy">如何在Hive上使用hivepy</a></p><p>具体代码就很简单了：</p><pre><code>import sysfrom hive import Hivefrom hive.account import Accountif len(sys.argv) !=7:  print (&apos;Usage: transfer.py ACCOUNT ACTIVE_KEY TO AMOUNT HBD/HIVE MEMO&apos;)  exit()_from       = sys.argv[1]_active_key = sys.argv[2]_to         = sys.argv[3]_amount     = float(sys.argv[4])_type       = sys.argv[5]_memo       = sys.argv[6]wif = {  &quot;active&quot;: _active_key}hive = Hive(keys=wif)account = Account(_from)hbdbalance  = float(account.balances[&quot;available&quot;][&quot;HBD&quot;])hivebalance = float(account.balances[&quot;available&quot;][&quot;HIVE&quot;])if _type==&apos;HBD&apos; and hbdbalance &lt; _amount:  print(&quot;Account balance low: %s&quot; % (str(hbdbalance)))  exit()if _type==&apos;HIVE&apos; and hivebalance &lt; _amount:  print(&quot;Account balance low: %s&quot; % (str(steembalance)))  exit()hive.transfer(_to, _amount, _type, memo=_memo, account=_from)print (&quot;transferred %s %s to %s&quot; % (str(_amount),_type,_to))</code></pre><p>运行：</p><pre><code>python transfer.py aafeng YOUR_ACTIVE_KEY aafeng.test 0.001 HIVE test</code></pre><p>从hiveblocks可以看到转账已经成功。</p><p><img src="https://images.hive.blog/DQmeo9z4kwDarkA5Cr91FyWfuPV9mYcxgdZKCCGrNo166ui/image.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      Hive Wallet迟迟不能用，如果想要转移资产该怎么办？
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="转账" scheme="https://aafenguk.github.io/tags/%E8%BD%AC%E8%B4%A6/"/>
    
  </entry>
  
  <entry>
    <title>英国疫情现状+漫长的闭关开始</title>
    <link href="https://aafenguk.github.io/72etvv/"/>
    <id>https://aafenguk.github.io/72etvv/</id>
    <published>2020-03-23T16:34:24.000Z</published>
    <updated>2020-04-13T14:57:22.221Z</updated>
    
    <content type="html"><![CDATA[<p>英国的疫情已经越来越严重了，甚至很多人都感觉英国在步意大利的后尘。自从“全民免疫”的概念提出来之后，英国政府最近的政策完全反转了，提出了一系列严格举措来控制疫情蔓延。</p><p><img src="https://images.hive.blog/DQmbUJAGkfow1ky9mup7vR4E8coyhCmXsj5sgnRiPZEw7BG/image.png" alt="image.png"></p><a id="more"></a><p>首先是自上周五放学后开始，全英所有大中小学全面停课。同时鼓励所有有可能的单位员工全部在家办公。继而又出台政策，要求所有餐厅，酒吧，剧院等暂停营业。小企业主可以和政府申请财政补助，停业公司中在家的员工则会由政府发放80%的工资而不用工作。</p><p>然而，让我非常不理解的是，由于这个周末的天气很好，众多英国家庭纷纷外出，享受这宝贵的阳光。很多交通干线上纷纷堵车，各种公园，景点人满为患。仿佛全面度假要开始一般。。。</p><p>对于这点，我是真心无语。。。英国NHS的众多医生护士纷纷提出：”I stay at work for you, You stay at home for us.” 的口号，号召大家齐心协力共抗病毒。英国议会也全票通过最新法案，赋予政府更大权限，如有必要，将会采取更加严厉的措施，避免疫情的进一步恶化。</p><p>我和周边的朋友家庭们只能做好我们该做的，好好的宅在家中。期待疫情早日消除，所有人都能尽情享受这无限的春光。</p>]]></content>
    
    <summary type="html">
    
      英国疫情现状+漫长的闭关开始
    
    </summary>
    
      <category term="生活" scheme="https://aafenguk.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://aafenguk.github.io/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="在家工作" scheme="https://aafenguk.github.io/tags/%E5%9C%A8%E5%AE%B6%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>如何在Hive上使用hivepy</title>
    <link href="https://aafenguk.github.io/hive-hivepy/"/>
    <id>https://aafenguk.github.io/hive-hivepy/</id>
    <published>2020-03-22T15:11:51.000Z</published>
    <updated>2020-04-13T19:32:16.308Z</updated>
    
    <content type="html"><![CDATA[<p>最近Hive和Steem分家，一直考虑原来在Steem下的一些程序如何能在Hive继续使用的问题。今天正好看到O哥发的<a href="https://hive.blog/@oflyhigh/hive-steem-python" rel="external nofollow noopener noreferrer" target="_blank">这篇文章</a>,很高兴的点进去看了看，原来O哥和我卡在同样的问题上了。</p><a id="more"></a><p>简而言之，就是提示找不到’hive’这个包。错误提示是：</p><pre><code>File &quot;/home/aaf/environments/myenv/lib/python3.5/site-packages/hive/cli.py&quot;, line 78, in legacyentry    version=pkg_resources.require(&quot;hive&quot;)[0].version))</code></pre><p>其实，导致这个错误的原因是由于这里使用了错误的package名称，只要把这里的”hive”改为”hivepy”就可以了。</p><p>再运行：</p><pre><code>hivepy</code></pre><p>可以看到；</p><p><img src="/images/downloaded/hive-hivepy_0.jpg" alt="image.png"></p><p>需要注意，在调用hivepy库的时候，有些方法的名字发生了变化。必须做出相应调整，下面写了一个检查用户账号的测试程序：</p><pre><code>from sys import argvfrom hive.account import Accountfrom datetime import datetimefrom hive import converteruser = argv[1]user=user.replace(&quot;____&quot;,&quot;-&quot;)account = Account(user)cv = converter.Converter()print(&quot;Rep: %s&quot; % account.reputation(4))print(&quot;HBD: %s, HIVE: %s&quot; % (account.balances[&apos;total&apos;][&apos;HBD&apos;], account.balances[&apos;total&apos;][&apos;HIVE&apos;]))print(&quot;SP: %.2f&quot; % (cv.vests_to_hp(account.balances[&apos;total&apos;][&apos;VESTS&apos;])))print(&quot;reward_hbd_balance: %s&quot; % account.balances[&quot;rewards&quot;][&quot;HBD&quot;])print(&quot;reward_hive_balance: %s&quot; % account.balances[&quot;rewards&quot;][&quot;HIVE&quot;])print(&quot;reward_hp_balance: %.2f&quot; % cv.vests_to_hp(account.balances[&quot;rewards&quot;][&quot;VESTS&quot;]))</code></pre><p>运行：</p><pre><code>python3 checkaccount.py aafeng</code></pre><p>其输出为：</p><pre><code>Rep: 69.8117HBD: 0.433, HIVE: 47.775SP: 5344.49reward_hbd_balance: 0.0reward_hive_balance: 0.0reward_hp_balance: 2.14</code></pre>]]></content>
    
    <summary type="html">
    
      如何在Hive上使用hivepy
    
    </summary>
    
      <category term="区块链" scheme="https://aafenguk.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="Hive" scheme="https://aafenguk.github.io/tags/Hive/"/>
    
      <category term="Hivepy" scheme="https://aafenguk.github.io/tags/Hivepy/"/>
    
  </entry>
  
  <entry>
    <title>在家办公的进一步体验</title>
    <link href="https://aafenguk.github.io/293cvd/"/>
    <id>https://aafenguk.github.io/293cvd/</id>
    <published>2020-03-19T11:02:54.000Z</published>
    <updated>2020-04-13T15:04:14.317Z</updated>
    
    <content type="html"><![CDATA[<p>跟国内的朋友们聊天得知，很多地方都开始复工了，有些餐厅也陆陆续续开始营业了。可反观英国这边，这周五全英国的大中小学全面听课，孩子们带回了很多作业，课外书，准备开启在家自学的节奏。众多单位也正式要求员工们开始在家办公。这节奏整个比国内滞后了一个多月啊，希望再过几周也能也能同样赶上国内现在的节奏。。。不过目前我接到的信息是要做好在家宅几个月的准备。。。</p><p><img src="/images/downloaded/293cvd_0.jpg" alt="image.png"></p><a id="more"></a><p>虽然在家办公能够节省在路上的时间，但在家的干扰可能比较多，因此首先需要选择一种让自己注意力集中的方式，比如：Pomodoro番茄钟。<br><img src="/images/downloaded/293cvd_1.jpg" alt="image.png"></p><p>对于在家办公族来说，大多数人选择的都是使用笔记本电脑，这样身体和电脑的距离，角度都和使用台式机不一样，因此时间长了，特别容易引起腰部，颈部肌肉的疲劳。我目前仅仅在家工作了两天，就已经感觉到肌肉酸痛了，因此一定要注意多舒展筋骨。</p><p>还有一个问题就是，在家宅时间长了，都会觉得很难受，这就要注意各种心理疾病，因此单位提议每天两次休息的时候，大家在slack上聊聊天，分享一下好玩的事情等，单位老大首先带头发了自己烘培的蛋糕。。。</p><p><img src="/images/downloaded/293cvd_2.jpg" alt="image.png"></p><p>不知道下周孩子们都在家了会怎样，现在想想就头大。。。</p>]]></content>
    
    <summary type="html">
    
      在家办公的进一步体验
    
    </summary>
    
      <category term="工作" scheme="https://aafenguk.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="疫情" scheme="https://aafenguk.github.io/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="在家办公" scheme="https://aafenguk.github.io/tags/%E5%9C%A8%E5%AE%B6%E5%8A%9E%E5%85%AC/"/>
    
      <category term="停学" scheme="https://aafenguk.github.io/tags/%E5%81%9C%E5%AD%A6/"/>
    
  </entry>
  
</feed>
