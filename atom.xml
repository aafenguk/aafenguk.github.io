<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aafeng</title>
  <icon>https://www.gravatar.com/avatar/a176a52d9d4ac7d9f90a5204a7d87bcd</icon>
  <subtitle>aafeng&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.aafeng.uk/"/>
  <updated>2020-11-22T10:35:08.403Z</updated>
  <id>https://www.aafeng.uk/</id>
  
  <author>
    <name>aafeng</name>
    <email>aafenguk@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>放过烂人烂事，其实就是放过自己</title>
    <link href="https://www.aafeng.uk/forgive-yourself/"/>
    <id>https://www.aafeng.uk/forgive-yourself/</id>
    <published>2020-11-22T10:35:08.403Z</published>
    <updated>2020-11-22T10:35:08.403Z</updated>
    
    <content type="html"><![CDATA[<p>前一段提到过，在更换家中户门的时候，遭遇了一个奇葩的人。和他面对面交流的时候，感觉人很好也很靠谱。但和他打电话预约装门时间的时候，却连续放了我三次鸽子。这两天终于下定决心，不再和这个烂人纠缠。哪怕再找一个更贵一些的公司，也认了。</p><p><img src="https://user-images.githubusercontent.com/63479035/99901303-ae4a4780-2cad-11eb-8eea-74b702cbeb96.png" alt="image"><br>Source: Pixabay</p><p>最开始的时候，还想过要投诉他。毕竟像他这样对客户的，我到了英国这么多年还是头一次见过。但给他公司打电话之后才知道他就是老板。当然，在英国这里还有很多行业的监管机构，但却费时费力，到底要不要投诉？</p><p>后来慢慢想通了，我的时间有限，该做的事情又不少，干嘛把时间和经历浪费在这种人身上呢？就算真的去投诉他。要花费自己不少时间和精力，同时还影响自己的心情。</p><p>其实，在生活中难免会遇到各种各样不顺心的事情。这个时候就有两个选择：花时间和精力去较真，或者不与之纠缠，把精力集中到自己该做的事情上。</p><p>在这个时候就需要仔细考虑了，当前的烦心事真的需要花费时间和精力去做吗？自己是不是还有更重要的事情去做？有个成语叫做：退一步海阔天空。现在随着年龄的增长，慢慢体会到了它的含义。有的时候，退一步并不代表委曲求全，而是不要把精力和时间浪费到不该浪费的事情上。</p><p>举个最简单的例子：如果在街上有一只狗冲你叫了几声，在经历过短暂的惊吓之后，难道你要和它计较吗？</p><p>还曾经听过一个更为极端的例子。有位男士生活非常美满，事业有成，家庭幸福。但有一次在行车的时候自己的车被另外一个人刮蹭了一下。他觉得过错100%在于对方，于是下车理论，两人越吵越厉害，最后动起了手。这位男士受伤后被送到医院，最终不治身亡，留下了伤心欲绝的妻儿。</p><p>我想，如果这位男士能够重新选择的话，应该不会再犯同样的错误了吧？他和一个烂人争执，最终受害的是自己和家人。如果当时退一步的话，自己还有大把的美好人生和自己心爱的人一起度过，难道不好吗？</p><p>慢慢的，我明白了这个道理，如果遇到了一些烦心事，可以考虑退一步，毕竟放过那些烂人烂事，就是放过自己。</p>]]></content>
    
    <summary type="html">
    
      放过烂人烂事，其实就是放过自己
    
    </summary>
    
      <category term="思考" scheme="https://www.aafeng.uk/categories/%E6%80%9D%E8%80%83/"/>
    
    
  </entry>
  
  <entry>
    <title>关于DynamoDB的一个误解 - 多表查询</title>
    <link href="https://www.aafeng.uk/dynamodb-joins/"/>
    <id>https://www.aafeng.uk/dynamodb-joins/</id>
    <published>2020-11-20T23:41:36.821Z</published>
    <updated>2020-11-20T23:41:36.821Z</updated>
    
    <content type="html"><![CDATA[<p>刚开始接触到DynamoDB的时候，对它有一种误解：和传统的关系型数据库相比，使用DynamoDB无法有效的进行多表查询。</p><p><img src="https://user-images.githubusercontent.com/63479035/99859907-721dc680-2b89-11eb-8af7-91f5a4c28e35.png" alt="image"></p><p>但随着学习的深入，慢慢明白了，其实DynamoDB和传统关系型数据库可以说是各有所长。DynamoDB如果设计上没有问题，可以进行类似的多表查询，而且效率奇高。但对于超级复杂的多表查询，DyanmoDB并不擅长，这是关系型数据库最为擅长的。</p><p>其实，说到DynamoDB，其最大的优点包括：</p><ul><li>由于基于键/值对的设计，其查询效率超高</li><li>基于AWS serverless，无维护成本</li><li>可以auto-scaling，可扩展性好</li></ul><p>在传统的关系型数据库中，要进行多表查询，往往会把不同表中的数据通过外键关联之后再进行查询。这样就可以组合出非常灵活的查询条件来。</p><p>在NoSQL数据库中，其设计思路从根本上是不同的。因此如果用传统的关系型数据库设计思路来理解，就会很难理解。比如在DynamoDB中，可以把在关系型数据库中的多个表放入在DynamoDB的一个表中，再通过Partition Key, Sort Key以及Global Secondary Index进行”多表“查询。</p><p>可以这么说吧，如果DynamoDB在设计时考虑到了这种组合查询的话，在后期进行开发的时候是没有问题的。由于DynamoDB是完全基于键/值进行存储的，因此其查询速度超快。但对于设计时没有考虑到的字段，就无法进行这种查询了。</p><p>因此，总结一下：如果有大量多表之间的复杂查询，选择关系型数据库。如果只是简单的”多表“查询，则应该选择NoSQL。可以这么说，90%左右的数据库选用NoSQL更为适合。只有10%左右的用例更适合选择关系型数据库。</p>]]></content>
    
    <summary type="html">
    
      关于DynamoDB的一个误解 - 多表查询
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>最近尝试的菜谱</title>
    <link href="https://www.aafeng.uk/recipes/"/>
    <id>https://www.aafeng.uk/recipes/</id>
    <published>2020-11-20T23:18:45.841Z</published>
    <updated>2020-11-20T23:18:45.841Z</updated>
    
    <content type="html"><![CDATA[<p>最近喜欢上了美食作家王刚的Youtube美食频道。按照他的菜谱做出来的菜失败率极低。但有个问题就是，每次对着视频要反复看几遍才行，比较耽误工夫。下面记录一下我做过菜的简要步骤。极个别菜是按照别的厨师菜谱做的。这样下次再做的时候就省时间了。</p><a id="more"></a><h2 id="口水鸡"><a href="#口水鸡" class="headerlink" title="口水鸡"></a>口水鸡</h2><p>姜拍散，葱切段<br>姜葱下锅，放入盐，料酒<br>整鸡放入锅中，加入花椒<br><del>大火烧开后关火，盖盖闷40分钟</del>在开水中煮30分钟，再用开水闷10分钟<br>40分钟后将鸡捞出放入凉开水中泡凉<br>料汁：姜末，蒜末，辣椒碎，盐2克，糖2勺，生抽10克，醋2克，煮鸡原汤少许，红油，花椒面<br>鸡肉切块，撒上料汁，葱花</p><h2 id="盐水鸭"><a href="#盐水鸭" class="headerlink" title="盐水鸭"></a>盐水鸭</h2><p><img src="/images/food/wanggang/yan-shui-ya.jpg" alt></p><p>将鸭肉用食盐及花椒粉腌制5个小时。<br>锅中加水烧开，放入葱，姜，八角，香叶<br>将鸭肉放入锅中煮40分钟后用凉水冷却后切成块装盘。</p><h2 id="自贡名菜-小煎鸭"><a href="#自贡名菜-小煎鸭" class="headerlink" title="自贡名菜-小煎鸭"></a>自贡名菜-小煎鸭</h2><p><img src="/images/food/wanggang/zi-gong-xiao-jian-ya.jpg" alt></p><p>将鸭子切成小块。<br><del>小辣椒50克</del>（我用的一个青椒）<br>~~小米辣30克 ~~<br>大蒜若干<br>姜片100克<br>葱两根</p><p>加料酒焯鸭肉<br>加油，花椒，炒鸭肉<br>加入<del>干辣椒</del>，大蒜，炒香<br>加入豆瓣酱，炒出红油<br>我添加了这步：加水炖30分钟，否则鸭肉不软，孩子咬不动<br>加入小辣椒，炒香<br>加入盐，糖，生抽<br>加入葱，姜片<br>加入少量香醋翻炒，出锅</p><h2 id="红烧鱼"><a href="#红烧鱼" class="headerlink" title="红烧鱼"></a>红烧鱼</h2><p>鱼洗净，切一字花刀放入盆中，准备姜片，葱段，料酒腌制10分钟。<strong>不要放盐</strong><br>准备姜末，蒜末，红泡椒碎<br>宽油炸鱼至金黄色<br>加底油，花椒，姜葱末，泡椒，豆瓣酱<br>加入清水，熬制两分钟<br>加入糖，盐，胡椒粉，生抽，醋<br>加入鱼烧8分钟后将于捞出<br>汤汁中加入淀粉收浓后淋在鱼上</p><h2 id="爆炒鱿鱼"><a href="#爆炒鱿鱼" class="headerlink" title="爆炒鱿鱼"></a>爆炒鱿鱼</h2><p>鱿鱼切花刀后切成小片，鱿鱼须切段<br>烧开水，水中加盐，多放盐<br>焯鱿鱼，放入料酒，<strong>时间一定要短</strong><br>锅中加油，蒜，葱，姜，豆瓣酱<br>加入青红椒<br>加入鱿鱼，不要翻锅<br>加入糖，酱油，料酒<br>加入生粉水勾芡</p><h2 id="藕片蒸肉"><a href="#藕片蒸肉" class="headerlink" title="藕片蒸肉"></a>藕片蒸肉</h2><p>剁五花肉肉馅，加入姜葱碎<br>盆中加入盐，酱油，蚝油三克，黄酒20克，老抽，米粉拌匀，再加入干淀粉将水分收干<br>藕去皮切薄片<br>莲藕两头切碎，胡萝卜，香菇剁碎放入拌好的肉馅盆中<br>将肉放入藕片中夹好，放入盘中<br>蒸12分钟<br>调汁：酱油，蚝油，几勺白糖<br>锅中加入调好的料汁+蜂蜜水+淀粉勾芡<br>淋在藕片上</p><h2 id="糖醋排骨"><a href="#糖醋排骨" class="headerlink" title="糖醋排骨"></a>糖醋排骨</h2><p><img src="/images/food/wanggang/tang-cu-pai-gu.jpg" alt></p><p>姜片，葱段<br>冰糖80克，醋50克，盐1克，生抽10克<br>排骨加料酒焯水<br>排骨煸炒五分钟<br>加入姜，葱，料酒，翻炒2分钟<br>加入糖色翻炒<br>加入调料汁，翻炒后加入清水<br>大火烧开后转小火炖40分钟<br>收汁时加入白芝麻<br>加入葱花翻炒出锅</p><h2 id="风味排骨"><a href="#风味排骨" class="headerlink" title="风味排骨"></a>风味排骨</h2><p>排骨放入盆中，加入盐，碱，清水，抓洗三分钟，倒出水<br>放入盐，胡椒粉，生抽，料酒，生姜，蚝油，五香粉，拌匀后放入蒜油10克腌制<br>蒜末，姜末，辣椒粒，葱白切粒<br>干辣椒段，香菜切段<br>宽油，放入排骨炸五分钟，倒入盘中<br>放入干辣椒小火爆香，放入辅料爆香<br>加入老干妈或豆豉两勺<br>加入排骨<br>加入五香粉，熟芝麻，翻炒均匀<br>加入葱油，香菜翻炒几下出锅</p><h2 id="懒人可乐排骨"><a href="#懒人可乐排骨" class="headerlink" title="懒人可乐排骨"></a>懒人可乐排骨</h2><p>排骨放入盆中，加入盐三勺，面碱1勺，料酒，五分钟后洗净排骨<br>焯水<br>柠檬半个，姜片，两根小葱，八角，桂皮，香叶，冰糖，生抽20克，可乐1000克，盐<br>锅中加入料汁<br>加入排骨烧开，转小火烧40分钟<br>收汁后装盘</p><h2 id="葱爆牛肉"><a href="#葱爆牛肉" class="headerlink" title="葱爆牛肉"></a>葱爆牛肉</h2><p><img src="/images/food/wanggang/cong-bao-niu-rou.jpg" alt></p><p>牛肉切片，放入碗中清洗，挤干水分备用<br>盆中加盐，胡椒粉，老抽，酱牛肉搅拌至<strong>水干粘手</strong><br>加入蛋清一个，继续搅拌<br>加入淀粉10克，拌匀<br>加入植物油10克拌匀</p><p>姜切小片，蒜片，红椒一个切片，葱切斜段/洋葱</p><p>蒸鱼豉油8克，料酒5克，盐，胡椒粉，淀粉，拌匀</p><p>锅中加油，将牛肉炒熟倒出备用<br>锅中加入油，将葱姜，红椒下锅，加入蚝油，甜面酱各3克爆香<br>加入牛肉翻炒，加入葱段炒至断生<br>加入料汁，翻炒出锅</p><h2 id="酱牛肉"><a href="#酱牛肉" class="headerlink" title="酱牛肉"></a>酱牛肉</h2><p>牛肉浸泡三小时<br>盆中加入黄豆酱400克，酱油150克，糖色，老抽20克，搅拌均匀<br>生姜拍散<br>八角2颗，桂皮一块，香叶4片，拍破的草果2颗，小茴香5克<br>锅中放入清水，牛肉冷水下锅焯水<br>锅中放油，酱汁炒香<br>加入牛肉，清水没过牛肉，烧开后放入小葱，转小火煮60分钟<br>关火浸泡30分钟<br>捞出小葱，大火烧开撇去浮沫，关火浸泡40分钟<br>烧开，加入盐5克，胡椒粉1克，白糖3克，关火浸泡30分钟<br>放凉后抹上香油，用保鲜膜包好放入冰箱<br>酱汁可以再次使用制作排骨，猪蹄之类</p><h2 id="红焖羊肉"><a href="#红焖羊肉" class="headerlink" title="红焖羊肉"></a>红焖羊肉</h2><p><img src="/images/food/wanggang/hong-men-yang-rou.jpg" alt></p><p>萝卜切滚刀块<br>羊肉切块<br>葱段<br>开水中焯萝卜<br>冷水加入羊肉，料酒后烧开焯一下<br>加油，八角，花椒，香叶，葱，姜，孜然粉，小茴香<br>加入豆瓣酱，羊排翻炒<br>加入料酒<br>加入清水没过羊排，炖40分钟<br>加入胡椒粉，老抽，生抽，盐，萝卜后炖5分钟</p><h2 id="炝拌牛心包菜"><a href="#炝拌牛心包菜" class="headerlink" title="炝拌牛心包菜"></a>炝拌牛心包菜</h2><p>包菜切细丝<br>蒜末，花椒，干辣椒段，热油浇入碗中<br>加入盐，糖，葱油，蒸鱼豉油8克，醋5克<br>料汁水倒入盆中拌匀</p><h2 id="醋溜白菜"><a href="#醋溜白菜" class="headerlink" title="醋溜白菜"></a>醋溜白菜</h2><p>白菜洗净，斯成块，菜帮和叶子分开<br>蒜末，干辣椒<br>汁：生抽8克，醋8克，盐1克，1勺糖，淀粉2克，拌匀<br>油热后放入蒜末，干辣椒<br>加入菜梗，爆炒至断生<br>加入菜叶，炒熟<br>加入汁，收汁后出锅</p><h2 id="素炒西兰花"><a href="#素炒西兰花" class="headerlink" title="素炒西兰花"></a>素炒西兰花</h2><p>蒜片，葱段<br>西兰花切成小块，放入盆中加盐清洗<br>红椒切片，蟹腿菇<br>锅中加水烧开后，加盐，油，放入西兰花焯水，冲凉并沥干水分<br>锅中加油，蒜片，葱段，西兰花，翻炒一分钟后加入少许水<br>加盐，少许糖<br>加少许水淀粉翻炒出锅</p><h2 id="小炒茄子"><a href="#小炒茄子" class="headerlink" title="小炒茄子"></a>小炒茄子</h2><p>茄子切丝放入盆中<br>加入盐，白醋，拌匀<br>稍肥五花肉切片<br>蒜拍散<br>尖辣椒切成滚刀块<br>爆炒五花肉<br>加入蒜，辣椒<br>茄子下锅炒三分钟<br>茄子吐出油后大火炒一分钟<br>加入盐，糖，蚝油，生抽</p><h2 id="蚂蚁上树"><a href="#蚂蚁上树" class="headerlink" title="蚂蚁上树"></a>蚂蚁上树</h2><p>红薯粉放入盆中，开水泡15分钟后沥干水分<br>五花肉200克剁成肉末<br>姜末，蒜末，泡椒碎，芹菜粒，葱碎<br>油加热后放入花椒，爆香肉末<br>加入姜，泡椒<br>加豆瓣酱炒出红油<br>加入粉条炒匀<br>白糖，胡椒粉，老抽，生抽<br>加入芹菜粒<br>加入葱蒜</p><h2 id="萝卜羊肉汤"><a href="#萝卜羊肉汤" class="headerlink" title="萝卜羊肉汤"></a>萝卜羊肉汤</h2><p>白萝卜切滚刀块<br>羊肉800克切成小块<br>姜拍散<br>小葱三根拍散切段<br>焯羊肉<br>煸炒羊肉三分钟<br>加入白酒，葱，姜炒香<br>大火烧开后转小火炖40分钟<br>放入萝卜，烧开后小火炖20分钟<br>加入盐，糖，胡椒粉</p><p>蘸料：<br>蒜末30克，小米辣15克，酱油，盐，糖，香油5克，小葱10克，香菜<br>加入少许羊肉汤</p><h2 id="饺子馅"><a href="#饺子馅" class="headerlink" title="饺子馅"></a>饺子馅</h2><p><strong>香料油</strong><br>小茴香20克，八角10克，桂皮8克，香叶2克，花椒5克，草果2个砸开，生姜50克，葱100克<br>小火炸香料，<strong>一定小火</strong>，倒入碗中，加盖凉凉后使用</p><p><strong>香料水</strong><br>小茴香6克，花椒2克，桂皮1克，八角2克，香叶2克，草果1个去籽，浇开水泡15分钟</p><p>肉馅，葱末，姜末，盐，胡椒粉，白酒，生抽，拌匀<br>加入香料水，拌匀<br>加入香料油，拌匀</p><h2 id="鸡蛋炒米粉"><a href="#鸡蛋炒米粉" class="headerlink" title="鸡蛋炒米粉"></a>鸡蛋炒米粉</h2><p>米粉在水中浸泡，沥干水分备用<br>米粉盆中加入盐，老抽<br>打鸡蛋，放盐，搅拌<br>切火腿丝<br>葱段，生菜，豆芽<br>炒蛋，放入辅料<br>放入米粉翻炒一分钟<br>加入生抽</p><h2 id="拔丝土豆"><a href="#拔丝土豆" class="headerlink" title="拔丝土豆"></a>拔丝土豆</h2><p>土豆切小块洗净放入盆中<br>加入土豆淀粉，拌匀<br>白糖50克放入碗中<br>盛菜盘中撒入白糖<br>锅烧热后放入宽油，放入土豆，稍后放入白糖<br>土豆炸透后捞出沥油<br>将多余的油倒出<br>将土豆放回锅中<br>翻炒均匀后出锅</p>]]></content>
    
    <summary type="html">
    
      最近尝试的菜谱
    
    </summary>
    
      <category term="美食" scheme="https://www.aafeng.uk/categories/%E7%BE%8E%E9%A3%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>AWS学习资源总结</title>
    <link href="https://www.aafeng.uk/aws-learning-resources/"/>
    <id>https://www.aafeng.uk/aws-learning-resources/</id>
    <published>2020-11-20T17:05:41.406Z</published>
    <updated>2020-11-20T17:05:41.406Z</updated>
    
    <content type="html"><![CDATA[<p>下面把AWS的学习资源总结了一下。这个列表会不断更新。</p><p><img src="/images/technology/aws/aws.png" alt><img src="/images/technology/aws/aws.png" alt></p><a id="more"></a><h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><p><a href="https://www.aws.training/Details/eLearning?id=42594" rel="external nofollow noopener noreferrer" target="_blank">Architecting Serverless Solutions</a></p><h2 id="Dynamodb"><a href="#Dynamodb" class="headerlink" title="Dynamodb"></a>Dynamodb</h2><p><a href="https://www.dynamodbguide.com/what-is-dynamo-db" rel="external nofollow noopener noreferrer" target="_blank">https://www.dynamodbguide.com/what-is-dynamo-db</a><br><a href="https://www.dynamodbguide.com/" rel="external nofollow noopener noreferrer" target="_blank">https://www.dynamodbguide.com/</a><br><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/workbench.html" rel="external nofollow noopener noreferrer" target="_blank">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/workbench.html</a><br><a href="https://hub.docker.com/r/amazon/dynamodb-local/" rel="external nofollow noopener noreferrer" target="_blank">https://hub.docker.com/r/amazon/dynamodb-local/</a><br><a href="https://www.youtube.com/watch?v=HaEPXoXVf2k&amp;ab_channel=AmazonWebServices" rel="external nofollow noopener noreferrer" target="_blank">https://www.youtube.com/watch?v=HaEPXoXVf2k&amp;ab_channel=AmazonWebServices</a><br><a href="https://www.youtube.com/watch?v=lh7q5hCrCSU&amp;list=PL6oNLEZTnXshgy4iHFULjYvcwbeMTotJp" rel="external nofollow noopener noreferrer" target="_blank">https://www.youtube.com/watch?v=lh7q5hCrCSU&amp;list=PL6oNLEZTnXshgy4iHFULjYvcwbeMTotJp</a></p><h2 id="Layers"><a href="#Layers" class="headerlink" title="Layers"></a>Layers</h2><p><a href="https://github.com/mthenw/awesome-layers" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/mthenw/awesome-layers</a></p>]]></content>
    
    <summary type="html">
    
      AWS学习资源总结
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
      <category term="Python" scheme="https://www.aafeng.uk/tags/Python/"/>
    
      <category term="Lambda" scheme="https://www.aafeng.uk/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>由VPS到无服务器的迁移之旅-计划</title>
    <link href="https://www.aafeng.uk/from-vps-to-serverless-planning/"/>
    <id>https://www.aafeng.uk/from-vps-to-serverless-planning/</id>
    <published>2020-11-13T10:03:25.464Z</published>
    <updated>2020-11-13T10:03:25.464Z</updated>
    
    <content type="html"><![CDATA[<p>算算自己租赁VPS的时间已经有好多年了。在VPS上主要做两类事情，一类是跑一些cron job，这个需要一个不间断运行的服务器。另一类是测试一些自己感兴趣的技术，和一些side projects。但自从越来越多的接触无服务器架构后，感觉似乎没有必要再继续使用VPS了。</p><p><img src="https://user-images.githubusercontent.com/63479035/99056896-e4434980-2592-11eb-9be8-856e26cd5d74.png" alt="image"></p><p>首先来说说使用VPS的缺点。</p><p>第一点就是需要不停的维护VPS上的各种软件，比如升级版本，安全补丁。最为头疼的就是当操作系统的版本需要升级了，需要把VPS彻底重新升级一下，再把原来就操作系统上的应用全部安装，配置一遍。在这个过程中可能面临各种版本冲突。。。反正我每次升级操作系统，就没有顺利过。。。</p><p>第二点就是费用。VPS的费用可以说是从几美元，到几十，甚至上百美元每月的都有。自己选择了一个不是特别贵，但也不便宜的VPS。月付之后，感觉利用率并不高。也就是说性价比很低。</p><p>还有就是性能问题。毕竟是和别人共享主机资源。如果遇到了一个比较“忙”的邻居，你的VPS性能就会急剧下降。在我的VPS就曾经出现过两三次，登陆后键入一个ls命令之后要等上几秒钟才有反应。。。</p><p>那么，升级到无服务器架构有什么优势呢？</p><p>首先，也是我最为喜欢的，就是再也不用担心操作系统版本升级的问题了，也不用考虑各种安全补丁了。。。这些维护工作都有提供商负责了。对于最终用户，既然无服务器，自然就没有任何需要维护的了。YEAH！</p><p>关于费用问题，我在使用了一段时间的AWS之后，感觉费用还是很低的。我这里说的不是那些EC2，而是AWS中的诸多微服务，比如Lambda, APIGateway之类的。</p><p>接下来就要开始这个迁移了。希望一切顺利，在目前使用的VPS操作系统被迫升级之前全部搞完。</p>]]></content>
    
    <summary type="html">
    
      由VPS到无服务器的迁移之旅-计划
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>如何在Ruby中读写Excel Spreadsheet</title>
    <link href="https://www.aafeng.uk/manipulate-spreadsheet-in-ruby/"/>
    <id>https://www.aafeng.uk/manipulate-spreadsheet-in-ruby/</id>
    <published>2020-11-09T10:36:02.519Z</published>
    <updated>2020-11-09T10:36:02.519Z</updated>
    
    <content type="html"><![CDATA[<p>在很多系统中生成报表时，都需要使用Excel格式的文件。在这种情况下，推荐使用roo进行Excel的读取，使用caxlsx进行Excel的写入。</p><p><img src="https://user-images.githubusercontent.com/63479035/98529325-61aa4980-2275-11eb-9a2d-bd6eb6122003.png" alt="image"></p><a id="more"></a><h2 id="写入操作"><a href="#写入操作" class="headerlink" title="写入操作"></a>写入操作</h2><pre><code>require &apos;axlsx&apos;p = Axlsx::Package.newwb = p.workbookwb.add_worksheet(name: &apos;Worksheet1&apos;) do |sheet|  sheet.add_row [&apos;R1C1&apos;, &apos;R1C2&apos;, &apos;R1C3&apos;]  sheet.add_row [1, 2, 3]endp.serialize &apos;test.xlsx&apos;</code></pre><h2 id="读取操作"><a href="#读取操作" class="headerlink" title="读取操作"></a>读取操作</h2><pre><code>require &apos;roo&apos;rows = Roo::Spreadsheet.open(&apos;test.xlsx&apos;)rows.each_with_index { |row, index|  puts &quot;#{row[0]}, #{row[1]}, #{row[2]}&quot;}    </code></pre>]]></content>
    
    <summary type="html">
    
      如何在Ruby中读写Excel Spreadsheet
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Ruby" scheme="https://www.aafeng.uk/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>Just dance</title>
    <link href="https://www.aafeng.uk/justdance/"/>
    <id>https://www.aafeng.uk/justdance/</id>
    <published>2020-11-09T10:03:00.932Z</published>
    <updated>2020-11-09T10:03:00.932Z</updated>
    
    <content type="html"><![CDATA[<p>最近家中新买了一个XBox上的健身游戏：Just dance。于是全家都有了一个共同爱好，跳舞。。。</p><p><img src="https://user-images.githubusercontent.com/63479035/98472218-8d7fed80-21e9-11eb-91af-dfd2fee4476c.png" alt="image"></p><a id="more"></a><p><img src="https://user-images.githubusercontent.com/63479035/98472227-9d97cd00-21e9-11eb-8717-d1e0dbaf1756.png" alt="image"></p><p>最早的时候无论大人还是孩子，都是跟着“PE with Joe”做各种健身操的。可以说“PE with Joe”还是很专业的，只要照着做，不仅能够健身，还能减肥。但对于孩子来说，PE with Joe的吸引力还不够。</p><p>但在一个偶然的机会看到朋友圈中有人推荐Just dance这个游戏。这个游戏最大的亮点就是把趣味性和健身结合到了一起。尤其对于孩子，就在游戏当中达到了健身的目的。</p><p>最早在Youtube上跟着一些免费视频跳。但是这些视频其实都是别人在跳的时候录制的。屏幕上显示的分数都是别人的。因此缺少了互动性。孩子们也有些失望，毕竟无论跳的好坏，最后的得分都是一样的。</p><p>后来看到孩子们这么喜欢这个游戏，又是就购买了一个付费版本的游戏。在这个游戏中，可以通过智能手机上的客户端连接到Justdance的服务器。在每个游戏中可以根据参与者的表现来打分。</p><p>同时游戏的趣味性大大增加，比如可以选择各种流行歌曲，也可以选择各种主题，比如：Frozen冰雪奇缘，万圣节，圣诞节等等。这样，孩子们就可以和自己喜欢的角色一同跳舞。游戏中还有一个最为吸引人的部分就是可以和世界各地的游戏玩家PK，在每支舞中看看谁的得分最高，排名如何。让参与者感觉是和其他的真人在同台竞技。</p><p>感觉自从疫情开始后，这种类似的虚拟网络游戏应该要火爆很多吧。</p>]]></content>
    
    <summary type="html">
    
      Just dance
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>墨菲定律</title>
    <link href="https://www.aafeng.uk/murphy-law/"/>
    <id>https://www.aafeng.uk/murphy-law/</id>
    <published>2020-11-07T23:15:15.993Z</published>
    <updated>2020-11-07T23:15:15.993Z</updated>
    
    <content type="html"><![CDATA[<p>最近有件非常有趣的事。我在超市发现了一种小黄瓜，非常脆爽可口。因此每周都会买上几盒。但有一次买回来的略有些苦，因此再下周买的时候就只买了一盒。但买了一盒的时候，黄瓜的味道又没有任何问题了。再下一周，又多买了几盒，结果又是苦味的黄瓜。如此反复了好几次。反正，只要我买少了，黄瓜味道就好，只要买多了，就是苦味的。</p><p><img src="https://user-images.githubusercontent.com/63479035/98447579-d23e5280-211d-11eb-8f49-2fece7a51189.png" alt="image"><br>Source: Pixabay</p><a id="more"></a><p>我当然明白，其实黄瓜是否苦，在我购买之前就已经确定了，这只是几次巧合而已。但这仍然让我想起了著名的墨菲定律。</p><p>关于墨菲定律的最有名，也是最通俗的一个表述就是：“如果一个事情有可能会变得很糟糕，那么它一定会变得很糟糕”。</p><p>就拿我买黄瓜这件事来说吧，我最近似乎有了心理障碍，每次在买之前都在想，“这次多买几盒吧，也许不会苦？”，“这次就买一盒吧，上次买的都是苦的。”。但每次都事与愿违，买到的黄瓜总是我认为比较糟糕的结果：苦的时候买了很多，不苦的时候只买了一盒。</p><p>记得刚工作的时候，单位中有一位老工程师，经常在我耳边念叨墨菲定律，听的我耳朵都要起茧子了。但不得不说的是，墨菲定律似乎总在时不时的出现在我们的生活中。</p><p>比如：在修理一些电器的时候，拆之前就曾经想过，一定要小心些，记住每个步骤，万一再往回装的时候漏掉某个螺丝就不好了。但经常发生的就是，每次把电器修完后，再重新装好后，总是会剩下一个螺丝。也就是说，事情朝着我们不期望的方向发生了。</p><p>再比如说，每次夏天和朋友们烧烤的时候，发现烟总是朝着人的方向飘来。人为了躲避烟而换了位置，但风向似乎随之就变。。。</p><p>再比如说，无论是多么简单的工作，人都会出错。。。</p><p>也许这纯粹是一种心理作用，或者心理暗示吧。当人们认为某种事情会朝着比较糟糕的方向发展的时候，心理上从某种程度上就会接受它，进而影响了自己的行动和判断力，从而会增大向那个方向发展的概率。</p><p>无论如何，我决定今后连续几周都多买几盒黄瓜，一定要打破这个烦人的定律。</p>]]></content>
    
    <summary type="html">
    
      墨菲定律
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>如何将Beem程序在AWS Lambda上运行</title>
    <link href="https://www.aafeng.uk/run-beem-application-on-aws-lambda/"/>
    <id>https://www.aafeng.uk/run-beem-application-on-aws-lambda/</id>
    <published>2020-11-04T22:51:20.491Z</published>
    <updated>2020-11-04T22:51:20.491Z</updated>
    
    <content type="html"><![CDATA[<p>大约两，三年前就开始在VPS上跑Steem的程序了，后来有了Hive链，也开始跑Hive的程序。其实Steem/Hive的Python库还是很好用的。于是就有了几个Cronjob，点点赞，领取一些收益之类的。但近期随着对AWS服务了解的越来越多。感觉再在VPS跑Cronjob似乎有点Out了。于是开始考虑把一系列的Cronjob都搬到AWS上来，这样做最大的优势就是避免了以后服务器的维护成本。不用再考虑升级Ubuntu的各个版本/打各种安全补丁了。同时，也能节省一些银子。相信我，AWS的一系列Serverless服务真正用起来之后，在这些服务上的花费真的比想象中的要低不少。</p><p><img src="https://user-images.githubusercontent.com/63479035/98176051-b6556980-1eef-11eb-898d-13066c63fa35.png" alt="image"></p><a id="more"></a><p>下面就以一个最简单的Beem/Hive程序为例来说明。假设我们想把下面这个Python程序挪到AWS Lambda中去：</p><pre><code>from beem.vote import Votevote = Vote(u&quot;@aafeng/bolton-abbey|abit&quot;)print(vote.json())</code></pre><p>上面这个程序非常简单，只是返回一个包含A神对我的一篇文章的点赞数据。</p><p>下面来说说如何在AWS Lambda中运行这个程序。整个过程中遇到了两个坑，下面会详细说。</p><p>这里有一个前提条件，就是已经安装了serverless框架。如果没有安装，请先自行安装，并配置好AWS的账号信息(~/.aws/credentials)。</p><h2 id="创建Lambda依赖库（layer）"><a href="#创建Lambda依赖库（layer）" class="headerlink" title="创建Lambda依赖库（layer）"></a>创建Lambda依赖库（layer）</h2><p><strong>这一步需要在一个AWS Linux的EC2中运行</strong>，后面说到第一个坑的时候会详细介绍。当然，在网上也看到有人说可以创建一个AWS Linux的docker镜像，然后在docker镜像中运行pip来安装Python依赖库。但我并没有尝试。应该也可以吧。</p><p>如果我们想要写一系列的Beem/Hive程序，肯定不想把依赖库打包到每一个Lambda中。因此这里可以创建一个AWS中共享的依赖库(Layer)。</p><p>运行：</p><pre><code>sls create --template aws-python3 --name beem-layer --path beem-layer</code></pre><p>这就会创建如下目录和文件：</p><pre><code>beem-layer├── handler.py└── serverless.yml</code></pre><p>接下来创建目录：</p><pre><code>cd beem-layermkdir libstouch libs/requirements.txt</code></pre><p>目录结构如下：</p><pre><code>→  beem-layer tree ..├── handler.py├── libs│   └── requirements.txt└── serverless.yml</code></pre><p>requirements.txt内容如下：</p><pre><code>beem</code></pre><p>安装依赖库：</p><pre><code>cd libspip install -t python/lib/python3.8/site-packages -r requirements.txt</code></pre><p>修改serverless.yml文件如下：</p><pre><code>service: my-layersframeworkVersion: &apos;2&apos;provider:  name: aws  runtime: python3.8  region: eu-west-1layers:  beem-dependencies:    path: libs    compatibleRuntimes:      - python3.8    description: &quot;Python beem dependencies&quot;</code></pre><p>在上面并没有定义Lambda函数，只是定义了layer，因此无需修改默认的handler.py，因为根本不会用到这个文件。</p><p>部署：</p><pre><code>sls deploy</code></pre><p>可以看到，很容易就在AWS中创建了一个layer。</p><p>注意：<strong>这里有第一个坑!</strong> 在后面的应用中使用这个layer的时候，总是提示找不到.so库。花了不少时间才搞清楚其原因在于：在安装Python依赖库时候的环境是Ubuntu 18，而在运行Lambda时候的环境则是Amazon Linux。两者不匹配自然就找不到所有的依赖库了。</p><p>因此最为简单的办法就是在Amazon EC2 (with Amazon Linux)中安装Python的依赖库。这样就保持了开发/部署环境和运行环境的一致。</p><h2 id="创建Lambda"><a href="#创建Lambda" class="headerlink" title="创建Lambda"></a>创建Lambda</h2><p>首先运行如下命令创建serverless APP:</p><pre><code>sls create --template aws-python3 --name beem-app --path beem-app</code></pre><p>接下来修改serverless.yml:</p><pre><code>service: beem-appframeworkVersion: &apos;2&apos;provider:  name: aws  runtime: python3.8  region: eu-west-1functions:  hello:    handler: handler.hello    layers:      - &quot;YOUR_LAYER_ARN&quot;</code></pre><p>修改handler.py:</p><pre><code>import jsonfrom beem.vote import Votedef hello(event, context):    vote = Vote(u&quot;@aafeng/bolton-abbey|abit&quot;)    response = {        &quot;statusCode&quot;: 200,        &quot;body&quot;: vote.json()    }    return response</code></pre><p>部署：</p><pre><code>sls deploy</code></pre><p>运行</p><pre><code>sls invoke -f hello</code></pre><p>结果，遇到了第二个坑。提示错误信息如下：</p><pre><code>{    &quot;errorMessage&quot;: &quot;[Errno 30] Read-only file system: &apos;/home/sbx_user1051&apos;&quot;,    &quot;errorType&quot;: &quot;OSError&quot;,    &quot;stackTrace&quot;: [        &quot;  File \&quot;/var/task/handler.py\&quot;, line 6, in hello\n    vote = Vote(u\&quot;@aafeng/bolton-abbey|abit\&quot;)\n&quot;,        &quot;  File \&quot;/opt/python/lib/python3.8/site-packages/beem/vote.py\&quot;, line 52, in __init__\n    self.blockchain = blockchain_instance or shared_blockchain_instance()\n&quot;,        &quot;  File \&quot;/opt/python/lib/python3.8/site-packages/beem/instance.py\&quot;, line 29, in shared_blockchain_instance\n    default_chain = get_default_config_store()[\&quot;default_chain\&quot;]\n&quot;,        &quot;  File \&quot;/opt/python/lib/python3.8/site-packages/beem/storage.py\&quot;, line 46, in get_default_config_store\n    return generate_config_store(SqliteConfigurationStore, blockchain=\&quot;hive\&quot;)(*args, **kwargs)\n&quot;,        &quot;  File \&quot;/opt/python/lib/python3.8/site-packages/beemstorage/sqlite.py\&quot;, line 200, in __init__\n    SQLiteFile.__init__(self, *args, **kwargs)\n&quot;,        &quot;  File \&quot;/opt/python/lib/python3.8/site-packages/beemstorage/sqlite.py\&quot;, line 61, in __init__\n    os.makedirs(self.data_dir)\n&quot;,        &quot;  File \&quot;/var/lang/lib/python3.8/os.py\&quot;, line 213, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n&quot;,        &quot;  File \&quot;/var/lang/lib/python3.8/os.py\&quot;, line 213, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n&quot;,        &quot;  File \&quot;/var/lang/lib/python3.8/os.py\&quot;, line 213, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n&quot;,        &quot;  File \&quot;/var/lang/lib/python3.8/os.py\&quot;, line 223, in makedirs\n    mkdir(name, mode)\n&quot;    ]}</code></pre><p>仔细读一下，原来是beem在运行的时候会尝试装载其配置文件，这个文件为~/.local/share/beem/beem.sqlite，如果该文件不存在，beem会尝试创建这个文件。而Lambda运行时只有对”/tmp“目录有写入权限的。因此出现了访问权限问题。</p><p>最快捷的解决方法就是直接修改文件：python/lib/python3.8/site-packages/beemstorage/sqlite.py</p><pre><code>#self.sqlite_file = os.path.join(self.data_dir, self.storageDatabase)self.data_dir = &quot;/tmp/&quot;self.sqlite_file = &quot;/tmp/beem.sqlite&quot;</code></pre><p>然后回到Amazon Linux，重新部署依赖库。</p><p>然后再调用Lambda：</p><pre><code>sls invoke -f hello</code></pre><p>返回结果为：</p><pre><code>{    &quot;statusCode&quot;: 200,    &quot;body&quot;: {        &quot;percent&quot;: 5000,        &quot;reputation&quot;: &quot;119989167017696&quot;,        &quot;rshares&quot;: &quot;13053196760301&quot;,        &quot;time&quot;: &quot;2020-10-27T11:27:18&quot;,        &quot;voter&quot;: &quot;abit&quot;,        &quot;weight&quot;: 1202589,        &quot;authorpermvoter&quot;: &quot;@aafeng/bolton-abbey|abit&quot;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      如何将Beem / Hive程序在AWS Lambda上运行
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>美食作家忠粉</title>
    <link href="https://www.aafeng.uk/wanggang-fans/"/>
    <id>https://www.aafeng.uk/wanggang-fans/</id>
    <published>2020-11-02T16:59:25.800Z</published>
    <updated>2020-11-02T16:59:25.800Z</updated>
    
    <content type="html"><![CDATA[<p>最近成了美食作家王刚的忠粉。自从前一段时间第一次按照他的教程成功制作了烧茄子之后，就一发不可收拾，几乎所有的菜都尽量按照他的教程来做。目前屡试不爽，还没有失败的记录。</p><a id="more"></a><p>先来晒晒最近烧过的菜：</p><p><img src="https://user-images.githubusercontent.com/63479035/97895823-30d58c00-1d2c-11eb-944c-cb54c0a998bf.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/63479035/97895904-49de3d00-1d2c-11eb-80b6-c1d7179ca9ee.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/63479035/97895943-56629580-1d2c-11eb-8d4e-ac65403e54ed.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/63479035/97895980-61b5c100-1d2c-11eb-9d23-cd2a9e7825a7.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/63479035/97896037-72fecd80-1d2c-11eb-9ee7-31af44cb2e42.png" alt="image"></p><p>总结一下，问什么我这个本来对做饭不是很感兴趣的人竟然成了王刚的忠粉：</p><p>首先，是王刚的视频都非常短小，一般都是两分钟左右。但在这两分钟之内，能够把每个菜的关键步骤都讲的很清楚。</p><p>其次，可操作性很强。由于每个步骤讲的都非常清楚，比如：放的调料准确的量是多少讲的非常精确。</p><p>同时，其成功率非常高。只要照着他给出的步骤做，失败率极低。目前，我做的菜还没有失败过的。</p><p>当然，缺点就是几乎所有的菜都要求”宽油“，这样吃下去，估计全家人都会变胖。。。</p>]]></content>
    
    <summary type="html">
    
      美食作家忠粉
    
    </summary>
    
      <category term="美食" scheme="https://www.aafeng.uk/categories/%E7%BE%8E%E9%A3%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>英国第二次Lockdown+吐槽</title>
    <link href="https://www.aafeng.uk/second-lockdown/"/>
    <id>https://www.aafeng.uk/second-lockdown/</id>
    <published>2020-11-01T22:17:51.721Z</published>
    <updated>2020-11-01T22:17:51.721Z</updated>
    
    <content type="html"><![CDATA[<p>这个周末，英国首相Johnson宣布，英格兰将于下周四进行第二次lockdown，届时英格兰所有酒吧，餐厅将被迫关闭，取消家庭互访，非必要时需要宅在家中。但各中小学和大学仍正常开学。</p><p><img src="https://user-images.githubusercontent.com/63479035/97816779-76904700-1c8f-11eb-9090-0caae23090e9.png" alt="image"></p><a id="more"></a><p>对于这个政策，我和很多人一样，有着很多不理解的地方。</p><p>首先，是学校还照常开学。不知道那些做决策的人是怎么想的。难道病毒会因为学校而避而远之吧？在学校中，尤其是小学中，小朋友之间很难保持社交距离。在目前感染人数居高不下的情况下，真的替学校中的师生们担心。</p><p>对于这一点，支持和反对学校照开的人都大有人在。支持方主要觉得在经历了第一次lockdown之后，大家知道了边工作边带娃的诸多负面影响。因此都倾向于把孩子送回学校。反对方则认为这会大大增大在校师生的感染几率。</p><p>可能很多人在想，这主要是为了照顾那些位于关键工作岗位(Key Workers)人家中的孩子的。但这完全可以采取和第一次lockdown时候一样的政策，只为那些Key Worker家的孩子提供上学的机会，这样就会大大减少在校师生人数，同时也会减少被感染的机率。</p><p>同时还有一处比较模糊的地方。政策中提到了那些处于教育目的的工作仍可以继续。比如：各种私教，课外班。但我们目前获得的信息是，孩子们的小提琴课仍然继续，但芭蕾课将会停课。因此感觉这完全要看老师对于这个政策的理解了。</p><p>还有一点让我比较困惑的是，目前还没有听说哪座学校中允许孩子一直佩戴口罩。比如我家孩子所在的学校中，如果佩戴了口罩的话，到了教室中需要摘掉。这就让我彻底不理解了，为什么？？？</p><p>对于lockdown政策，我还是基本赞同的，只是感觉政府在控制疫情和不影响经济的权衡中找到的这个平衡点似乎不是很理想，毕竟要让很多师生冒着被感染的风险去学校，哎。。。</p>]]></content>
    
    <summary type="html">
    
      英国第二次Lockdown+吐槽
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>无限游戏</title>
    <link href="https://www.aafeng.uk/infinite-game/"/>
    <id>https://www.aafeng.uk/infinite-game/</id>
    <published>2020-11-01T22:17:42.285Z</published>
    <updated>2020-11-01T22:17:42.285Z</updated>
    
    <content type="html"><![CDATA[<p>最近看到有人推荐詹姆斯·卡斯的《有限游戏与无限游戏》这本书中的观点，感觉深受启发。在这本书中提到，这个世界上有两种不同的游戏：“有限游戏”和“无限游戏”。其中的“有限游戏”以取胜为目的，一旦有一方胜利了，游戏就结束了。而“无限游戏”则以延续游戏为目的，真正的赢家能够一直玩下去。</p><p><img src="https://user-images.githubusercontent.com/63479035/97609064-0e313380-1a0b-11eb-8f89-d1ff5a9f76c6.png" alt="image"></p><a id="more"></a><p>有限的游戏中会设定一些规则，或者边界。游戏玩家在边界内玩。规则存在的目的就是保证游戏会结束。而无限游戏玩的就是边界，也就是尽量把边界最大化，尽量让游戏延续的更长，让更多的人加入到游戏中来。</p><p>其实，在人类社会中，这两种类型的游戏都有很多。先来说说有限游戏。每个人从小就会经历很多考试，竞赛，这些都是以获取高分，或者赢得竞赛为目的。考试和竞赛结束了，游戏也就结束了。各种体育比赛亦是如此，参赛者以赢得比赛为目的，一旦确定了获胜者，游戏就结束了。</p><p>而无限游戏的一个最好例子就是人生。人都是在想尽一切办法来延续自己的人生。这个游戏没有赢家，你没有竞争对手。只是自己想要尽量让这个游戏尽量更长久些。</p><p>对于很多企业来说，管理者的思维会决定企业的经营策略。是把经营企业作为一个有限游戏，在不同的战场上以击败对手为目的，还是把它作为一个无限游戏，让企业能够长期一直发展下去？不难看出来，那些能够制定一个长期策略的管理者，其思维中一定渗透着这种长期游戏的概念。</p><p>当然，有些时候这种有限和无限的界限并不是很清晰。比如，拿婚姻来说吧。有的人觉得这是一个有限游戏，在众多追求者中赢得美人归，一起步入婚姻殿堂，应该就算赢得了这个游戏。岂不知，婚姻也是一个无限游戏，需要两个人的共同经营，尽量让这个游戏持续更长久。可能，对婚姻的态度，也就是说把婚姻看作有限还是无限游戏，将最终决定婚姻的质量。</p><p>其实，在考虑很多问题的时候，是可以两者兼顾的。首先从长远角度来考虑，这样就有了一个长期的目标。然后将这个长期目标拆解为一系列的短期目标，并逐个实现。</p>]]></content>
    
    <summary type="html">
    
      无限游戏
    
    </summary>
    
      <category term="思考" scheme="https://www.aafeng.uk/categories/%E6%80%9D%E8%80%83/"/>
    
    
  </entry>
  
  <entry>
    <title>大自然的馈赠</title>
    <link href="https://www.aafeng.uk/chestnuts/"/>
    <id>https://www.aafeng.uk/chestnuts/</id>
    <published>2020-10-12T19:48:09.602Z</published>
    <updated>2020-10-12T19:48:09.602Z</updated>
    
    <content type="html"><![CDATA[<p>秋天到了，收获的季节到了。这个周末的天气不错，于是带上孩子骑车，顺便去看看周边的栗子是否已经可以收获了。</p><a id="more"></a><p>其实，在英国这里，有很多野生的蔬菜和水果，只要稍微留意一下，就会有不少惊喜。</p><p>最为常见的就是黑莓Blackberry和覆盆子Raspberry。这两种灌木的生命力极强，在很多地方都能看到。而且它们的繁殖力也很强。只要有一株成活，很快就会长成一片。在我家的花园中有一块菜地，两年前我种下了一株Raspberry，现在整片菜地都成了Raspberry的天下了。</p><p>再有的就是野生的李子树，樱桃树，核桃树，和栗子树了。尤其是栗子树非常常见。当栗子树树干长到一人无法抱住的时候，其结下的栗子就非常多了，通常会又大又甜。</p><p>几年前我就开始带着孩子们在周边寻找大的栗子树，但苦于一直没有找到足够大的。因此每年只能收获一下非常小的栗子。同时也只能把这作为一项户外活动，而没法享用到美味的栗子。</p><p><img src="/images/life/chestnut-1.jpg" alt="Chestnut"><br>摄于2020.10.11</p><p>这次本来是带着孩子们去往年去过的栗子树捡那些小栗子的。尽管捡到的栗子很小，但女儿已经开始在计划到家后如何烹制这些栗子了。。。忽然想到，记得原来曾经有朋友和我提过，在某片我们不曾去过的地方有一棵大栗子树。那今天就去碰碰运气吧。</p><p>不得不说，这个周末的运气出奇的好。竟然真的找到了这颗传说中的栗子树。可能是因为还没有到栗子彻底成熟的时候，树下只掉下了零星的一点点的栗子。但已经能够看出，这些栗子非常饱满。</p><p>![Chestnut](/images/life/chestnut-2.jpg</p><p>这些栗子还介于半生半熟的状态，但既然是它们自然掉落在地上的，应该是可以吃的了。(果然，在家放置一天后彻底变色了。。。)</p><p>期待着再过两个星期，应该可以大批收获栗子了。哈哈哈，到时候可以糖炒栗子，板栗烧鸡。。。</p>]]></content>
    
    <summary type="html">
    
      大自然的馈赠
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>与手机说再见</title>
    <link href="https://www.aafeng.uk/say-goodbay-to-mobile/"/>
    <id>https://www.aafeng.uk/say-goodbay-to-mobile/</id>
    <published>2020-10-06T20:27:45.915Z</published>
    <updated>2020-10-06T20:27:45.915Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到一个微信公共号转发了一条新闻。在网上查了一下，这其实是一条旧闻。法国（2年前）通过了一项法案，全面禁止在小学和初中校园内使用智能手机，平板电脑，智能手表等具有联网功能的通讯设备。</p><p><img src="/images/life/ban-mobile.jpg" alt><br><a id="more"></a></p><p>其主要目的是两点：第一通过这种方式提高孩子们的注意力。因为小学和初中的孩子年龄较小，不太能够控制自己的注意力。如果有了这些智能设备，将会更加分散他们的注意力。第二，减少学校霸凌。</p><p>看到这则消息的时候，我的第一感觉就是，英国包括国内也该这样！现在不仅大人，而且很多孩子都是成天抱着手机，无法讲注意力集中到学习上。</p><p>就拿儿子读书的小学来说吧，他们班有超过半数的小朋友已经有手机了。尽管上课的时候学校不允许使用手机，但一到了课间，这些孩子们就会把手机掏出来。问了一下有手机小朋友的名字，他们的学习成绩果然在班里都不是拔尖的。</p><p>毋庸置疑，对于小朋友来说，手机确实是一个获取信息的工具。以至于在一些中学，老师要求所有学生在智能手机上安装一些APP，课上教学，包括课后作业都是需要手机的。</p><p>但手机的负面作用也是不容忽视的。联网手机上的诱惑太多，孩子们可能管控不住自己，因此整体而言绝对是弊大于利。因此在我家中，两个孩子使用手机，平板，或者电脑的时间都是要严格控制的，每天只有把该做的作业完成，该练的琴练完后，才有可能获得15分钟来使用他们的平板。</p><p>希望英国/中国的小学/初中也会采用这个建议，在校期间全面禁止手机。</p>]]></content>
    
    <summary type="html">
    
      与手机说再见
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Conference pear</title>
    <link href="https://www.aafeng.uk/conference-pear/"/>
    <id>https://www.aafeng.uk/conference-pear/</id>
    <published>2020-10-05T20:00:58.840Z</published>
    <updated>2020-10-05T20:00:58.840Z</updated>
    
    <content type="html"><![CDATA[<p>现在正好到了英国当地蔬果成熟的季节，除了前面提到过的各种苹果外，还有李子，无花果，和一种叫做Conference pear的梨。尤其是最后这种梨，是我全家最爱吃的水果之一。</p><p><img src="/images/life/pear.jpg" alt><br><a id="more"></a></p><p>当年父母来英国小住的时候，本地的食物，像Cheese，各种pie，英国国菜炸鱼薯条等，没有一样能让他们喜欢的。唯有这个Conference pear，过了很多年了仍然让他们念念不忘。</p><p>其实在国内的时候也吃过很多品种的梨，比如：(赵县？)雪花梨，新疆库尔勒香梨等。感觉除了雪花梨外，其他的梨都需要软了才好吃。</p><p>说到Conference Pear，很多人都会非常奇怪，为什么有这么一个怪异的名字？会议梨？其实这个梨的名字确实和会议有关。它的名字源于在1885年的时候，这种梨在伦敦的British Pear Conference（英国梨会议）中获奖从而获得了”Conference Pear”这个名字。</p><p>这种梨的果实是绿色和褐色相间的，彻底成熟后，果皮会泛黄。它在没有彻底成熟的时候就可以吃。那个时候是脆甜的。等到彻底成熟后，果汁绵软，甜蜜多汁，让然欲罢不能。而且，这种梨还有一个特点就是，梨核非常小，有时甚至都看不到种子。因此有些懒人直接把梨洗洗就全部吃下肚了。</p><p>由于成熟后的Conference Pear非常甜，因此也非常适合做冰糖梨水。如果偶尔咳嗽嗓子疼，多喝些熬制的冰糖梨水的话效果也是不错的。</p><p>俗话说”一方水土养一方人“。在英国生活多年，慢慢也适应了这边的饮食习惯，尤其是这种Conference Pear，偶尔回国住的时间长一些的时候，还会想起它来。</p>]]></content>
    
    <summary type="html">
    
      Conference pear
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>择校</title>
    <link href="https://www.aafeng.uk/choose-school/"/>
    <id>https://www.aafeng.uk/choose-school/</id>
    <published>2020-10-05T19:58:54.489Z</published>
    <updated>2020-10-05T19:58:54.489Z</updated>
    
    <content type="html"><![CDATA[<p>儿子马上要升中学了，作为家长，马上就要面临择校的问题了。究竟是选择公立学校还是私立学校？选择相对而言学术性较强的学校，还是注重培养孩子综合能力的学校，这真的是一个不太容易决断的问题。</p><p><img src="/images/life/school.jpg" alt><br><a id="more"></a></p><p>首先需要考虑的是学校是否有位置以及申请难度。英国的一些顶级公学需要提前很长时间进行申请。同时，很多私立学校都会组织自己命题的入学考试，因此更是需要提前很长时间开始准备。</p><p>如果是公立学校的话，英国这里基本上是按照住址进行分配。很幸运的是，我们当初选择当前住址的时候就考虑到这个因素，因此选择了一个非常好的学区房。我们按片分的初中就是一个非常好的公立中学，每年都会有一些考上牛津剑桥大学的学生，整体排名在全英国表现都不错。但公立学校的一个问题就是，学生太多了，老师再好，可能也不能照顾的面面俱到。</p><p>如果是私立学校的话，其老师和学生的比例相对更好一些。每个学生都能得到充分的照顾，进而挖掘出其潜力来。其组织的各种活动也很丰富。但我们周边的私立学校只能说还可以，并没有特别出色的私校。</p><p>在选择学校的时候还需要仔细看看学校的年度报告，看看每年学校的GCSE以及A Level成绩如何。这一点很能说明问题。同时还要看看学校是否每年都能有上顶级大学的学生，这也很能反映学校的教学质量。</p><p>当然，学校的师资力量也是要必须考虑的因素之一。而了解学校师资的最好方式就是参加学校的Open Day，和老师面对面的交流，直接问老师一些问题。现在由于疫情，大多数学校都改为虚拟的Open Day了，这就增加了了解老师的难度。</p><p>同时，一所学校的校长绝对是学校的灵魂。如果校长有一个非常高的视角，秉承一个好的办学理念，那么，这所学校才有可能办好。关于校长对学校的影响，可以说对于正反两方面的例子，我都曾经见到过。</p><p>总而言之，学校的选择，需要考虑的因素太多了。到现在为止我还没有一个明显的倾向。</p>]]></content>
    
    <summary type="html">
    
      择校
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>跨国友谊</title>
    <link href="https://www.aafeng.uk/friendship/"/>
    <id>https://www.aafeng.uk/friendship/</id>
    <published>2020-10-04T21:55:43.481Z</published>
    <updated>2020-10-04T21:55:43.481Z</updated>
    
    <content type="html"><![CDATA[<p>最近女儿在学校交到了一个好朋友。这是一位韩国小女孩。她随着父母来到我们所在的城市访问两年。两个小朋友非常要好，可以说是焦不离孟，孟不离焦。上学时手牵手，放学时还经常一起玩。</p><p><img src="/images/life/friendship.jpg" alt><br><a id="more"></a></p><p>我有些好奇，在韩国小朋友来之前，女儿也结交了好几个关系非常好的本地小朋友。为什么这位韩国小朋友一来，就成了女儿最好的朋友？难道是她长得很像中国人？因此女儿觉得亲切？</p><p>因此专门问了女儿一个问题：为什么和这位韩国小朋友成为了最好的朋友？女儿的回答是：因为她更nice，更会为我考虑。我想这可能就是最根本的原因吧。韩国人和中国人毕竟都在亚洲，又是邻国，可能在文化传统上更为相近。相对而言，很多英国小朋友更为粗犷，至少在年龄小的时候可能为对方考虑的稍微少了一些。</p><p>女儿所在的学校非常多元化，每个年级中都有很多不同国家的小朋友。整个学校的一大特色就是对多元文化的包容。这也是我们作为家长，非常喜欢这所学校的一个原因。</p><p>当然，这样也有缺点，比如：由于很多国际家庭来这座小城都是临时性的访问，因此有可能孩子刚在这里熟悉，有了新朋友，就要离开这里了。到时候这些好朋友之间难免会非常伤心失望。</p><p>在最早的时候，我们也曾经为女儿担心过，一旦两年之后，她的好朋友要回韩国了，她会不会很难受？后来慢慢的我们自己也想通了，人生中难免有很多聚散离合，只要珍惜当下的这份友情，就足够了。至于两年之后的事，可以暂时先放一放，到时候再说吧。</p>]]></content>
    
    <summary type="html">
    
      跨国友谊
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>学校开放日Open day</title>
    <link href="https://www.aafeng.uk/openday/"/>
    <id>https://www.aafeng.uk/openday/</id>
    <published>2020-10-03T21:29:37.520Z</published>
    <updated>2020-10-03T21:29:37.520Z</updated>
    
    <content type="html"><![CDATA[<p>转眼儿子快要升中学了，开始考虑学校的选择。周边几所不错的学校基本上把开放日(Open Day)都改成在网上的虚拟开放日了。只有一家私校仍然坚持面对面方式的开放日。于是一家人一起去这所学校进行参观。</p><a id="more"></a><p>这是一所有着数百年历史的传统英格兰私立学校。校中的师生比例非常好，每个班不超过15人。有2-3名老师负责，这样就能充分保证了对每位学生的关注度。</p><p>进入学校后，首先需要测量体温才能注册并进入学校。在学校的大厅中，会给每个家庭分配一个向导。这些向导都是学校Six form（相当于国内高三）的学生。引导我们参观的是一位漂亮的英格兰美女。在闲聊的过程中感觉她应该也是一位学霸。</p><p>参观从学校的图书馆开始，负责接待的是学校的历史老师。儿子正好学习了都铎王朝的一些历史，和这位老师聊的不亦乐乎，直到后面有别的家庭排队等候才结束。搞笑的儿子竟然知道避实就虚，问了历史老师好多地理问题，让老师无从回答。。。？？？</p><p>后来又参观了学校的语言教学部。和很多英格兰传统私校一样，这里提供法语，西班牙语，德语，和拉丁语课程。同时，还新增了中文课程。为了让学生们体验不同的文化，（在疫情之前）学校还经常组织学生们到欧洲各国旅游，增加阅历。</p><p>至于更为重要的GCSE和A-Level科目英语和数学科目，感觉更加学术。和老师聊的也基本上是升学考试的一些相关问题。</p><p>这个学校比较有特色的一个课程是护士的预科课程。由于英国的护士奇缺，因此会有这种预科课程。这个课程针对的是高中后两年的学生。在课程结束后，学生需要在大学再学习三年的护士课程就可以分配工作。因此这个课程还是很受欢迎的。</p><p>最后回到大厅后，家长们可以一起喝茶，吃些简餐，同时和学校老师们交谈。最后还有许多在校生进行的才艺表演：钢琴，小提琴，独唱等等。</p><p><img src="/images/life/openday.jpg" alt></p><p>感觉这所学校还是很有特色的一所经典英格兰学校，可以在我们的考虑范围之内。</p>]]></content>
    
    <summary type="html">
    
      学校开放日Open day
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>中国文化</title>
    <link href="https://www.aafeng.uk/chinese-culture/"/>
    <id>https://www.aafeng.uk/chinese-culture/</id>
    <published>2020-10-02T16:45:37.379Z</published>
    <updated>2020-10-02T16:45:37.379Z</updated>
    
    <content type="html"><![CDATA[<p>今年的中秋节正好是周四，孩子去学校上学。学校老师在给所有小朋友们讲中秋节的时候，问了女儿一个问题，为什么月亮上会有一个小兔子呢？女儿没能回答这个问题，但自告奋勇的和老师说，家中有本讲中秋节的书，可以在书中寻找答案，之后讲给全班小朋友听。</p><p><img src="/images/life/chinese-culture.jpg" alt><br><a id="more"></a></p><p>于是在放学后，女儿就找到了家中专门讲各种中国节日的书，认真的开始“备课”。估计是因为在学校给大家都讲明白了，在放学后收到了老师的一个奖状，“文化传播奖”。</p><p>这些年由于祖国的不断强大，中国文化在世界范围的影响力越来越大。在英国这里，越来越多的本地人对中国文化，中国美食等都产生了浓厚的兴趣。我和我很多华人朋友都被当地的学校/机构邀请，做了不少传播中国文化的活动。</p><p>比如，每逢中国春节的时候，英国这边的很多学校中都会组织和中国春节有关的庆祝活动。我曾经为儿子参加的童子军组织过一次中国饺子的体验课。在课上带领着很多当地小朋友包饺子，煮饺子，吃饺子。当然，还回答各种相关的问题。通过这种方式，很多英国小朋友从小就对中国春节，中国饺子有了深刻印象。</p><p>在中国春节的时候，很多中餐馆中还会举行舞龙，舞狮表演。一些城市也会在市政厅中举办新春庆典活动。大家在分享美食，欣赏节目的同时，感受到了中国的传统文化。</p><p>另外一个比较知名的节日就是中国的端午节。在英国这里的很多城市都会在端午节的时候举行龙舟赛。国内也曾经有代表队受邀参加过英国这里的龙舟赛。</p><p>很多当地人对中国文化传统有了较深入的了解，尤其是中国美食，更是受到很多当地人的喜爱。而在中餐馆中，很多本地人已经不仅仅只会点宫保鸡丁，古老肉了。很多人早就抛弃了那种符合当地人口味的“改良版”中餐，而是更加喜欢地道的中餐了。</p>]]></content>
    
    <summary type="html">
    
      中国文化
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>在AWS资源中使用tag</title>
    <link href="https://www.aafeng.uk/aws-tags/"/>
    <id>https://www.aafeng.uk/aws-tags/</id>
    <published>2020-10-01T09:32:45.573Z</published>
    <updated>2020-10-01T09:32:45.573Z</updated>
    
    <content type="html"><![CDATA[<p>今天收到AWS的账单，发现按照项目分类的账单明细中，有些项目没有添加特定的标签，以至于相应的费用不是很清楚。比如：不清楚那些“UNTAGGED”的资源都是在哪些项目中创建的。如果费用接近或超出预算，是需要查找原因的。</p><p><img src="/images/technology/aws/tags-1.png" alt><br><a id="more"></a></p><p>相信使用过AWS的人可能都有一个感觉，就是“乱”。在AWS中的各种计算资源太过庞杂。而创建一个服务或者APP所需使用的AWS服务又是各种各样的。因此在开始接触AWS的时候总是不清楚最终费用可能是多少。即使账单出来了，也很难一目了然的看到究竟是哪个项目的运营成本更高。</p><p>AWS的tag（标签）就可以解决上述问题。其实，在AWS中的所有资源都应该添加标签(tag)。这样便于按照标签对资源进行分类和管理。在越来越多的使用AWS资源时，这种方式绝对能够帮我们更好的管理各种资源。</p><p>在AWS种使用tag时，最好事先约定好一个规则。比如：</p><ul><li>tag名称全部用小写字母和下划线</li><li>tag值全部全部用小写字母和下划线</li></ul><p>也可以规定一些必填的tag，比如：</p><ul><li>user: 你的用户名</li><li>team: 定义自己所属的团队</li><li>project: 哪个项目使用这个资源</li><li>status: 这个资源是用于那种环境的，比如：prod, test, 或者dev</li><li>source: AWS资源的创建方式，比如：manual(手工), serverless, cloudformation </li></ul><p>至于tag的创建，就非常简单了。你可以在每种资源中分别定义这些tag。以Lambda为例，我们可以在定义Lambda的时候同时添加tag：</p><p><img src="/images/technology/aws/tags-2.png" alt></p><p>只不过上面这种方式比较麻烦，如果一个一个的资源的添加的话非常耗时。最好的方式还是使用一些框架，比如serverless，在其配置文件中定义这些tag。比如：</p><pre><code>provider:    name: XXX    tags:      project: your_project      group: your_group      team: your_team</code></pre><p>上面的tags是全局性的，如果只想针对某个资源定义tag：</p><pre><code>functions:  myFunction:    name: myFunction    handler: myFunction.handler    tags:      tag1: value1      tag2: value2</code></pre><p>有了这些tag，以后在管理AWS资源的时候就事半功倍了。</p>]]></content>
    
    <summary type="html">
    
      在AWS资源中使用tag
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
  </entry>
  
</feed>
