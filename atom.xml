<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aafeng</title>
  <icon>https://www.gravatar.com/avatar/a176a52d9d4ac7d9f90a5204a7d87bcd</icon>
  <subtitle>aafeng&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.aafeng.uk/"/>
  <updated>2020-06-26T16:18:53.721Z</updated>
  <id>https://www.aafeng.uk/</id>
  
  <author>
    <name>aafeng</name>
    <email>aafenguk@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Scrapy自动获取豆瓣每周热门电影</title>
    <link href="https://www.aafeng.uk/scrapy/"/>
    <id>https://www.aafeng.uk/scrapy/</id>
    <published>2020-06-26T16:18:53.721Z</published>
    <updated>2020-06-26T16:18:53.721Z</updated>
    
    <content type="html"><![CDATA[<p>自从宅在家中后，养成了一个习惯：每周五全家一起在家中看一场电影。但每次在选择电影的时候都很耽误时间。于是就想到实现一个自动的程序，每周五下午的在各个影评的平台自动抓取本周热门电影，再发送消息/邮件给我，作为当晚要播放电影的参考。其实这个功能完全可以使用urllib来实现。不过下面使用Python中的爬虫框架Scrapy来实现。</p><p><img src="/images/technology/python/scrapy/scrapylogo.png" alt></p><a id="more"></a><h2 id="安装并创建项目"><a href="#安装并创建项目" class="headerlink" title="安装并创建项目"></a>安装并创建项目</h2><p>首先安装Scrapy:</p><pre><code>pip install Scrapy</code></pre><p>接下来创建一个项目：</p><pre><code>scrapy startproject douban</code></pre><h2 id="添加核心代码"><a href="#添加核心代码" class="headerlink" title="添加核心代码"></a>添加核心代码</h2><h3 id="items-py"><a href="#items-py" class="headerlink" title="items.py"></a>items.py</h3><p>首先修改items.py:</p><pre><code>import scrapyclass DoubanItem(scrapy.Item):    name = scrapy.Field()</code></pre><p>可以看到DoubanItem类是scrapy.Item的子类。这样就便于在后续处理过程中回调。</p><h3 id="使用Scrapy-shell获取电影标题对应的路径"><a href="#使用Scrapy-shell获取电影标题对应的路径" class="headerlink" title="使用Scrapy shell获取电影标题对应的路径"></a>使用Scrapy shell获取电影标题对应的路径</h3><p>要想正确获取影片路径，需要使用浏览器的调试工具和Scrapy自带的命令行工具。</p><p>首先运行：</p><pre><code>scrapy shell &quot;https://movie.douban.com/&quot;</code></pre><p>在浏览器中打开这个页面，在浏览器的开发者工具中查看：</p><p><img src="/images/technology/python/scrapy/scrapy-1.png" alt></p><p>在下面的核心代码中，我们将使用如下标记来定位影片中的标题：</p><pre><code>&lt;div class=&quot;billboard-bd&quot;&gt;&lt;td class=&quot;title&quot;&gt;&lt;a&gt;</code></pre><h3 id="DoubanSpider"><a href="#DoubanSpider" class="headerlink" title="DoubanSpider"></a>DoubanSpider</h3><p>接下来编辑文件douban/spiders/douban_spider.py：</p><pre><code>import scrapyclass DoubanSpider(scrapy.Spider):    name = &quot;douban&quot;    allowed_domains = [&quot;https://movie.douban.com/&quot;]    start_urls = [        &quot;https://movie.douban.com/&quot;    ]    def parse(self, response):        movie_list = []        for movie in response.xpath(&quot;//div[@class=&apos;billboard-bd&apos;]//td[@class=&apos;title&apos;]/a/text()&quot;).getall():            movie_list.append(movie)        print(movie_list)        filename = &quot;/var/tmp/movielist.txt&quot;        with open(filename, &apos;w&apos;) as f:            f.write(str(movie_list))</code></pre><p>类似的，DoubanSpider类继承自scrapy.Spider这个类。在上面的实现中重写了parse方法，自定义处理逻辑。</p><p>尝试运行一下：</p><pre><code>scrapy crawl douban</code></pre><p>从LOG中可以看到，豆瓣返回了一个403错误。这是由于其反爬虫机制导致的。</p><p>打开douban/settings.py，添加如下行：</p><pre><code>USER_AGENT = &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0&quot;</code></pre><p>再尝试一下，成功！其输出类似于：</p><pre><code>2020-06-26 15:49:34 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:60232020-06-26 15:49:35 [scrapy.core.engine] DEBUG: Crawled (200) &lt;GET https://movie.douban.com/robots.txt&gt; (referer: None)2020-06-26 15:49:35 [scrapy.core.engine] DEBUG: Crawled (200) &lt;GET https://movie.douban.com/&gt; (referer: None)[&apos;默片解说员&apos;, &apos;数电影的人&apos;, &apos;拍拖故事&apos;, &apos;若水&apos;, &apos;知晓天空之蓝的人啊&apos;, &apos;二十世纪&apos;, &apos;房子的故事&apos;, &apos;温德米尔儿童&apos;, &apos;翻译疑云&apos;, &apos;乳牙&apos;]</code></pre><p>上面这种方式根本就没有用到前面定义的items.py，如果想要使用的话，可以把douban_spider.py更改为：</p><pre><code>import scrapyclass DoubanSpider(scrapy.Spider):    name = &quot;douban&quot;    allowed_domains = [&quot;https://movie.douban.com/&quot;]    start_urls = [        &quot;https://movie.douban.com/&quot;    ]    def parse(self, response):        for movie in response.xpath(&quot;//div[@class=&apos;billboard-bd&apos;]//td[@class=&apos;title&apos;]/a/text()&quot;).getall():            yield {                &apos;name&apos;: movie            }</code></pre><p>需要注意的是，要想输出中文，需要在settings.py中添加：</p><pre><code>FEED_EXPORT_ENCODING = &apos;utf-8&apos;</code></pre><p>再次运行：</p><pre><code>scrapy crawl douban -o movies.json</code></pre><p>其输出为：</p><p><img src="/images/technology/python/scrapy/scrapy-2.png" alt></p><p>同样结果已经保存在json文件中。</p>]]></content>
    
    <summary type="html">
    
      使用Scrapy自动获取豆瓣每周热门电影
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="https://www.aafeng.uk/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Get新技能：各种地板的选择</title>
    <link href="https://www.aafeng.uk/flooring/"/>
    <id>https://www.aafeng.uk/flooring/</id>
    <published>2020-06-25T22:01:28.120Z</published>
    <updated>2020-06-25T22:01:28.120Z</updated>
    
    <content type="html"><![CDATA[<p>随着家中扩建工程的不断推进，最近需要考虑扩建后的地板了。早些年的时候，只是知道地毯，实木地板，和复合木地板。但最近在不断的选择过程中，才意识到了里面的学问原来还是很多的。</p><p><img src="/images/life/floor-1.jpg" alt></p><a id="more"></a><p>首先是实木地板(Solid Wood)。说白了，实木地板就是一块一块的木板。这种地板的特点就是取材纯天然，但容易变形，需要定期护理。在早期工程木地板技术不成熟的时候，造价较高，因此很多人选择了实木地板。但现在更多的人选择的是下面要介绍的工程木地板。</p><p>第二种是工程木地板(Engineered Wood)。这种木地板其实也是纯木的，只不过不像实木地板，它是由很多层粘合而成的，因此叫做工程木地板。哈哈，就像三明治一样。顶层木的质量最好，其他层的也是纯木，只不过质量不如顶层的好。相较于实木地板，工程木地板的纹理和色彩选择也更多，适用面也更广，比如有地暖的话只能选择工程木地板，而不能选择实木地板。在选择的时候需要注意，其顶层木板越厚，质量一般就越好。比如下图是施工的人推荐的工程木地板，共有9层，顶层非常厚，因此也属于工程木地板中的顶级品质。</p><p><img src="/images/life/floor-2.jpg" alt></p><p>第三种就是复合木地板(laminate)了。复合木地板的底层用的是高密度板，上面是特殊处理过的一个耐磨层。其最大优点是耐磨。但真到有一天上面的耐摩层被破坏了，复合木地板就废了。相比较而言，工程木地板的表面如果磨坏了，还能请专业人士来至少翻新一次。</p><p>最后一种是塑胶地板(Vinyl)。据卖地板的人说，现在选用Vinyl的人越来越多了。这种地板的特点就是寿命长，特别抗造，防水，使用于各种环境。但是感觉就不像木地板那样自然。现在Vinyl的价格还很高，顶级的Vinyl价格甚至会超过高质量工程木地板价格。但对于这种地板，我实在是提不起什么兴趣。主要是觉得铺上后没有地板的感觉。</p><p>虽然施工的人建议我们选择复合木地板。据他说现在选择复合木地板的人最多。不过我们最终还是选择了工程木地板。原因有以下几个：第一，它的材质是天然纯木，同时又很耐磨。第二，即使耐磨层出现问题，还可以再度翻新。第三，可以选择的花色，纹理很多，有我们喜欢的样式。</p><p>伴随着工程的推进，需要学的东西还真多，下一步，厨房的选择，房屋结构的改变，想想有些头大。。。</p>]]></content>
    
    <summary type="html">
    
      Get新技能：各种地板的选择
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>使用AWS Step Functions定制工作流</title>
    <link href="https://www.aafeng.uk/aws-step-functions/"/>
    <id>https://www.aafeng.uk/aws-step-functions/</id>
    <published>2020-06-24T15:57:52.775Z</published>
    <updated>2020-06-24T15:57:52.775Z</updated>
    
    <content type="html"><![CDATA[<p>最近看上了<a href="https://www.lenovo.com/gb/en/laptops/thinkpad/thinkpad-x1/X1-Carbon-Gen-8-/p/22TP2X1X1C8" rel="external nofollow noopener noreferrer" target="_blank">一款Thinkpad的笔记本</a>，但钱包不够鼓。于是想等价格降下来再考虑。难道去天天刷网页看价格吗？似乎不是一个程序猿该有的思维。最简单的方式就是写一个程序，检查该页面中的价格，然后设定为cron job，每天检查一下，给自己发邮件/短信通知。但这种方式实现起来一点刺激都没有，于是想到了AWS中的Step Functions。于是把整个过程用AWS实现了一下，通过一种无服务器的方式来实现这个功能。</p><p><img src="/images/technology/aws/step-functions-1.jpg" alt></p><a id="more"></a><p>首先做一个对比：</p><p><strong>流程控制</strong>：在传统方式中，通过编码来实现。在AWS中，通过Step functions实现。<br><strong>检查价格</strong>：在传统方式中，通过Python抓取网页并分析网页获得。当然，如果有API可用就更简单了。在AWS中，将这个步骤封装到Lambda。<br><strong>消息通知</strong>：这里可以调用一些第三方库来实现。在AWS中，这部分都已经做好了，直接使用SNS就可以。<br><strong>定时运行程序</strong>：在传统方式中，可以设定一个cron job。在AWS中，可以通过使用Eventbridge (过去叫做Cloudwatch)来实现。</p><p>可以看到，相对于传统方式，AWS栈的最大优势就是无需管理自己的服务器。安全补丁，系统升级等等都无需考虑。下面看看如何来实现这个功能把。</p><h2 id="第一步：创建主题和订阅-Topic-subscription"><a href="#第一步：创建主题和订阅-Topic-subscription" class="headerlink" title="第一步：创建主题和订阅(Topic/subscription)"></a>第一步：创建主题和订阅(Topic/subscription)</h2><p>在AWS中创建一个Topic，比如：ThinkpadPriceAlert</p><p><img src="/images/technology/aws/step-functions-2.jpg" alt></p><p>针对这个Topic，添加一个订阅者。这里选择邮件订阅方式。</p><p><img src="/images/technology/aws/step-functions-3.jpg" alt></p><p>需要去邮箱中确认这个订阅。</p><h2 id="第二步：创建Lambda"><a href="#第二步：创建Lambda" class="headerlink" title="第二步：创建Lambda"></a>第二步：创建Lambda</h2><p>接下来创建Lambda，去读取最新价格。这里直接读取网页，然后使用正则表达式提取价格，再以json方式返回价格：</p><pre><code>import jsonimport refrom urllib import requestdef lambda_handler(event, context):    req = request.Request(&apos;https://www.lenovo.com/gb/en/laptops/thinkpad/thinkpad-x1/X1-Carbon-Gen-8-/p/22TP2X1X1C8&apos;)    req.add_header(&apos;User-Agent&apos;, &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0&apos;)    response = request.urlopen(req)    html = response.read().decode(&apos;utf-8&apos;)    price = float(re.search(&apos;&lt;dd itemprop=\&quot;price\&quot;&gt;(.*)&lt;\/dd&gt;&apos;, html).group(1).replace(&apos;£&apos;, &apos;&apos;).replace(&apos;,&apos;,&apos;&apos;))    return {        &apos;statusCode&apos;: 200,        &apos;price&apos;: json.dumps(price)    }</code></pre><h2 id="第三步：使用Step-function创建价格查询流程"><a href="#第三步：使用Step-function创建价格查询流程" class="headerlink" title="第三步：使用Step function创建价格查询流程"></a>第三步：使用Step function创建价格查询流程</h2><p>定义如下的Step functions：</p><pre><code>{  &quot;Comment&quot;: &quot;Thinkpad laptop price checker&quot;,  &quot;StartAt&quot;: &quot;Check Thinkpad Price&quot;,  &quot;States&quot;: {    &quot;Check Thinkpad Price&quot;: {      &quot;Type&quot;: &quot;Task&quot;,      &quot;Resource&quot;: &quot;arn:aws:states:::lambda:invoke&quot;,      &quot;Parameters&quot;: {        &quot;FunctionName&quot;: &quot;arn:aws:lambda:eu-west-1:xxxxxxxxxxxx:function:ThinkpadPriceChecker:$LATEST&quot;      },      &quot;Next&quot;: &quot;Notify Me&quot;    },    &quot;Notify Me&quot;: {      &quot;Type&quot;: &quot;Task&quot;,      &quot;Resource&quot;: &quot;arn:aws:states:::sns:publish&quot;,      &quot;Parameters&quot;: {        &quot;Message.$&quot;: &quot;$.Payload.price&quot;,        &quot;TopicArn&quot;: &quot;arn:aws:sns:eu-west-1:xxxxxxxxxxxx:ThinkpadPriceAlert&quot;      },      &quot;End&quot;: true    }  }}</code></pre><p>需要注意，上面的$.Payload.<strong>price</strong>需要和前面Lambda中的返回值相匹配。至此，就可以运行这个Step Functions了，运行的结果就是收到一封包含最新价格的邮件。</p><h2 id="第四步：创建EventBridge-Rule来定期调用Step-Functions。"><a href="#第四步：创建EventBridge-Rule来定期调用Step-Functions。" class="headerlink" title="第四步：创建EventBridge Rule来定期调用Step Functions。"></a>第四步：创建EventBridge Rule来定期调用Step Functions。</h2><p>类似于Cronjob，可以设定事件被调用的频率，还有在指定时间需要调用的目标，比如一个Lambda，我们这里可以选择前面创建的Step Functions。</p><p><img src="/images/technology/aws/step-functions-4.jpg" alt></p><p><img src="/images/technology/aws/step-functions-5.jpg" alt></p><p>至此整个程序就做好了，每天在邮件中都会收到价格提示。当然，Step Functions中可发掘的功能还有很多，比如：条件选择，并发执行，容错处理等等。讲了这么多，回到主题，希望哪天价格真降下来。。。</p>]]></content>
    
    <summary type="html">
    
      使用AWS Step Functions定制工作流
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>扩建工程记录</title>
    <link href="https://www.aafeng.uk/house-extension-log/"/>
    <id>https://www.aafeng.uk/house-extension-log/</id>
    <published>2020-06-23T22:12:24.671Z</published>
    <updated>2020-06-23T22:12:24.671Z</updated>
    
    <content type="html"><![CDATA[<p>最近家中进行扩建，主要是往花园中新建一间房，和现有厨房，客厅打通，连成一体。 下面把整个过程记录一下。</p><a id="more"></a><h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><p>房屋扩建从6月8日开始，第一周主要的打了地基，灌浇了混凝土，把影响地基的树墙砍掉了一部分。</p><p>扩建前的样子：<br><img src="/images/life/house-extension/1.jpg" alt></p><p>开始动工了：<br><img src="/images/life/house-extension/2.jpg" alt></p><p>第一周成果：<br><img src="/images/life/house-extension/3.jpg" alt></p><h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><p>进一步完成地基部分，把管道重新铺了一下：</p><p><img src="/images/life/house-extension/w2-1.jpg" alt></p><p>开始砌砖，准备保暖层：</p><p><img src="/images/life/house-extension/w2-2.jpg" alt></p><p>在地基上铺满石块，整个扩建出来的区域可以确定了：</p><p><img src="/images/life/house-extension/w2-3.jpg" alt></p><h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><p>应该是在做隔湿层，黑塑料布下面，石块上面的是很厚的一层泡沫塑料。</p><p><img src="/images/life/house-extension/w3-1.jpg" alt></p><p>接下来在泡沫塑料上浇筑了一层混凝土。至此，地面高度已经和现在房子的裸地基一样了。</p>]]></content>
    
    <summary type="html">
    
      扩建工程记录
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>魔幻的操作-英国即将全面解封</title>
    <link href="https://www.aafeng.uk/ease-lockdown/"/>
    <id>https://www.aafeng.uk/ease-lockdown/</id>
    <published>2020-06-23T22:03:46.415Z</published>
    <updated>2020-06-23T22:03:46.415Z</updated>
    
    <content type="html"><![CDATA[<p>就在全球都在为第二波疫情担心的时候，英国政府公布了一系列的政策，人们将在7月4日“重获自由”。这些政策包括：博物馆，艺术画廊，电影院，酒吧，餐厅，酒店等将于7月4日开张；社交距离降低为1米+；从7月4日起，两个家庭之间可以聚会，但仍需保持社交距离。</p><p>英国的主流媒体似乎也在一边倒的支持着这些政策：</p><p><img src="/images/life/covid19/reopen-1.jpg" alt></p><a id="more"></a><p><img src="/images/life/covid19/reopen-2.jpg" alt></p><p>这一系列的政策似乎在民众中很受欢迎。目前我们周边已经有好几家朋友似乎都已经按捺不住，透漏出在7月4日后想要一起聚会的想法。同时在英国的好几个华人家长群的民意调查中，家长们也是一边倒的把(EY和Y1两个年级的)孩子送回了学校，或者计划把孩子送回学校。</p><p>真的不是很理解这一系列政策的依据是什么。现在的疫情数据是比前一段时间的要好看很多。但这正是前一段时间大家纷纷宅在家中的结果啊。感觉缓慢的解封是可以理解的。但这步跨的似乎有点大，真的很担心会扯着了。</p><p>不过话说回来，女儿是符合返校条件的（Y1）。最初我很坚决的反对返校。但她班中的小朋友们纷纷返校，已经过了一周，似乎情况都很正常。我也有些动摇了，已经向学校提出申请，如果一切正常，下周可能会尝试返校。</p><p>哎，无论怎样，生活还要继续。今天晚饭后全家出门散步。沿途看到了很多动物。没有了人类的过多打扰，它们似乎生活的更自在了。</p><p>天鹅在距离岸边不远的地方孵化雏鸟。让我第一次有机会这么近距离的观赏这只高冷的大鸟。</p><p><img src="/images/life/covid19/reopen-3.jpg" alt></p><p>就连平时胆小的兔子似乎也变得不怎么怕人了。</p><p><img src="/images/life/covid19/reopen-4.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      魔幻的操作-英国即将全面解封
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://www.aafeng.uk/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>AWS学习资源总结</title>
    <link href="https://www.aafeng.uk/aws-learning-resources/"/>
    <id>https://www.aafeng.uk/aws-learning-resources/</id>
    <published>2020-06-22T09:28:39.515Z</published>
    <updated>2020-06-22T09:28:39.515Z</updated>
    
    <content type="html"><![CDATA[<p>下面把AWS的学习资源总结了一下。这个列表会不断更新。</p><p><img src="/images/technology/aws/aws.png" alt><img src="/images/technology/aws/aws.png" alt></p><a id="more"></a><h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><p><a href="https://www.aws.training/Details/eLearning?id=42594" rel="external nofollow noopener noreferrer" target="_blank">Architecting Serverless Solutions</a></p>]]></content>
    
    <summary type="html">
    
      AWS学习资源总结
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
      <category term="Python" scheme="https://www.aafeng.uk/tags/Python/"/>
    
      <category term="Lambda" scheme="https://www.aafeng.uk/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>孩子受欺负了怎么办？</title>
    <link href="https://www.aafeng.uk/bullied/"/>
    <id>https://www.aafeng.uk/bullied/</id>
    <published>2020-06-21T22:16:39.483Z</published>
    <updated>2020-06-21T22:16:39.483Z</updated>
    
    <content type="html"><![CDATA[<p>自从孩子上学后，就一直被这个问题所困扰。毕竟作为家长，没法时时刻刻守在孩子身边，自己的孩子也需要学会如何和别的孩子相处。在遇到自己的权利受到侵犯的时候，应该知道如何应对。</p><p><img src="/images/kids/argue.jpg" alt></p><p>图源：Pixabay</p><a id="more"></a><p>先来说说我听到的两种教育方式：</p><p>第一种就是以牙还牙式。教育孩子不能欺负别的小朋友。但如果别的小朋友欺负上门了，那么也不用客气，打回去就可以了。但这种教育方式可能会误导孩子，导致暴力倾向，影响他们的情商发展。在最初可能是一种自我保护，但久而久之孩子可能会想，看来拳头还真好使，由自我保护慢慢变成了主动去欺负别的孩子。</p><p>说说我家儿子吧。其实我们并没有教育他要打回去。但在学校他有个老铁，拳头比较硬，总是罩着他，只要有小朋友来欺负他，朋友就会替他出头。久而久之，受朋友影响，儿子偶尔也跟着他的朋友去欺负别的小朋友了。在我们的严厉<del>恐吓</del>教育下，总算是刹住了他的这个势头，想想真是头疼。</p><p>第二种方式则是另一个极端。遇到别的孩子欺负上门，躲开就是了。殊不知这种方式更是会影响孩子的性格发展，会让他们变得胆小懦弱。更容易受到别的孩子的欺负。</p><p>我感觉首先是要让孩子明白，暴力不是解决问题的办法。更有效的办法是<strong>沟通</strong>。首先要大声喊出来，你不能抢我的玩具！你打人是不对的！你不能这样对我说话！让欺负人的孩子知道他们的行为是错误的，也觉得这个人不好惹。如果这样还不能解决问题，可以和老师沟通，让老师来协调解决问题。当然，在最极端的情况下，比如当自己的人身安全受到威胁的时候，可以自卫。</p><p>其实我们一直也是在摸索，哪种方式最好，大家有什么好的建议？</p>]]></content>
    
    <summary type="html">
    
      孩子受欺负了怎么办？
    
    </summary>
    
      <category term="育儿" scheme="https://www.aafeng.uk/categories/%E8%82%B2%E5%84%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>最好的父亲节礼物</title>
    <link href="https://www.aafeng.uk/fathers-day-2020/"/>
    <id>https://www.aafeng.uk/fathers-day-2020/</id>
    <published>2020-06-21T09:21:19.315Z</published>
    <updated>2020-06-21T09:21:19.315Z</updated>
    
    <content type="html"><![CDATA[<p>一年一度的父亲节如期而至。在几天前儿子和女儿就神神秘秘的在给我准备礼物，甚至连妈妈都被调动了起来。每天晚饭后他们就凑在一起做准备。今天谜底终于揭晓了，原来每人为我写了一首藏头诗。同时还画了两幅父亲节的画送给我。</p><a id="more"></a><p>下面是儿子写的藏头诗(Acrostic Poem)：</p><p><strong>F</strong>ather you are the best,<br><strong>A</strong>nd I really love you the most.<br><strong>T</strong>he special day is coming,<br><strong>H</strong>ope you enjoy our singing.<br><strong>E</strong>verything I love about you,<br><strong>R</strong>ead me a story that is brand new,<br><strong>S</strong>unny days you make us delicious barbecue.</p><p><strong>D</strong>addy is a special person,<br><strong>A</strong>nd each day we have a nice conversation,<br><strong>Y</strong>ou are the best daddy with great imagination. </p><p>儿子的画作：</p><p><img src="/images/life/father-day/2020-1.jpg" alt></p><p><img src="/images/life/father-day/2020-2.jpg" alt></p><p>女儿写的藏头诗：</p><p><strong>F</strong>eeling excited we get ready for father’s day,<br><strong>a</strong>bout half past six “Come down daddy!” We say.<br><strong>t</strong>ea is on the table ready for daddy.<br><strong>h</strong>e smiles at us happily.<br><strong>e</strong>xtremely hungry we start eating.<br><strong>r</strong>abbits are in the garden hopping,<br><strong>s</strong>weet ice-creams are in our mouths melting.</p><p><strong>D</strong>addy enjoys his tea so much,<br><strong>a</strong>nd he gives us a kiss each,<br><strong>y</strong>ou can make your father’s day like this!</p><p>女儿的画作：</p><p><img src="/images/life/father-day/2020-3.jpg" alt></p><p><img src="/images/life/father-day/2020-4.jpg" alt></p><p>也真难为他们了，准备了这么多天才好，真的是父亲节的最好礼物了！</p>]]></content>
    
    <summary type="html">
    
      最好的父亲节礼物
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>周末影院 - The Shows Must Go On 之 Peter Pan</title>
    <link href="https://www.aafeng.uk/peter-pan/"/>
    <id>https://www.aafeng.uk/peter-pan/</id>
    <published>2020-06-20T23:02:04.685Z</published>
    <updated>2020-06-20T23:02:04.685Z</updated>
    
    <content type="html"><![CDATA[<p>这个周末正好在Youtube上“The Shows Must Go On”系列播放”Peter Pan”小飞侠。又是决定全家一起观看这部音乐剧。整部剧轻松快乐，让小朋友们不断捧腹大笑。</p><p><img src="/images/fun/peter-pan.jpg" alt></p><a id="more"></a><p>故事讲述的是一群小朋友随着Peter Pan（彼得·潘）逃到Neverland(梦幻岛)的故事。整部剧沿用了经典的童话剧形式，主角Peter Pan为女扮男装，是一个可以飞行的顽皮小男孩。在梦幻岛上有仙子，印第安人，海盗等等刺激的角色。当然，最让小朋友们感兴趣的是Peter Pan的超酷技能：飞行。</p><p>其实这个故事的背后讲述的是每个人都会经历的青春，梦想，笑容，快乐，和爱。女主Wendy很明显的爱上了男主Peter Pan。可最终他们还是分开了。在多年之后，当Wendy已经有了自己的女儿Jane时，Peter Pan再次来到她的窗前。Peter Pan仍然保持着几十年前的少年面容，而Wendy却已经长大，不可能再飞的起来了。Wendy的梦想将由自己的女儿来传承，最终Jane将随着Peter Pan继续他们的冒险之旅。。。</p><p>人都无法拒绝长大，随着年龄的增长，人都会慢慢失去童心，失去想象力，身上的包袱会越来越沉重，导致会慢慢的遗忘一些美好和单纯的东西，只剩下世俗的琐事和羁绊。可能在每一个人的童年时代，心中都有过一个Peter Pan吧。这部音乐剧体现了一种成长的无奈。</p><p>海盗船长Hook似乎代表了现实社会，他的想法和Peter Pan格格不入，以至于两者处于对立面。在Peter Pan最终战胜Hook船长后，留给我们的却是一种淡淡的惆怅。在现实社会中，每个成年人都能战胜现实，保留住自己的梦想吗？恐怕对于大多数人来说，答案都是否定的。</p><p>每次看Peter Pan都有一种说不清的感觉，在基调非常欢快的整部剧背后，隐藏的是一种对青春，对梦想的一种往事不可追的无可奈何。。。</p>]]></content>
    
    <summary type="html">
    
      周末影院 - The Shows Must Go On 之 Peter Pan
    
    </summary>
    
      <category term="娱乐" scheme="https://www.aafeng.uk/categories/%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="音乐剧" scheme="https://www.aafeng.uk/tags/%E9%9F%B3%E4%B9%90%E5%89%A7/"/>
    
  </entry>
  
  <entry>
    <title>Post COVID-19后疫情时代？</title>
    <link href="https://www.aafeng.uk/post-covid19/"/>
    <id>https://www.aafeng.uk/post-covid19/</id>
    <published>2020-06-20T20:10:36.412Z</published>
    <updated>2020-06-20T20:10:36.412Z</updated>
    
    <content type="html"><![CDATA[<p>今天单位开会，已经在开始考虑疫情过后的战略部署了。可能现在说后疫情时代有点为时过早，但疫情总会过去。疫情对整个世界的影响将会长期存在。各个企业和组织都在思考商业模式的转遍，以及可能出现的机遇。</p><p><img src="/images/life/covid19/post-covid.jpg" alt></p><a id="more"></a><p>首先，是要把自己放在一个国际市场的角度来考虑问题。在疫情期间，由于众多商业活动都转到在线模式，这也使得国界对商业行为的影响越来越小了。很多企业可以跨国挖掘用户，同时也面临着来自国际同行的竞争。可以说，在后疫情时代，企业的思维方式必须向国际化转变。</p><p>由于疫情会使得一些行业遭受重创，但同时也使得一些行业得到高速发展。比如：和在线服务相关的业务，像在线会议系统，在线教育，在线设计等等。同时，各个国家可定会大力扶持一些行业，比如：制药业，生物科技等。</p><p>现在很多单位都应该反思一下，自己的管理组织是否足够”Agile” (敏捷)，能够快速应对类似新冠这样的危机，并快速做出应对。在这个瞬间万变的世界，反应过慢就意味着将被淘汰。同时，企业应该考虑自身的组织结构是否合理，工作流是否过于复杂，无法应对变化？</p><p>不知道在人类发展史上，将如何记录新冠这一页。但毫无疑问，它对整个人类社会的影响将是巨大和深远的。</p>]]></content>
    
    <summary type="html">
    
      Post COVID-19后疫情时代？
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://www.aafeng.uk/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>你了解你的邻居吗？</title>
    <link href="https://www.aafeng.uk/neighbour/"/>
    <id>https://www.aafeng.uk/neighbour/</id>
    <published>2020-06-18T16:31:53.178Z</published>
    <updated>2020-06-18T16:31:53.178Z</updated>
    
    <content type="html"><![CDATA[<p>最近被问到了一个问题：你知道你邻居的名字吗？想想觉得有些尴尬。其实自从数年前搬到现在的家之后，和邻居们相处还是很融洽的，但是，关系还没有那么近。至于邻居的名字，也只是知道离我家最近那些邻居的名字。那些住的再远一些的邻居，真的不知道他们的名字。以至于每年圣诞节前，给有些邻居家送圣诞卡的时候，还要和别的邻居打听一下才能确保名字没有搞错。</p><p><img src="/images/life/neighbour.jpg" alt><br>图源：Pixabay</p><a id="more"></a><p>记得小的时候住在父母单位的一个大院中，每到夏季的日落时分，是院子中最热闹的时刻。大家纷纷走出家们，互相问候一下，下棋，打牌，聊天。孩子们也可以成群结伴的一起玩耍，感觉那个时候真的是很快乐。邻居之间的关系也非常近，似乎就像一个大家庭一样。经常在吃饭的时候，邻居们会敲门送上一盘他们刚刚做好的美食。现在想起来仍然很是怀念那个时候。</p><p>现在随着技术的不断发展，各种通讯工具，社交软件越来越好用，功能也越来越强大，语音聊天，视频会议等等都成为了我们的日常。微信，Facebook, Whatsapp等软件也成了人手一部手机上的标配。这些技术似乎让人们能够跨越地域，和朋友们保持联系。但似乎这些软件占据了人们的大部分空余时间，反倒没有时间和自己的邻里们打交道了。</p><p>和朋友聊起了这个话题，他们住的地方有一个传统，每年会不定时的举办几次“Street Party”。届时，每家都会准备一些特色食物，大家纷纷走出家们，品尝着各种美食，同时和邻居们聊天，增进彼此的了解。有些邻居人非常好，如果朋友临时出门不在家，那么等到收垃圾的时候，邻居会主动帮他们把垃圾箱推出来，待收走垃圾后再帮他们推回去。院中的草长长了，会主动帮他们锄草。每逢圣诞前，会给孩子们送上圣诞礼物。甚至在中国春节前，还给孩子们红包。真不知道这些英国人是去哪里买到地道的中国红包信封的。每次听到这个，我的感觉就是羡慕，羡慕，羡慕。。。。</p><p>中国有句古话，“远亲不如近邻”。和邻居处好关系，是有百利而无一害的。人们也应该放下手机，多一些和邻居们的互动。国外有一家著名的网站叫做Nextdoor，就是处于这一点而创建的。在这个网站上发的信息，只有邻里之间可以看到。</p><p>你知道你邻居的名字吗？</p>]]></content>
    
    <summary type="html">
    
      你了解你的邻居吗？
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>在线参加年度AWS Summit EU</title>
    <link href="https://www.aafeng.uk/aws-summit/"/>
    <id>https://www.aafeng.uk/aws-summit/</id>
    <published>2020-06-17T15:04:53.448Z</published>
    <updated>2020-06-17T15:04:53.448Z</updated>
    
    <content type="html"><![CDATA[<p>近期单位的IT系统逐步向AWS转型，因此今年的这次AWS在线峰会自然是要参加了。</p><p><img src="/images/technology/aws/summit/1.jpg" alt></p><a id="more"></a><p>整个会议排的很满，从早上9点开始，一直到下午2点左右。共有11个不同的主题，55个分组讨论，其内容涵盖新手区，高级架构，应用程序开发，机器学习，数据处理等。信息量非常大。</p><p><img src="/images/technology/aws/summit/2.jpg" alt></p><p>这次峰会由Amazon的CTO Werner Vogels致开幕词(Keynote)。在Keynote中强调了架构的重要性。系统架构就如同盖房时的地基，对整个软件系统的影响非常大。 在构建系统初期，就要考虑到很多因素，例如： 安全性，可靠性，性能，成本，部署等等。 AWS专门为此构建了一个资料库： <a href="https://aws.amazon.com/builders-library/" rel="external nofollow noopener noreferrer" target="_blank">AWS Builders’ Library</a>。 在这个资料库中由很多关于系统架构方面的讨论，帮助我们如何更好的使用AWS架构软件系统。</p><p>在Keynote中还提供了一组有趣的数据，在整个疫情期间，各行各业对流媒体服务(streaming services)的需求量暴增，比如： 每周播放的流媒体的分钟数达到千亿级。可以设想，如果没有强健的底层架构支撑，很难应对这样的需求。同时还强调了一个重要的设计考虑，整个系统应该有一个内置的机器学习引擎，通过对以往数据的分析，预测将有可能发生的系统负载，提前对系统进行自动扩容，以应对即将到来的峰值访问。</p><p>“ML is no longer an emerging technology”。现在机器学习已经被大幅度应用在IT系统中，影响着众多企业的决策。而且借助AWS这样的平台和其上丰富的服务，开发人员无需过多的ML背景，也可以将ML集成到自己的核心业务之中。这些服务包括：Kendra(数据检索和交互),  CodeGuru(代码审核), Fraud Detector(欺诈监测),  Augmented AI(对基于机器学习的预测进行人工审核)等等。</p><p>总而言之，这次大会上的信息量非常大，我所感受到的重点包括系统架构和人工智能/机器学习。需要一些时间来消化这些信息。</p>]]></content>
    
    <summary type="html">
    
      在线参加年度AWS Summit EU
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="AWS" scheme="https://www.aafeng.uk/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>Python学习神器推荐 - Python Tutor</title>
    <link href="https://www.aafeng.uk/python-tutor/"/>
    <id>https://www.aafeng.uk/python-tutor/</id>
    <published>2020-06-16T10:57:28.813Z</published>
    <updated>2020-06-16T10:57:28.813Z</updated>
    
    <content type="html"><![CDATA[<p>如果说近两年来最受欢迎的编程语言的话，很多人都会想到Python。的确如此，随着Python在人工智能，大数据，区块链中的广泛应用，已经吸引了越来越多的人开始学习Python。但是对于很多初学者来说，Python中的众多概念极易混淆。在教自己孩子学习Python编程的时候就遇到了这样的问题，苦于无法直观的解释一些概念。最近发现的Python Tutor这个免费网站然我不禁眼睛一亮。这个网站可以让初学者直观的理解Python代码执行的过程，逐步可视化程序的运行过程。其最大的亮点就是把程序的执行过程在内存中的表现通过图形的方式来展示，这样就非常便于理解。</p><a id="more"></a><p>首先看下面一段简单的代码：</p><pre><code>b = [1, 3, 5, 7, 9]b = aa[0] = 0print(b[0])</code></pre><p>代码很简单，展示了Python中的浅拷贝。但是对于初学者来说，怎样才能更加直观的理解这个概念呢？我们来看看Python Tutor中的演示：</p><p><img src="/images/technology/python/python-tutor/1.png" alt></p><p><img src="/images/technology/python/python-tutor/2.png" alt></p><p><img src="/images/technology/python/python-tutor/3.png" alt></p><p>通过上面的演示，可以非常直观的理解，其实a和b指向的是内存中的同一个对象，更改a[0]自然会导致b[0]也会被改变。</p><p>Python Tutor中还提供了一些自定制的功能，包括可以自定义演示的箭头，形状等：</p><p><img src="/images/technology/python/python-tutor/4.png" alt></p><p>在Python Tutor中有两种模式：在线编辑模式(Edit)和动态演示模式(Live)。简而言之，编辑模式就是一次性把代码写完，然后再统一运行，然后分步骤查看代码在内存中的表示。而动态演示模式则是在你键入代码的同时，Python Tutor会实时可视化代码在内存中的状态。</p><p>举一个代码深拷贝的例子来演示Python Tutor的动态演示模式。</p><p>首先键入如下代码：</p><pre><code>from copy import deepcopya = [1, 3, 5, 7, 9]</code></pre><p>你会看到如下的演示：</p><p><img src="/images/technology/python/python-tutor/5.png" alt></p><p>接下来分别进行浅拷贝和深拷贝：</p><pre><code>b = ac = deepcopy(a)</code></pre><p>可以看到非常清晰的示意图：</p><p><img src="/images/technology/python/python-tutor/6.png" alt></p><p>看到这样的可视化演示，还有什么不能理解的呢？其实，除了Python程序的可视化演示，Python Tutor还有一系列的功能：Java Tutor, C Tutor, C++ Tutor, JavaScript Tutor, Ruby Tutor等来支持不同语言的可视化演示。</p>]]></content>
    
    <summary type="html">
    
      Python学习神器推荐 - Python Tutor
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="https://www.aafeng.uk/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>英国疫情现状，我感受到的变化</title>
    <link href="https://www.aafeng.uk/covid19-20200614/"/>
    <id>https://www.aafeng.uk/covid19-20200614/</id>
    <published>2020-06-14T22:12:59.672Z</published>
    <updated>2020-06-14T22:12:59.672Z</updated>
    
    <content type="html"><![CDATA[<p>伴随着疫情的逐步缓解，英国政府颁布了下一步解封计划，包括对社交规则的改变，即将逐步开业的店铺，即将开放的户外场所和活动等。比如：独居的人或者单亲父母可以按照“Support Bubble”政策，和另外一个家庭互相支持，无需保持社交距离，可以进行正常接触。同时允许一些户外场所开放，比如野生动物园和户外影院，可以让人们坐在车中去这些场所。各个商家在保证安全的前提下可以开门营业。</p><a id="more"></a><p>昨天带孩子们出门骑自行车放风。沿途看到了很多人似乎是不想辜负这大好阳光，已经开始在公共场合聚会和野餐。也见到了很多熟人，似乎大家对当前的疫情都是比较乐观的态度。沿途经过的湖边，习惯于游客喂食的各种大雁，野鸭等似乎也感觉到了这个世界的变化，为什么没有人喂我们吃的了？看到有人走过来就围上前来，期待着有所收获。</p><p><img src="/images/life/covid19/20200614-1.jpg" alt></p><p><img src="/images/life/covid19/20200614-2.jpg" alt><br>摄于2020.06.14</p><p>家中的扩建工程已经开始一周了。和建筑工人的接触可以说是不可避免的。刚开始的时候似乎大家还注意社交距离，但随着越来越多的问题需要讨论，似乎这个社交距离已经越来越近了。只能在心里安慰自己，我们所在的地方毕竟是一座小城，最近新发现病例已经很少了，应该没有问题。</p><p>最近最为犹豫的就是，随着英国小学的开放，我家孩子所在的学校针对Early Years和Year 1的小朋友们开放。而我家女儿正好在Year 1。去还是不去上学，这真是一个难以抉择的问题。貌似大多数的家长都选择了送孩子去上学。最终决定还是在家再观望一下吧，毕竟疫情还没有完全消除，在家Homeschooling也就是家长累一些，应该还是更安全吧。</p>]]></content>
    
    <summary type="html">
    
      英国疫情现状，我感受到的变化
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="疫情" scheme="https://www.aafeng.uk/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>最近全家人超爱的一道下饭菜 - 红烧小羊腿</title>
    <link href="https://www.aafeng.uk/lamb-leg/"/>
    <id>https://www.aafeng.uk/lamb-leg/</id>
    <published>2020-06-13T23:15:22.196Z</published>
    <updated>2020-06-13T23:15:22.196Z</updated>
    
    <content type="html"><![CDATA[<p>最近媳妇按照网红美食博主小高姐的视频做了红烧小羊腿这道菜，成为全家人都喜欢的一道菜。下面把整个做菜的步骤记录一下。</p><p>首先上一张成品图：</p><p><img src="/images/food/lamb/leg1.jpg" alt="红烧小羊腿"></p><a id="more"></a><p>这道菜需要提前一天做准备。首先把洗净的小羊腿上用尖刀扎一些个孔，这样在炖的时候容易入味。同时用盐涂匀后腌制一夜。同时，需要提前把腐竹用凉水泡一夜。</p><p>第二天首先把小羊腿放入冷水中烧开焯一下，这样可以将血沫焯出来，同时也把多余的盐涮掉。</p><p>在锅中放入糖和水，化好糖色。</p><p>接下来准备好调料包：花椒，大料，香叶，桂皮，小茴香。</p><p><img src="/images/food/lamb/leg2.jpg" alt="红烧小羊腿"></p><p>推荐使用铸铁锅。在锅中放入葱姜蒜和郫县豆瓣酱后炒香，放入小羊腿爆香后放入生抽及化好的糖水，再放入调料包。加入开水后以没过羊腿为宜。</p><p><img src="/images/food/lamb/leg3.jpg" alt="红烧小羊腿"></p><p>大火烧开后小火炖1个半小时。在炖的过程中放入切好的腐竹和胡萝卜。</p><p>出锅后锅中应该还有汤汁，可以用来拌饭吃。剩下的第二天可以煮面吃。</p>]]></content>
    
    <summary type="html">
    
      最近全家人超爱的一道下饭菜 - 红烧小羊腿
    
    </summary>
    
      <category term="美食" scheme="https://www.aafeng.uk/categories/%E7%BE%8E%E9%A3%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>好评 - 在线美术培训</title>
    <link href="https://www.aafeng.uk/online-drawing-class/"/>
    <id>https://www.aafeng.uk/online-drawing-class/</id>
    <published>2020-06-13T22:19:51.516Z</published>
    <updated>2020-06-13T22:19:51.516Z</updated>
    
    <content type="html"><![CDATA[<p>疫情期间，由于全天候在家，除了正常的功课之外，给孩子们报了一个在线美术课。迄今为止虽然学习的时间不长，但已经取得了不小的进步。整体感觉非常好。除此之外，还有在线钢琴课，小提琴课，中文课，唱歌课等等。感觉似乎今后的学习方式将会从线下向线上发生彻底的改变。</p><a id="more"></a><p>在报班之前也做了简单的调研。国内类似的培训机构非常多，而且很多家都号称有上亿的融资，还有雷军，徐小平等大咖支持，似乎感觉都不错。最终选择的品牌是经朋友推荐后报名的。</p><p>这个课程的好处还是很多的，可以培养孩子的审美观，色彩敏感度，开发孩子的想象力，观察能力和动手能力等。在上课过程中，每个孩子搭配一个班主任，还有一个教学管理老师，似乎能够弥补在线教学的不足，整体的学习效果还是很好的。</p><p>上几幅孩子的画作：</p><p><img src="/images/kids/painting/1.jpg" alt></p><p><img src="/images/kids/painting/2.jpg" alt></p><p><img src="/images/kids/painting/3.jpg" alt></p><p>这次的疫情迫使人们对很多行业的工作模式进行了深入的思考和实践。就拿美术课来说吧。以前根本没有考虑过线上的课程。但如果只选择线下课程，那么师资的选择范围就非常有限。由于我们这样生活的城市非常小，因此选择范围就更为小，往往特别好的老师太忙，想要报班的话，需要排很长的队。而现在改为线上课程，可以选择的老师不仅多，而且都是美院的专业人士。现在觉得等到疫情过去，似乎还是更倾向于线上培训课程。</p>]]></content>
    
    <summary type="html">
    
      好评 - 在线美术培训
    
    </summary>
    
      <category term="育儿" scheme="https://www.aafeng.uk/categories/%E8%82%B2%E5%84%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>Web Accessibility的重要性</title>
    <link href="https://www.aafeng.uk/web-accessibility/"/>
    <id>https://www.aafeng.uk/web-accessibility/</id>
    <published>2020-06-12T20:41:41.645Z</published>
    <updated>2020-06-12T20:41:41.645Z</updated>
    
    <content type="html"><![CDATA[<p>其实以前在做项目的时候或多或少的接触了一些Web Accessibility（Web无障碍访问）的标准，但并没有留意其重要性。最近在一个项目中才真正意识到了在一个Web项目中，Accessibility是如此重要。如果不符合Web Accessibility的标准，可能会对有些用户造成极大的不便。</p><p><img src="/images/technology/web-accessibility.jpg" alt="Web Accessibility"><br>图源：w3.org</p><a id="more"></a><p>事情起源是这样的：按照用户要求，实现了一个对用户数据的统计功能，并以在Web页面中以饼图，柱状图等图形化的方式展示统计好的数据。在实现了该功能以后，发给了客户寻求反馈意见。结果用户的意见是：“我根本看不清你做的柱状图，能否调整配色方案？”。嗯，这是怎么回事？在我这里明明是很清楚的啊？于是要求客户发了一个截屏过来，和我在本机看到的是一样啊。突然意识到了，每个人的视力，对颜色的敏感度都不一样。在我这里很清楚，并不代表在别人眼中看到的也很清楚啊！于是按照相应的标准更改了配色，客户终于满意了。</p><p>记得互联网的发明人Tim Berners-Lee曾经说过一句很经典的话：</p><blockquote><p>The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.</p></blockquote><p>简单翻译一下：Web的力量在于其普遍性。其基本要素在于：每个人无论残疾与否都能够访问它。</p><p>再来看看Web Accessibility的官方定义：</p><blockquote><p>Web Accessibility（Web无障碍访问）旨在使得行动不便或者残障人士能够使用Web，即可以在Web上获取信息、理解信息、查找信息，以及网络交互。通常情况下，仅仅是确保每个网页的所有内容都有对应的文本（Text）信息，以及所有的交互都可以通过键盘来完成，就可以实现Web的无障碍访问。无障碍访问可以体现在一个单独的规范（例如WAI-ARIA）、指南（例如WCAG），或者某个规范中的一个部分（例如HTML5）。</p></blockquote><p>在设计一个Web应用的时候，应该充分采用适当的设计和编码，使得残疾人或者有各种障碍的人也可以访问该应用。在英国就有近1400万【<a href="https://www.scope.org.uk/media/disability-facts-figures/" rel="external nofollow noopener noreferrer" target="_blank">数据来源</a>】的残疾人士，约为英国总人口的22%。因此，在设计Web应用的时候，绝对不能忽视这么大的一个群体。在美国，可以<a href="https://www.disabilityscoop.com/2019/10/08/supreme-court-allows-sue-web-accessibility/27269/" rel="external nofollow noopener noreferrer" target="_blank">起诉不遵循Web Accessibility规范的零售商</a>。在欧盟也有相应的<a href="https://europa.eu/european-union/abouteuropa/accessibility_en" rel="external nofollow noopener noreferrer" target="_blank">规定</a>。</p><p>在实现Web Accessibility时，可以参考W3C的<a href="https://www.w3.org/WAI/WCAG21/Understanding/intro#understanding-the-four-principles-of-accessibility" rel="external nofollow noopener noreferrer" target="_blank">Web Content Accessibility Guidelines</a>。在这个Web Accessibilty指南中，有四大基本原则：Perceivable(可感知)，Operable (可操作)，Understandable (可理解)，Robust (健壮性)。其实就是强调对于不同的用户，在不同的终端中，用户可以和Web应用无障碍的交互。</p><p>在进行Web Accessibility测试的时候，有很多相关的工具，比如：测试网页配色对比度的。有相应的Screen Reader测试工具/插件。</p>]]></content>
    
    <summary type="html">
    
      Web Accessibility的重要性
    
    </summary>
    
      <category term="技术" scheme="https://www.aafeng.uk/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>说说英国的传奇工种 - 水暖工</title>
    <link href="https://www.aafeng.uk/plumber/"/>
    <id>https://www.aafeng.uk/plumber/</id>
    <published>2020-06-11T21:42:19.313Z</published>
    <updated>2020-06-11T21:42:19.313Z</updated>
    
    <content type="html"><![CDATA[<p>早就听说过英国的电工和水暖工是高薪工种。伴随着家中扩建工程的开始，陆陆续续的和电工，水暖工，木匠等这些具有特殊技能的人打交道，也慢慢对他们有了进一步的了解。</p><p><img src="/images/life/plumber.jpg" alt="英国水暖工"></p><a id="more"></a><p>所谓物以稀为贵。由于在整个英国，水暖工极度短缺，造成了劳动力市场上的供不应求，因此水管工的工资不断上涨。记得好多年前就看过<a href="https://www.telegraph.co.uk/news/uknews/1419327/Oxford-graduate-leaves-City-job-to-retrain-as-plumber.html" rel="external nofollow noopener noreferrer" target="_blank">一篇报道</a>，说牛津大学的毕业生转行做水暖工。有的水暖工的年薪超过10万英镑，甚至高达20万英镑，超过了大学教授！在伦敦的一些高端住宅区，也有水暖工凭借着自己的高薪收入，在那里购房安家的。这也难怪就连名校的毕业生也会做出这个决定了。</p><p>更为夸张的是那种应急型的水暖工，比如：谁家的水管裂了，锅炉坏了，水龙头井喷了等等，都需要专业人士在第一时间赶到。尤其是在夜间和周末，他们的费用就格外的高。记得上次我家的下水道堵了，叫了一个水暖工，无论是否修好，每小时50英镑。这高额的费用也生生把很多人逼成了DIY高手。</p><p>曾经有朋友开过一个玩笑，像电工这样的高端工种，穿着干练的职业装，气场十足，倒像大学的教授。反倒是一些大学的教授，不修边幅，穿着非常随意，从外貌上看似乎和大学没有丝毫关系。</p><p>随着人工智能的崛起，很多行业都受到威胁，尤其是普通生产流水线上的工人，保安，收银员，甚至一些高端职业，比如：会计师，精算师等都有可能被人工智能所代替。甚至编写代码的程序猿，都有可能被机器人代替。但水管工和电工这样需要高度手眼协调以及分析复杂问题的工种，目前来看似乎很难被机器人代替。</p><p>这让我不禁在想，要不然也转个行，做水暖工得了？？？</p>]]></content>
    
    <summary type="html">
    
      说说英国的传奇工种 - 水暖工
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>保护环境，人人有责</title>
    <link href="https://www.aafeng.uk/recycles/"/>
    <id>https://www.aafeng.uk/recycles/</id>
    <published>2020-06-10T21:56:15.845Z</published>
    <updated>2020-06-10T21:56:15.845Z</updated>
    
    <content type="html"><![CDATA[<p>在英国已经定居好多年了，慢慢也习惯了这边的很多规矩，比如：垃圾的严格分类。市政府提供的回收垃圾容器只有废纸，塑料瓶，和玻璃瓶三种。家中一旦有了不用的电器，用过的电池，都要放在特定的容器中，等到有时间的时候一起处理。</p><p><img src="/images/life/recycle.jpg" alt="可回收垃圾"></p><a id="more"></a><p>记得刚到英国的时候，傻傻的分不清各种回收物品该往哪里放，还是好心的邻居告诉我，才知道了什么可以放在回收容器中，什么东西不可以。</p><p>由于市政府提供的垃圾回收容器都比较小，同时只针对生活中最常见的可回收垃圾。因此如果有大量的可回收垃圾，或者比较特殊的可回收垃圾，比如：不用的电子产品，家具等，需要自己来解决。一般每座城市都会有专门的大型垃圾回收站。因此每过几周，我都会把家中的各种无法处理的垃圾带到垃圾回收站去处理。每次在垃圾回收站那里都需要排很长的队。</p><p>就拿这次家中的装修工程来说，家中有一堵又高又厚的树墙，不仅占据了很大的花园空间，还非常不容易打理，可以说既费时间又费钱。这次想趁着建筑工人在，有很多趁手的工具，把树墙彻底砍掉。但和建筑工人沟通后才知道，砍掉这些树墙本身工作量还好，并不是很大。但要把砍下来的树运走，造价就比较高了。需要租3-4个scape，大约需要800英镑左右。感觉这个代价似乎有些大。</p><p>还有一种对环境危害很大的垃圾就是废弃的电池。它不仅能对环境造成严重污染，还可能会危害人类的健康。好在英国的各大超市一般都提供电池回收箱，只要记着在去超市的时候把电池带上，扔在电池回收箱中就可以了。</p><p>人类生活的环境日趋恶化，我们所能做的就是从自己做起，尽量保护地球母亲，为我们的子孙后代做一件好事。</p>]]></content>
    
    <summary type="html">
    
      保护环境，人人有责
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>人工智能离我们多远不好说，但各种智能家居已经成为现在进行时</title>
    <link href="https://www.aafeng.uk/robot/"/>
    <id>https://www.aafeng.uk/robot/</id>
    <published>2020-06-09T22:29:13.122Z</published>
    <updated>2020-06-09T22:29:13.122Z</updated>
    
    <content type="html"><![CDATA[<p>今天和同事们聊天时聊到了疫情期间大家的厨艺，我顺便表扬了一下我家的做菜机器人。听的那些英国同事们两眼发亮，纷纷询问在英国能不能买到。看样子我可以在英国摆个地摊卖炒菜机器人了。。。</p><p><img src="/images/life/robot.jpg" alt="智能家居"></p><a id="more"></a><p>我家的炒菜机器人是九阳系列产品中的中档产品，记得似乎不到2000块。全家对这个炒菜机器人的态度由怀疑，到相信，再到现在的离不开，可以说是发生了彻底的改变。不过这款貌似简单的机器人，做的一些菜比手工做的还好吃，以至于在英国认识的好多朋友家中都有着类似的产品。</p><p>除了炒菜机器人之外，家中还有另外一个使用频率超级高的扫地机器人。这是小米家的产品，感觉非常智能。能够非常高效的计划路线，避开障碍物，自动提示垃圾袋满，自动回充。整个扫地的过程非常快，而且还能把我们平时不易清扫的一些死角打扫的非常干净。</p><p>最受孩子们喜欢的是刚买不久的Google Home Hub。它有点类似于Amazon Alexa。它和Google的系列产品整合的非常好。每天孩子们起床后第一件事就是来调戏Google。让我们不得不在他们写作业的时候让Google先关机休息一会儿。</p><p>感觉我们生活中已经越来越多的被这些智能设备所充斥了。这些智能设别为我们的生活带来了诸多便利。出差了，可以让智能家居管理家中电器，给人一种主人在家的感觉。下班到家了，智能家居可以自动开灯，并提前把饭菜做好。</p><p>智能家居带来的诸多好处是不言而喻的，但似乎在慢慢把人们变成了什么都不会做，也不想做的懒人了？</p>]]></content>
    
    <summary type="html">
    
      人工智能离我们多远不好说，但各种智能家居已经成为现在进行时
    
    </summary>
    
      <category term="生活" scheme="https://www.aafeng.uk/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="智能家居" scheme="https://www.aafeng.uk/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
  </entry>
  
</feed>
